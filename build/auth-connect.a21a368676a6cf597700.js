webpackJsonp([1],{

/***/ 1563:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = stringify;\n/**\n * Flips an alphabet into a character lookup table.\n */\nfunction makeCodes (chars) {\n  var out = {}\n  for (var i = 0; i < chars.length; ++i) {\n    out[chars.charAt(i)] = i\n  }\n  return out\n}\n\nfunction gcd (a, b) {\n  return b === 0 ? a : gcd(b, a % b)\n}\n\nfunction parse (string, encoding, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  if (encoding.codes == null) {\n    encoding.codes = makeCodes(encoding.chars)\n  }\n\n  // Count the padding bytes:\n  var end = string.length\n  while (string.charAt(end - 1) === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  var constructor = opts.out != null ? opts.out : Array\n  var out = new constructor(end * encoding.bits / 8 | 0)\n\n  // Parse the data:\n  var bits = 0 // Number of bits currently in the buffer\n  var buffer = 0 // Bits waiting to be written out, MSB first\n  var written = 0 // Next byte to write\n  for (var i = 0; i < end; ++i) {\n    // Read one character from the string:\n    var value = encoding.codes[string.charAt(i)]\n    if (value === void 0) {\n      throw new SyntaxError('Invalid character ' + string.charAt(i))\n    }\n\n    // Append the bits to the buffer:\n    bits += encoding.bits\n    buffer = buffer << encoding.bits | value\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & buffer >> bits\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  var leftover = 0xff & buffer << 8 - bits\n  if (bits >= encoding.bits || leftover) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  // Verify padding:\n  if (!opts.loose) {\n    var maxPad = 8 * encoding.bits / gcd(8, encoding.bits)\n    var padding = (string.length - end) * encoding.bits\n    if (padding >= maxPad || padding + bits & 7) {\n      throw new SyntaxError('Invalid padding')\n    }\n  }\n\n  return out\n}\n\nfunction stringify (data, encoding, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  var out = ''\n\n  var bits = 0 // Number of bits currently in the buffer\n  var buffer = 0 // Bits waiting to be written out, MSB first\n  var mask = (1 << encoding.bits) - 1\n  for (var i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = buffer << 8 | 0xff & data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > encoding.bits) {\n      bits -= encoding.bits\n      out += encoding.chars[mask & buffer >> bits]\n    }\n  }\n\n  // Partial character:\n  if (bits) {\n    out += encoding.chars[mask & buffer << encoding.bits - bits]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  while (out.length * encoding.bits & 7) {\n    out += '='\n  }\n\n  return out\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvY29kZWMuanM/MzVmZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxNTYzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGbGlwcyBhbiBhbHBoYWJldCBpbnRvIGEgY2hhcmFjdGVyIGxvb2t1cCB0YWJsZS5cbiAqL1xuZnVuY3Rpb24gbWFrZUNvZGVzIChjaGFycykge1xuICB2YXIgb3V0ID0ge31cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaGFycy5sZW5ndGg7ICsraSkge1xuICAgIG91dFtjaGFycy5jaGFyQXQoaSldID0gaVxuICB9XG4gIHJldHVybiBvdXRcbn1cblxuZnVuY3Rpb24gZ2NkIChhLCBiKSB7XG4gIHJldHVybiBiID09PSAwID8gYSA6IGdjZChiLCBhICUgYilcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlIChzdHJpbmcsIGVuY29kaW5nLCBvcHRzKSB7XG4gIGlmICggb3B0cyA9PT0gdm9pZCAwICkgb3B0cyA9IHt9O1xuXG4gIGlmIChlbmNvZGluZy5jb2RlcyA9PSBudWxsKSB7XG4gICAgZW5jb2RpbmcuY29kZXMgPSBtYWtlQ29kZXMoZW5jb2RpbmcuY2hhcnMpXG4gIH1cblxuICAvLyBDb3VudCB0aGUgcGFkZGluZyBieXRlczpcbiAgdmFyIGVuZCA9IHN0cmluZy5sZW5ndGhcbiAgd2hpbGUgKHN0cmluZy5jaGFyQXQoZW5kIC0gMSkgPT09ICc9Jykge1xuICAgIC0tZW5kXG4gIH1cblxuICAvLyBBbGxvY2F0ZSB0aGUgb3V0cHV0OlxuICB2YXIgY29uc3RydWN0b3IgPSBvcHRzLm91dCAhPSBudWxsID8gb3B0cy5vdXQgOiBBcnJheVxuICB2YXIgb3V0ID0gbmV3IGNvbnN0cnVjdG9yKGVuZCAqIGVuY29kaW5nLmJpdHMgLyA4IHwgMClcblxuICAvLyBQYXJzZSB0aGUgZGF0YTpcbiAgdmFyIGJpdHMgPSAwIC8vIE51bWJlciBvZiBiaXRzIGN1cnJlbnRseSBpbiB0aGUgYnVmZmVyXG4gIHZhciBidWZmZXIgPSAwIC8vIEJpdHMgd2FpdGluZyB0byBiZSB3cml0dGVuIG91dCwgTVNCIGZpcnN0XG4gIHZhciB3cml0dGVuID0gMCAvLyBOZXh0IGJ5dGUgdG8gd3JpdGVcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmQ7ICsraSkge1xuICAgIC8vIFJlYWQgb25lIGNoYXJhY3RlciBmcm9tIHRoZSBzdHJpbmc6XG4gICAgdmFyIHZhbHVlID0gZW5jb2RpbmcuY29kZXNbc3RyaW5nLmNoYXJBdChpKV1cbiAgICBpZiAodmFsdWUgPT09IHZvaWQgMCkge1xuICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdJbnZhbGlkIGNoYXJhY3RlciAnICsgc3RyaW5nLmNoYXJBdChpKSlcbiAgICB9XG5cbiAgICAvLyBBcHBlbmQgdGhlIGJpdHMgdG8gdGhlIGJ1ZmZlcjpcbiAgICBiaXRzICs9IGVuY29kaW5nLmJpdHNcbiAgICBidWZmZXIgPSBidWZmZXIgPDwgZW5jb2RpbmcuYml0cyB8IHZhbHVlXG5cbiAgICAvLyBXcml0ZSBvdXQgc29tZSBiaXRzIGlmIHRoZSBidWZmZXIgaGFzIGEgYnl0ZSdzIHdvcnRoOlxuICAgIGlmIChiaXRzID49IDgpIHtcbiAgICAgIGJpdHMgLT0gOFxuICAgICAgb3V0W3dyaXR0ZW4rK10gPSAweGZmICYgYnVmZmVyID4+IGJpdHNcbiAgICB9XG4gIH1cblxuICAvLyBWZXJpZnkgdGhhdCB3ZSBoYXZlIHJlY2VpdmVkIGp1c3QgZW5vdWdoIGJpdHM6XG4gIHZhciBsZWZ0b3ZlciA9IDB4ZmYgJiBidWZmZXIgPDwgOCAtIGJpdHNcbiAgaWYgKGJpdHMgPj0gZW5jb2RpbmcuYml0cyB8fCBsZWZ0b3Zlcikge1xuICAgIHRocm93IG5ldyBTeW50YXhFcnJvcignVW5leHBlY3RlZCBlbmQgb2YgZGF0YScpXG4gIH1cblxuICAvLyBWZXJpZnkgcGFkZGluZzpcbiAgaWYgKCFvcHRzLmxvb3NlKSB7XG4gICAgdmFyIG1heFBhZCA9IDggKiBlbmNvZGluZy5iaXRzIC8gZ2NkKDgsIGVuY29kaW5nLmJpdHMpXG4gICAgdmFyIHBhZGRpbmcgPSAoc3RyaW5nLmxlbmd0aCAtIGVuZCkgKiBlbmNvZGluZy5iaXRzXG4gICAgaWYgKHBhZGRpbmcgPj0gbWF4UGFkIHx8IHBhZGRpbmcgKyBiaXRzICYgNykge1xuICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdJbnZhbGlkIHBhZGRpbmcnKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSAoZGF0YSwgZW5jb2RpbmcsIG9wdHMpIHtcbiAgaWYgKCBvcHRzID09PSB2b2lkIDAgKSBvcHRzID0ge307XG5cbiAgdmFyIG91dCA9ICcnXG5cbiAgdmFyIGJpdHMgPSAwIC8vIE51bWJlciBvZiBiaXRzIGN1cnJlbnRseSBpbiB0aGUgYnVmZmVyXG4gIHZhciBidWZmZXIgPSAwIC8vIEJpdHMgd2FpdGluZyB0byBiZSB3cml0dGVuIG91dCwgTVNCIGZpcnN0XG4gIHZhciBtYXNrID0gKDEgPDwgZW5jb2RpbmcuYml0cykgLSAxXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7ICsraSkge1xuICAgIC8vIFNsdXJwIGRhdGEgaW50byB0aGUgYnVmZmVyOlxuICAgIGJ1ZmZlciA9IGJ1ZmZlciA8PCA4IHwgMHhmZiAmIGRhdGFbaV1cbiAgICBiaXRzICs9IDhcblxuICAgIC8vIFdyaXRlIG91dCBhcyBtdWNoIGFzIHdlIGNhbjpcbiAgICB3aGlsZSAoYml0cyA+IGVuY29kaW5nLmJpdHMpIHtcbiAgICAgIGJpdHMgLT0gZW5jb2RpbmcuYml0c1xuICAgICAgb3V0ICs9IGVuY29kaW5nLmNoYXJzW21hc2sgJiBidWZmZXIgPj4gYml0c11cbiAgICB9XG4gIH1cblxuICAvLyBQYXJ0aWFsIGNoYXJhY3RlcjpcbiAgaWYgKGJpdHMpIHtcbiAgICBvdXQgKz0gZW5jb2RpbmcuY2hhcnNbbWFzayAmIGJ1ZmZlciA8PCBlbmNvZGluZy5iaXRzIC0gYml0c11cbiAgfVxuXG4gIC8vIEFkZCBwYWRkaW5nIGNoYXJhY3RlcnMgdW50aWwgd2UgaGl0IGEgYnl0ZSBib3VuZGFyeTpcbiAgd2hpbGUgKG91dC5sZW5ndGggKiBlbmNvZGluZy5iaXRzICYgNykge1xuICAgIG91dCArPSAnPSdcbiAgfVxuXG4gIHJldHVybiBvdXRcbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JmYzQ2NDgvbGliL2NvZGVjLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTYzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1563\n");

/***/ }),

/***/ 1564:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return MarketStatusOpen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return MarketStatusReported; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return MarketStatusClosed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return CreateMarketEdit; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return IconSearch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return Ledger; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Airbitz; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return uPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return Trezor; });\n/* unused harmony export Keystore */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return Key; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return Metamask; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return Alert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return CheckboxOff; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return CheckboxOn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return Export; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n\n\nvar MarketStatusOpen = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { fill: \"none\", fillRule: \"evenodd\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"Markets/Card/Binary\", stroke: \"#9B8BF5\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"Icon/Open\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"circle\", { id: \"Oval-5\", cx: \"12\", cy: \"12\", r: \"4\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"circle\", { id: \"Oval-5\", cx: \"12\", cy: \"12\", r: \"11\" })\n      )\n    )\n  )\n);\n\nvar MarketStatusReported = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"Symbols\", fill: \"none\", fillRule: \"evenodd\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"Markets/Card/Multi\", stroke: \"#412468\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"Icon/Reporting\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"Group\", transform: \"translate(1 1)\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"Page-1\", strokeLinecap: \"round\", strokeLinejoin: \"round\", d: \"M5 11.43l4.708 3.44L17 7\" }),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"circle\", { id: \"Oval-2\", cx: \"11\", cy: \"11\", r: \"11\" })\n        )\n      )\n    )\n  )\n);\n\nvar MarketStatusClosed = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 24 24\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { fill: \"none\", fillRule: \"evenodd\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"Markets/Card/Multi-Long\", stroke: \"#A7A2B2\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"Icon/Closed\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"Group\", transform: \"translate(1 1)\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"circle\", { id: \"Oval-2\", cx: \"11\", cy: \"11\", r: \"11\" }),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { d: \"M3 4l15.5 14.5\", id: \"Line\", strokeLinecap: \"square\" })\n        )\n      )\n    )\n  )\n);\n\nvar CreateMarketEdit = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { viewBox: \"0 0 24 24\", xmlns: \"http://www.w3.org/2000/svg\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"Symbols\", fill: \"none\", fillRule: \"evenodd\", strokeLinejoin: \"round\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"New-Market/Market-Card/2\", stroke: \"#A7A2B2\", fillRule: \"nonzero\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"Icon/Edit\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { d: \"M1 18.417V23h4.583l12.703-12.57-4.583-4.584L1 18.416zM22.643 5.94c.476-.476.476-1.246 0-1.723l-2.86-2.86c-.477-.476-1.247-.476-1.723 0l-2.237 2.237 4.583 4.583 2.237-2.237z\", id: \"Shape\" })\n      )\n    )\n  )\n);\n\nvar IconSearch = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { viewBox: \"0 0 12 12\", xmlns: \"http://www.w3.org/2000/svg\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"Symbols\", fill: \"none\", fillRule: \"evenodd\", fillOpacity: \".5\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"Markets/Header\", fill: \"#FFF\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"Group-5\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { d: \"M8.337 7.402h-.494l-.172-.17c.608-.707.977-1.624.977-2.63C8.647 2.37 6.837.56 4.604.56 2.37.56.56 2.37.56 4.603s1.81 4.043 4.044 4.043c1.004 0 1.92-.368 2.628-.974l.17.17v.493l3.11 3.105.928-.928-3.103-3.11zm-3.733 0c-1.547 0-2.8-1.252-2.8-2.8 0-1.544 1.253-2.798 2.8-2.798 1.545 0 2.8 1.254 2.8 2.8 0 1.546-1.255 2.798-2.8 2.798z\", id: \"Shape\" })\n      )\n    )\n  )\n);\n\nvar Ledger = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"851e3d33-36d6-418a-b807-c2fa479dc650\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 25 25\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \".\\\\32 c7d4756-5441-4b6b-b846-659c95fc7d51 {\\n            fill: none;\\n            stroke: #fff;\\n            stroke-miterlimit: 10;\\n          }\"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"ledger\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", d: \"M19.77,19V24.5h4a.73.73,0,0,0,.73-.73V19Z\" }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"rect\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", x: \"10.68\", y: \"19.05\", width: \"4.73\", height: \"5.45\" }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", d: \"M10.68,14.68H24.5V1.23A.73.73,0,0,0,23.77.5H10.68Z\" }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"rect\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", x: \"0.5\", y: \"11.05\", width: \"5.82\", height: \"3.64\" }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", d: \"M6.32,6.68V.5H1.23a.73.73,0,0,0-.73.73V6.68Z\" }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { className: \"2c7d4756-5441-4b6b-b846-659c95fc7d51\", d: \"M6.32,19H.5v4.73a.73.73,0,0,0,.73.73H6.32Z\" })\n  )\n);\n\nvar Airbitz = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"5146e58a-82e2-4f67-a236-2c765e0c2589\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 45.5 22.01\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \".\\\\35 adafa42-3bbf-42b1-82df-2f38d7915eaf {\\n          fill: #fff;\\n        }\\n\\n        .\\\\31 a8ae57d-82b4-49dc-abba-7ff178064742 {\\n          mask: url(#8e5ba2bf-221c-40d9-b8e1-8d88080f9371);\\n        }\\n\\n        .\\\\31 ae8a9e7-e9b6-43ec-9f04-98e99371b427 {\\n          mask: url(#d01e4ea2-d3bd-49bb-9d51-5c376617b0c4);\\n        }\"\n    ),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"mask\",\n      { id: \"8e5ba2bf-221c-40d9-b8e1-8d88080f9371\", x: \"0\", y: \"0\", width: \"45.5\", height: \"22.01\", maskUnits: \"userSpaceOnUse\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { transform: \"translate(-1 -12.69)\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"c70f333d-4852-43d5-b6b2-d7f3a0373259\", \"data-name\": \"mask-2\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"1efbfaab-efe7-466c-8f4b-d2828857cb32\", \"data-name\": \"path-1\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", points: \"46.5 12.69 46.5 34.7 1 34.7 1 12.69 46.5 12.69 1 12.69 1 34.7 46.5 34.7 46.5 12.69 46.5 12.69\" })\n        )\n      )\n    ),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"mask\",\n      { id: \"d01e4ea2-d3bd-49bb-9d51-5c376617b0c4\", x: \"0\", y: \"0\", width: \"45.5\", height: \"10.28\", maskUnits: \"userSpaceOnUse\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { transform: \"translate(-1 -12.69)\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"a5e84cd7-4cde-46e1-853d-48dffba00e35\", \"data-name\": \"mask-4\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"5ce6f515-967d-42f9-9754-adcebce5d36d\", \"data-name\": \"path-3\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", points: \"46.5 12.69 46.5 22.97 1 22.97 1 12.69 46.5 12.69\" })\n        )\n      )\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Airbitz\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"4781732b-1826-4bd2-8a8f-03decdc48e6d\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"8ed932e2-05f5-4ddf-882c-ad49993aded6\", \"data-name\": \"Icon/Airbitz\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"98e1bbc2-eee8-4a8e-8f94-2e8f97a9b718\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"d83155ee-0e75-4d4d-bc06-12db352f3101\", \"data-name\": \"Group-3\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"g\",\n            { className: \"1a8ae57d-82b4-49dc-abba-7ff178064742\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"a899a67f-825e-4188-a9a4-6506a85fbe77\", \"data-name\": \"Fill-1\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", d: \"M34.88,34.23a4,4,0,0,0-.38-.52,15.39,15.39,0,0,0-17.86-2.65A14.92,14.92,0,0,0,13,33.73a.8.8,0,0,0-.23.6c.08.44.57.48.95.11a13.45,13.45,0,0,1,5.24-3.28,14.14,14.14,0,0,1,13.52,2.12c.5.37.94.83,1.43,1.22a.76.76,0,0,0,.57.13c.15,0,.26-.25.42-.42m5.85-5.87a5.23,5.23,0,0,0-.48-.61,23.25,23.25,0,0,0-19.44-6.52,23,23,0,0,0-13.55,6.5,2.22,2.22,0,0,0-.31.34A.45.45,0,0,0,7,28.7a.49.49,0,0,0,.66,0,2,2,0,0,0,.23-.22,22.3,22.3,0,0,1,19.28-6.2A21.49,21.49,0,0,1,37.88,27c.64.51,1.21,1.1,1.84,1.62a.83.83,0,0,0,.61.14c.14,0,.24-.24.4-.42M23.37,12.69c-.8.06-2,.11-3.13.23A31,31,0,0,0,8.75,16.46,31.69,31.69,0,0,0,1.28,22c-.34.34-.36.62-.11.85s.52.16.84-.14c.7-.64,1.37-1.31,2.11-1.9A30.39,30.39,0,0,1,31,14.62a29.82,29.82,0,0,1,14.43,8,2,2,0,0,0,.21.2.49.49,0,0,0,.68,0,.45.45,0,0,0,0-.66,4.6,4.6,0,0,0-.39-.41,32.1,32.1,0,0,0-22.61-9.05\", transform: \"translate(-1 -12.69)\" })\n          )\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"ffda8b8f-e469-4a2e-acae-896545f5e4bf\", \"data-name\": \"Group-6\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            \"g\",\n            { className: \"1ae8a9e7-e9b6-43ec-9f04-98e99371b427\" },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"2939735f-6a50-444a-84ff-7df7fef1db0b\", \"data-name\": \"Fill-4\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", d: \"M23.37,12.69A32.11,32.11,0,0,1,46,21.74a4.7,4.7,0,0,1,.39.41.45.45,0,0,1,0,.66.49.49,0,0,1-.68,0,2.09,2.09,0,0,1-.21-.2,29.81,29.81,0,0,0-14.43-8A30.39,30.39,0,0,0,4.13,20.79c-.74.59-1.41,1.26-2.11,1.9-.33.3-.6.36-.84.14s-.23-.52.11-.85a31.71,31.71,0,0,1,7.48-5.52,31,31,0,0,1,11.48-3.54c1.16-.12,2.34-.17,3.13-.23\", transform: \"translate(-1 -12.69)\" })\n          )\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"1aa7fcc8-1631-49ef-a64b-ebdcbd3ee740\", \"data-name\": \"Fill-7\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", d: \"M40.73,28.35c-.16.18-.26.4-.4.42a.83.83,0,0,1-.61-.14c-.63-.52-1.2-1.11-1.84-1.62a21.5,21.5,0,0,0-10.69-4.7,22.3,22.3,0,0,0-19.28,6.2,2,2,0,0,1-.23.22.49.49,0,0,1-.66,0,.46.46,0,0,1-.07-.64,2.21,2.21,0,0,1,.31-.34,23,23,0,0,1,13.55-6.5,23.25,23.25,0,0,1,19.44,6.52,5.23,5.23,0,0,1,.48.61\", transform: \"translate(-1 -12.69)\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"d0df3d2c-071d-430d-8cc6-3583fe00819c\", \"data-name\": \"Fill-9\", className: \"5adafa42-3bbf-42b1-82df-2f38d7915eaf\", d: \"M34.88,34.23c-.16.17-.27.38-.42.42a.76.76,0,0,1-.57-.13c-.49-.39-.93-.85-1.43-1.22a14.14,14.14,0,0,0-13.52-2.12,13.45,13.45,0,0,0-5.24,3.28c-.37.37-.86.32-.95-.11a.8.8,0,0,1,.23-.6,14.92,14.92,0,0,1,3.66-2.68A15.39,15.39,0,0,1,34.5,33.71a4,4,0,0,1,.38.52\", transform: \"translate(-1 -12.69)\" })\n      )\n    )\n  )\n);\n\nvar uPort = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"d05ce26b-14ad-4d9e-84cb-0faf489e50ed\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 46 43.91\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \".c1e77bc5-3c90-498e-85ed-fc6667b0786b {\\n          fill: #fff;\\n          }\"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"uPort\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"e525033e-a215-4d86-bd7d-3d09aa3316c5\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"0ea812fb-f990-460d-8a38-16623e033680\", \"data-name\": \"Icon/uPort\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"e50b6249-4d84-49dd-aa5b-80b6eca43cf7\", \"data-name\": \"Page-1\", className: \"c1e77bc5-3c90-498e-85ed-fc6667b0786b\", d: \"M35.93,34.16c1.32-.85,1.46-1.88.21-2.67a31.1,31.1,0,0,0-3.88-1.81,8.1,8.1,0,0,0-.92-.28c.27-.49.48-.92.74-1.31a.62.62,0,0,1,.44-.21h.07a11.53,11.53,0,0,1,5,2.41,3.15,3.15,0,0,1-.14,5.06,12.64,12.64,0,0,1-5.7,2.51,37,37,0,0,1-7.85.87,31.76,31.76,0,0,1-8.69-1.19,15.3,15.3,0,0,1-4.42-2.1c-2.06-1.42-2-3.7-.14-5.32a11.83,11.83,0,0,1,4.76-2.23h.06a.74.74,0,0,1,.5.26,9.19,9.19,0,0,1,.6,1c-1.63.78-3.23,1.4-4.67,2.27-1.27.77-1.13,1.84.17,2.66,1.8-1.84,4.23-2.08,6.58-2.48h.1a2.2,2.2,0,0,1,.89.34A9.34,9.34,0,0,0,24,33.15a8.25,8.25,0,0,0,3.49-.79,5.66,5.66,0,0,1,2.41-.6,5,5,0,0,1,1.27.17c1.74.46,3.52.79,4.78,2.22M24,31.33h0a7.21,7.21,0,1,1,0-14.41H24A7.21,7.21,0,1,1,24,31.33M24,2a1.55,1.55,0,0,0-.89.28,4.27,4.27,0,0,0-1,1.21Q11.84,19.05,1.65,34.63C.54,36.33.83,37.28,2.71,38l20.17,7.6c.36.14.74.21,1.11.32.38-.11.74-.17,1.07-.3l20.33-7.67c1.74-.66,2-1.65,1-3.19l-14-21.37Q29,8.19,25.63,3A2,2,0,0,0,24,2m5.81,28.05,1.25.37.37.1a3.4,3.4,0,0,1,.42.13l1.13.49a18,18,0,0,1,2.62,1.26,1.3,1.3,0,0,1,.36.3A10.37,10.37,0,0,0,32,31l-.53-.14a5.93,5.93,0,0,0-1.54-.21,5.7,5.7,0,0,0-.95.08,8.36,8.36,0,0,0,.85-.72m-11.9-.32a8.45,8.45,0,0,0,.91.84h-.08l-.28,0-.68.11a12.3,12.3,0,0,0-5.69,2,1.09,1.09,0,0,1,.36-.3,28.75,28.75,0,0,1,3.06-1.53l1.51-.7.89-.43M16.21,27a1.69,1.69,0,0,0-.77-.2,1.33,1.33,0,0,0-.34,0,12.94,12.94,0,0,0-5.18,2.45A4.59,4.59,0,0,0,8.14,33a4.31,4.31,0,0,0,2,3.31,16.24,16.24,0,0,0,4.74,2.25,32.94,32.94,0,0,0,9,1.24,38.19,38.19,0,0,0,8.07-.9,13.8,13.8,0,0,0,6.17-2.74,4.53,4.53,0,0,0,1.72-3.31,4.47,4.47,0,0,0-1.55-3.34,12.58,12.58,0,0,0-5.4-2.66,1.33,1.33,0,0,0-.36,0,1.74,1.74,0,0,0-.73.18,8.16,8.16,0,0,0,.51-2.83,8.33,8.33,0,0,0-8.25-8.32H24A8.28,8.28,0,0,0,16.21,27M24,3.07a1,1,0,0,1,.76.53q2.63,4,5.24,8L31.54,14l5.17,7.9,8.82,13.47c.46.7.41,1,.39,1s-.13.29-.91.59L24.68,44.61a5.62,5.62,0,0,1-.59.17l-.1,0-.09,0a6.28,6.28,0,0,1-.65-.19L3.09,37c-.89-.34-1-.6-1-.63S2,36,2.54,35.22l4.88-7.46Q15.18,15.92,22.94,4.07a3.47,3.47,0,0,1,.76-.91A.48.48,0,0,1,24,3.07\", transform: \"translate(-1 -2)\" })\n    )\n  )\n);\n\nvar Trezor = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"95007830-37d6-4982-8573-1f6d27b2f0dd\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 30.28 45.2\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \".\\\\33 e03130b-26ad-44ba-9a96-afce36420a03 {\\n            fill: none;\\n            stroke: #fff;\\n          }\"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Trezor\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"053ac296-c68d-46df-b61c-170cfcd30748\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"a9ff1b5b-ad6d-4890-8b84-13afa64d537d\", \"data-name\": \"Icon/Trezor\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"34d6c3e5-5684-402c-982b-e7ed12c2fb56\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"da272c69-7d51-4842-933a-edff0f4f6a71\", \"data-name\": \"Stroke-1\", className: \"3e03130b-26ad-44ba-9a96-afce36420a03\", d: \"M35.34,18.57V13.7a11.78,11.78,0,0,0-23.56,0v4.87Q17.67,18,23.56,18T35.34,18.57Z\", transform: \"translate(-8.42 -1.42)\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"75d68b99-d377-4392-9a37-cbc55eba2e6a\", \"data-name\": \"Stroke-3\", className: \"3e03130b-26ad-44ba-9a96-afce36420a03\", d: \"M11.78,18.57c-1,.09-1.9.18-2.86.3V40l14.93,6.08L38.2,40V18.87c-1-.11-1.9-.21-2.86-.3\", transform: \"translate(-8.42 -1.42)\" })\n      )\n    )\n  )\n);\n\nvar Keystore = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"d7c32dda-f36e-456a-9079-f98a93957648\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 32.8 45.87\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .\\\\34 c40df67-28a7-4a63-8b5b-b71b5465b1d2 {\\n            fill: #fff;\\n          }\\n\\n          .b86f50e5-9448-4f13-acb3-2e5ce5cb5c88 {\\n            mask: url(#d745dd27-237d-4b73-8097-e409b9656b0d);\\n          }\\n        \"\n    ),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"mask\",\n      { id: \"d745dd27-237d-4b73-8097-e409b9656b0d\", x: \"0\", y: \"0\", width: \"32.8\", height: \"45.87\", maskUnits: \"userSpaceOnUse\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { transform: \"translate(-7 -1)\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"4708e3e3-8419-4e42-93ac-d8099574375a\", \"data-name\": \"mask-2\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"d947e9fc-cd44-4d8e-82a8-25ea2ec44ef6\", \"data-name\": \"path-1\", className: \"4c40df67-28a7-4a63-8b5b-b71b5465b1d2\", points: \"39.8 46.87 39.8 1 7 1 7 46.87 39.8 46.87\" })\n        )\n      )\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Keystore\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"9a6727d5-4c46-4752-beaa-86185de6066c\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"74dc2734-732e-49ba-a63f-42a6a6a5a65d\", \"data-name\": \"Icon/Keystore\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"81659e52-4b0a-43f3-af99-a2849a814b35\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { className: \"b86f50e5-9448-4f13-acb3-2e5ce5cb5c88\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"739fafef-728f-4419-a199-b2c0392606ca\", \"data-name\": \"Fill-1\", className: \"4c40df67-28a7-4a63-8b5b-b71b5465b1d2\", d: \"M29.23,11.39h8.59L29.23,2.94Zm9.5,1.09H28.95c-.62,0-.78-.16-.78-.77q0-4.59,0-9.19V2.08H8.08v43.7H38.73ZM7,23.9V1.83c0-.68.15-.83.84-.83H28.41a1.15,1.15,0,0,1,.87.36q5.07,5,10.16,10a1.1,1.1,0,0,1,.36.86q0,16.91,0,33.82c0,.68-.14.82-.84.82H7.84c-.69,0-.84-.14-.84-.83Z\", transform: \"translate(-7 -1)\" })\n        )\n      )\n    )\n  )\n);\n\nvar Key = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"986dc871-bd7c-4cd5-a999-a53f5690d6ab\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 44.93 32.02\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .dcf9129a-67e1-4c58-a125-e1bb2403b70c {\\n            fill: #fff;\\n          }\\n\\n          .\\\\30 1e2ccdd-4c3f-4d69-9ea0-7fda68f93707 {\\n            mask: url(#c9d7d845-6b4c-437b-973b-584e80f5db37);\\n          }\\n        \"\n    ),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"mask\",\n      { id: \"c9d7d845-6b4c-437b-973b-584e80f5db37\", x: \"-1.44\", y: \"-0.62\", width: \"47.7\", height: \"32.89\", maskUnits: \"userSpaceOnUse\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { transform: \"translate(-1.5 -10.62)\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"bedc9bc9-7454-447f-ba14-70b9f3bc2325\", \"data-name\": \"mask-2\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"7d4e6d25-d732-4fea-8f25-dfda7a71fbd0\", \"data-name\": \"path-1\", className: \"dcf9129a-67e1-4c58-a125-e1bb2403b70c\", points: \"2.14 10 0.06 39.7 45.69 42.89 47.76 13.19 2.14 10\" })\n        )\n      )\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Key\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"68d4e0f8-a82b-4bc2-a984-abe467433c09\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"da4ef49b-c5a5-4957-8f63-62f92d56d2ee\", \"data-name\": \"Icon/Key\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"2f65728b-36d5-460c-9c20-e0c82f228079\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { className: \"01e2ccdd-4c3f-4d69-9ea0-7fda68f93707\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"9591d5cc-ef25-49b8-95f7-0379a74d07af\", \"data-name\": \"Fill-1\", className: \"dcf9129a-67e1-4c58-a125-e1bb2403b70c\", d: \"M18,16.25a8.2,8.2,0,0,0-10.7-3.91,7.72,7.72,0,0,0-4,10.33A8.21,8.21,0,0,0,14,26.6a7.7,7.7,0,0,0,4-10.35m27.25,16.5-8.09-3-.14.33-2.57,6.67a1.61,1.61,0,0,1-.15.33.51.51,0,0,1-.65.2.47.47,0,0,1-.32-.58,2.31,2.31,0,0,1,.12-.34L36,29.76a2.77,2.77,0,0,1,.17-.32L19,23.16A9.25,9.25,0,0,1,7,27.57,8.8,8.8,0,0,1,2,16.38,9.18,9.18,0,0,1,12.92,10.9a8.9,8.9,0,0,1,6.43,11.27,3.16,3.16,0,0,1,.43.1l26,9.49c.75.27.8.4.52,1.13L42.74,42a2.08,2.08,0,0,1-.14.33.51.51,0,0,1-.67.23.48.48,0,0,1-.31-.59,2.09,2.09,0,0,1,.12-.34L45,33.1c0-.12.12-.24.17-.35\", transform: \"translate(-1.5 -10.62)\" })\n        )\n      )\n    )\n  )\n);\n\nvar Metamask = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"c4506631-ac2b-422f-a95b-84a8a4c4482a\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 41.89 45.08\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .\\\\36 2c8b009-d5dc-4d34-b47d-9b2663c59e03, .a77395d2-2c0c-4381-9940-a909fb55ffd3 {\\n            fill: none;\\n            stroke: #fff;\\n            strokeLinejoin: round;\\n          }\\n\\n          .a77395d2-2c0c-4381-9940-a909fb55ffd3 {\\n            strokeLinecap: round;\\n          }\\n        \"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Metamask\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"d298480b-ab61-442c-9693-56e6bc77e210\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"498f43ba-ff6a-4d7a-a447-f176e542e633\", \"data-name\": \"Icon/Metamask\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"0fa8c596-f75b-4e5f-b8dd-406a311cf7f6\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"00607a21-9cef-4a9c-9bdb-f783ebf11a71\", \"data-name\": \"Group-5\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"b39a4b7d-97f6-4f21-b47f-b27ad33a82c4\", \"data-name\": \"Stroke-1\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"13.24 0.5 18.02 6.34 26.52 6.34 40.86 2.62 36.61 13.78 38.2 15.37 37.14 16.43 38.2 16.96 37.14 18.02 37.67 19.62 36.28 22.54 36.08 25.46 36.61 29.18 36.61 33.42 39.8 37.14 41.39 38.2 40.33 40.86 37.14 44.58 31.3 44.58 17.88 39.92 4.22 44.58 0.5 35.02 5.81 22.8 3.69 20.68 5.28 20.15 2.62 18.56 4.75 18.02 2.09 16.43 3.69 15.9 3.69 13.24 6.87 6.87 13.24 0.5\" }),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"304d2004-82b8-43d4-b4ff-1af5aed312a7\", \"data-name\": \"Stroke-3\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"40.06 37.41 37.41 37.41 36.88 38.47 36.88 41.66 40.01 41.17\" })\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"67fe00ad-2767-49c5-8557-9e1b3030e1c1\", \"data-name\": \"Stroke-6\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"34.22 26.25 35.28 28.38 33.69 28.91 34.22 26.25\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"f0b6dbd3-0bf4-47d2-891f-9900aeba1030\", \"data-name\": \"Stroke-7\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"24.13 26.79 26.25 29.97 20.41 28.91 24.13 26.79\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"ea9aaffe-ae35-44e0-a60f-2cc205d607d6\", \"data-name\": \"Stroke-8\", className: \"62c8b009-d5dc-4d34-b47d-9b2663c59e03\", points: \"17.76 6.08 22.01 12.98 13.51 22.54 5.54 23.07\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"8940912d-65b4-40d4-899b-a86fe3b92c36\", \"data-name\": \"Stroke-9\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"21.48 33.16 36.88 37.94 17.88 39.91\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"0ea7cb76-fe1b-4713-b139-91e8a28603e9\", \"data-name\": \"Stroke-10\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"21.48 33.16 15.1 26.79 13.51 22.54\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"cbfb7bf6-3149-4b6a-9cc4-f2dec64acb3b\", \"data-name\": \"Stroke-11\", className: \"a77395d2-2c0c-4381-9940-a909fb55ffd3\", points: \"36.88 37.94 28.91 30.5 27.32 26.25 22.01 12.98\" })\n      )\n    )\n  )\n);\n\nvar Alert = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"a26f05d9-644c-4f17-afbc-46d4647e9dc7\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 37.48 37.48\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .d4f2b59f-7178-4786-9bb7-fd6cf8b75d6d {\\n            fill: none;\\n            stroke: #fff;\\n          }\\n\\n          .ce4ea548-02b7-4ef0-aceb-1c5c55ba77a5 {\\n            fill: #fff;\\n          }\\n        \"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Alert\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"77f1ff9b-fa1c-4c5c-8c21-5153f0872de8\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"20f98d0f-af34-46a2-9e12-54de87a1d961\", \"data-name\": \"Icon/Alert\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"4d653298-4d39-40cf-88e1-0ea89eb0f0a5\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"c113668e-527a-4708-a6e6-731f7cebddbe\", \"data-name\": \"Stroke-1\", className: \"d4f2b59f-7178-4786-9bb7-fd6cf8b75d6d\", d: \"M18.78,2.54a1.31,1.31,0,0,1,2.41,0l8.43,16.65L38,35.84a1.6,1.6,0,0,1-1.2,2.38H3.13a1.6,1.6,0,0,1-1.2-2.38l8.42-16.65Z\", transform: \"translate(-1.24 -1.24)\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"2100dda0-6ebb-4d99-bf1e-7c24d4217c99\", \"data-name\": \"Fill-3\", className: \"ce4ea548-02b7-4ef0-aceb-1c5c55ba77a5\", d: \"M20.6,27.52H19.36l-.2-11.71h1.66ZM19.12,32.1h1.72V30.17H19.12Z\", transform: \"translate(-1.24 -1.24)\" })\n      )\n    )\n  )\n);\n\nvar CheckboxOff = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"13de3723-afc4-43e5-966e-01b702ca5297\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 21.16 21.16\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .\\\\32 c905fc7-7c65-4dc2-9b42-80d0c16bf440 {\\n            fill: none;\\n            stroke: #dbdae1;\\n          }\\n        \"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Checkbox off\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"6247de90-74a6-45ea-a21d-97996a0bbca7\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"311a987f-edbc-411a-82a6-6412bd7ac823\", \"data-name\": \"Icon/Checkbox-off\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"27769802-1472-48d7-b9ce-ebd8904a8e2b\", \"data-name\": \"Page-1\", className: \"2c905fc7-7c65-4dc2-9b42-80d0c16bf440\", d: \"M21.32,22H2.84A.84.84,0,0,1,2,21.16V2.68a.84.84,0,0,1,.84-.84H21.32a.84.84,0,0,1,.84.84V21.16A.84.84,0,0,1,21.32,22Z\", transform: \"translate(-1.5 -1.34)\" })\n    )\n  )\n);\n\nvar CheckboxOn = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"9777b652-807f-44b2-b0f5-08d8f20182df\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 21.95 21.95\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .ca26950d-c854-49b5-8612-bc2195287f01 {\\n            fill: #fff;\\n          }\\n\\n          .b4f8e674-bfe0-4f87-834c-84e3e215014d {\\n            mask: url(#74980403-58c9-4bea-810f-348232e431af);\\n          }\\n\\n          .f24bbc3a-6b13-49c2-b214-429ae7463706 {\\n            fill: #dbdae1;\\n          }\\n        \"\n    ),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"mask\",\n      { id: \"74980403-58c9-4bea-810f-348232e431af\", x: \"0\", y: \"0\", width: \"21.95\", height: \"21.95\", maskUnits: \"userSpaceOnUse\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { transform: \"translate(-1 -1)\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { id: \"bee4a8b8-354e-4a0d-a6fa-c5b8ef851f5d\", \"data-name\": \"mask-2\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polygon\", { id: \"b7cecb15-2e1f-4a3e-bfa1-d12baa16cf98\", \"data-name\": \"path-1\", className: \"ca26950d-c854-49b5-8612-bc2195287f01\", points: \"1 1 1 22.95 22.95 22.95 22.95 1 1 1\" })\n        )\n      )\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Checkbox on\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"67926e8a-f89e-418a-8b1c-59a389273db0\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"baee6728-b48c-40bf-819c-51fbe34fc671\", \"data-name\": \"Icon/Checkbox-on\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"db803d01-815f-436a-8d94-24b56c85a525\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          \"g\",\n          { className: \"b4f8e674-bfe0-4f87-834c-84e3e215014d\" },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"ce747c73-65f8-49f8-841a-d76674045203\", \"data-name\": \"Fill-1\", className: \"f24bbc3a-6b13-49c2-b214-429ae7463706\", d: \"M20.54,6.89l-10,10.8a.46.46,0,0,1-.61.06L3.47,13A.46.46,0,1,1,4,12.29l6.13,4.48,9.73-10.5a.46.46,0,1,1,.67.62M22,1H1.91A.91.91,0,0,0,1,1.91V22a.91.91,0,0,0,.91.91H22A.91.91,0,0,0,23,22V1.91A.91.91,0,0,0,22,1\", transform: \"translate(-1 -1)\" })\n        )\n      )\n    )\n  )\n);\n\nvar Export = __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n  \"svg\",\n  { id: \"953e0014-1cef-4429-aafa-e42c291ab42f\", \"data-name\": \"Layer 1\", xmlns: \"http://www.w3.org/2000/svg\", viewBox: \"0 0 22 21.56\" },\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"defs\",\n    null,\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"style\",\n      null,\n      \"\\n          .\\\\32 275d31d-f7ee-42a6-8027-90262a5b4750 {\\n            fill: none;\\n            stroke: #372e4b;\\n            strokeLinecap: round;\\n            strokeLinejoin: round;\\n          }\\n        \"\n    )\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"title\",\n    null,\n    \"Export\"\n  ),\n  __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    \"g\",\n    { id: \"ed372e3a-954b-40ff-afe2-e288566f7a6d\", \"data-name\": \"Symbols\" },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      \"g\",\n      { id: \"80e4e169-eff0-41bb-9bea-04faeddf2370\", \"data-name\": \"Icon/Export\" },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        \"g\",\n        { id: \"c8ed4e46-376e-479a-9db9-b46166ee0f07\", \"data-name\": \"Page-1\" },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"path\", { id: \"1bdd6f72-b4f9-413d-ac0e-f8501b5edd93\", \"data-name\": \"Stroke-1\", className: \"2275d31d-f7ee-42a6-8027-90262a5b4750\", d: \"M12.12,19.52,12,2.62\", transform: \"translate(-1 -2)\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"16a19ee2-560a-4a11-903f-2c575013af1c\", \"data-name\": \"Stroke-3\", className: \"2275d31d-f7ee-42a6-8027-90262a5b4750\", points: \"6.89 4.61 11 0.5 15.11 4.61\" }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"polyline\", { id: \"55f5846e-8998-413d-b85b-e148ec0042c5\", \"data-name\": \"Stroke-5\", className: \"2275d31d-f7ee-42a6-8027-90262a5b4750\", points: \"5.5 9.06 0.5 9.06 0.5 21.06 21.5 21.06 21.5 9.06 16.5 9.06\" })\n      )\n    )\n  )\n);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(MarketStatusOpen, \"MarketStatusOpen\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(MarketStatusReported, \"MarketStatusReported\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(MarketStatusClosed, \"MarketStatusClosed\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(CreateMarketEdit, \"CreateMarketEdit\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(IconSearch, \"IconSearch\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Ledger, \"Ledger\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Airbitz, \"Airbitz\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(uPort, \"uPort\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Trezor, \"Trezor\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Keystore, \"Keystore\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Key, \"Key\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Metamask, \"Metamask\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Alert, \"Alert\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(CheckboxOff, \"CheckboxOff\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(CheckboxOn, \"CheckboxOn\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n\n  __REACT_HOT_LOADER__.register(Export, \"Export\", \"/Users/do/augur/dev/augur/src/modules/common/components/icons/icons.jsx\");\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1564\n");

/***/ }),

/***/ 1583:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(17);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _TransitionGroup = __webpack_require__(1587);\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nvar _CSSTransitionGroupChild = __webpack_require__(1625);\n\nvar _CSSTransitionGroupChild2 = _interopRequireDefault(_CSSTransitionGroupChild);\n\nvar _PropTypes = __webpack_require__(1585);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  transitionName: _PropTypes.nameShape.isRequired,\n\n  transitionAppear: _propTypes2.default.bool,\n  transitionEnter: _propTypes2.default.bool,\n  transitionLeave: _propTypes2.default.bool,\n  transitionAppearTimeout: (0, _PropTypes.transitionTimeout)('Appear'),\n  transitionEnterTimeout: (0, _PropTypes.transitionTimeout)('Enter'),\n  transitionLeaveTimeout: (0, _PropTypes.transitionTimeout)('Leave')\n};\n\nvar defaultProps = {\n  transitionAppear: false,\n  transitionEnter: true,\n  transitionLeave: true\n};\n\nvar CSSTransitionGroup = function (_React$Component) {\n  _inherits(CSSTransitionGroup, _React$Component);\n\n  function CSSTransitionGroup() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroup);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._wrapChild = function (child) {\n      return _react2.default.createElement(_CSSTransitionGroupChild2.default, {\n        name: _this.props.transitionName,\n        appear: _this.props.transitionAppear,\n        enter: _this.props.transitionEnter,\n        leave: _this.props.transitionLeave,\n        appearTimeout: _this.props.transitionAppearTimeout,\n        enterTimeout: _this.props.transitionEnterTimeout,\n        leaveTimeout: _this.props.transitionLeaveTimeout\n      }, child);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  // We need to provide this childFactory so that\n  // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n  // leave while it is leaving.\n\n\n  CSSTransitionGroup.prototype.render = function render() {\n    return _react2.default.createElement(_TransitionGroup2.default, _extends({}, this.props, { childFactory: this._wrapChild }));\n  };\n\n  return CSSTransitionGroup;\n}(_react2.default.Component);\n\nCSSTransitionGroup.displayName = 'CSSTransitionGroup';\n\n\nCSSTransitionGroup.propTypes =  true ? propTypes : {};\nCSSTransitionGroup.defaultProps = defaultProps;\n\nexports.default = CSSTransitionGroup;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9DU1NUcmFuc2l0aW9uR3JvdXAuanM/NzI3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UDs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0YsaURBQWlELDBDQUEwQywwREFBMEQsRUFBRTs7QUFFdkosaURBQWlELGFBQWEsdUZBQXVGLEVBQUUsdUZBQXVGOztBQUU5TywwQ0FBMEMsK0RBQStELHFHQUFxRyxFQUFFLHlFQUF5RSxlQUFlLHlFQUF5RSxFQUFFLEVBQUUsdUhBQXVIOztBQUU1ZTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBLG1FQUFtRSxhQUFhO0FBQ2hGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0EsK0VBQStFLGVBQWUsZ0NBQWdDO0FBQzlIOztBQUVBO0FBQ0EsQ0FBQzs7QUFFRDs7O0FBR0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE1ODMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfcmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfVHJhbnNpdGlvbkdyb3VwID0gcmVxdWlyZSgnLi9UcmFuc2l0aW9uR3JvdXAnKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVHJhbnNpdGlvbkdyb3VwKTtcblxudmFyIF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCA9IHJlcXVpcmUoJy4vQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQnKTtcblxudmFyIF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9DU1NUcmFuc2l0aW9uR3JvdXBDaGlsZCk7XG5cbnZhciBfUHJvcFR5cGVzID0gcmVxdWlyZSgnLi91dGlscy9Qcm9wVHlwZXMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgcHJvcFR5cGVzID0ge1xuICB0cmFuc2l0aW9uTmFtZTogX1Byb3BUeXBlcy5uYW1lU2hhcGUuaXNSZXF1aXJlZCxcblxuICB0cmFuc2l0aW9uQXBwZWFyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LmJvb2wsXG4gIHRyYW5zaXRpb25FbnRlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5ib29sLFxuICB0cmFuc2l0aW9uTGVhdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCxcbiAgdHJhbnNpdGlvbkFwcGVhclRpbWVvdXQ6ICgwLCBfUHJvcFR5cGVzLnRyYW5zaXRpb25UaW1lb3V0KSgnQXBwZWFyJyksXG4gIHRyYW5zaXRpb25FbnRlclRpbWVvdXQ6ICgwLCBfUHJvcFR5cGVzLnRyYW5zaXRpb25UaW1lb3V0KSgnRW50ZXInKSxcbiAgdHJhbnNpdGlvbkxlYXZlVGltZW91dDogKDAsIF9Qcm9wVHlwZXMudHJhbnNpdGlvblRpbWVvdXQpKCdMZWF2ZScpXG59O1xuXG52YXIgZGVmYXVsdFByb3BzID0ge1xuICB0cmFuc2l0aW9uQXBwZWFyOiBmYWxzZSxcbiAgdHJhbnNpdGlvbkVudGVyOiB0cnVlLFxuICB0cmFuc2l0aW9uTGVhdmU6IHRydWVcbn07XG5cbnZhciBDU1NUcmFuc2l0aW9uR3JvdXAgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ1NTVHJhbnNpdGlvbkdyb3VwLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBDU1NUcmFuc2l0aW9uR3JvdXAoKSB7XG4gICAgdmFyIF90ZW1wLCBfdGhpcywgX3JldDtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDU1NUcmFuc2l0aW9uR3JvdXApO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLl93cmFwQ2hpbGQgPSBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChfQ1NTVHJhbnNpdGlvbkdyb3VwQ2hpbGQyLmRlZmF1bHQsIHtcbiAgICAgICAgbmFtZTogX3RoaXMucHJvcHMudHJhbnNpdGlvbk5hbWUsXG4gICAgICAgIGFwcGVhcjogX3RoaXMucHJvcHMudHJhbnNpdGlvbkFwcGVhcixcbiAgICAgICAgZW50ZXI6IF90aGlzLnByb3BzLnRyYW5zaXRpb25FbnRlcixcbiAgICAgICAgbGVhdmU6IF90aGlzLnByb3BzLnRyYW5zaXRpb25MZWF2ZSxcbiAgICAgICAgYXBwZWFyVGltZW91dDogX3RoaXMucHJvcHMudHJhbnNpdGlvbkFwcGVhclRpbWVvdXQsXG4gICAgICAgIGVudGVyVGltZW91dDogX3RoaXMucHJvcHMudHJhbnNpdGlvbkVudGVyVGltZW91dCxcbiAgICAgICAgbGVhdmVUaW1lb3V0OiBfdGhpcy5wcm9wcy50cmFuc2l0aW9uTGVhdmVUaW1lb3V0XG4gICAgICB9LCBjaGlsZCk7XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICAvLyBXZSBuZWVkIHRvIHByb3ZpZGUgdGhpcyBjaGlsZEZhY3Rvcnkgc28gdGhhdFxuICAvLyBSZWFjdENTU1RyYW5zaXRpb25Hcm91cENoaWxkIGNhbiByZWNlaXZlIHVwZGF0ZXMgdG8gbmFtZSwgZW50ZXIsIGFuZFxuICAvLyBsZWF2ZSB3aGlsZSBpdCBpcyBsZWF2aW5nLlxuXG5cbiAgQ1NTVHJhbnNpdGlvbkdyb3VwLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KF9UcmFuc2l0aW9uR3JvdXAyLmRlZmF1bHQsIF9leHRlbmRzKHt9LCB0aGlzLnByb3BzLCB7IGNoaWxkRmFjdG9yeTogdGhpcy5fd3JhcENoaWxkIH0pKTtcbiAgfTtcblxuICByZXR1cm4gQ1NTVHJhbnNpdGlvbkdyb3VwO1xufShfcmVhY3QyLmRlZmF1bHQuQ29tcG9uZW50KTtcblxuQ1NTVHJhbnNpdGlvbkdyb3VwLmRpc3BsYXlOYW1lID0gJ0NTU1RyYW5zaXRpb25Hcm91cCc7XG5cblxuQ1NTVHJhbnNpdGlvbkdyb3VwLnByb3BUeXBlcyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IHByb3BUeXBlcyA6IHt9O1xuQ1NTVHJhbnNpdGlvbkdyb3VwLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcblxuZXhwb3J0cy5kZWZhdWx0ID0gQ1NTVHJhbnNpdGlvbkdyb3VwO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9DU1NUcmFuc2l0aW9uR3JvdXAuanNcbi8vIG1vZHVsZSBpZCA9IDE1ODNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1583\n");

/***/ }),

/***/ 1584:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdXRpbC9pbkRPTS5qcz83MDUxIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSIsImZpbGUiOiIxNTg0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gISEodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93LmRvY3VtZW50ICYmIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL3V0aWwvaW5ET00uanNcbi8vIG1vZHVsZSBpZCA9IDE1ODRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1584\n");

/***/ }),

/***/ 1585:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.nameShape = undefined;\nexports.transitionTimeout = transitionTimeout;\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(17);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar nameShape = exports.nameShape = _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  active: _propTypes2.default.string\n}), _propTypes2.default.shape({\n  enter: _propTypes2.default.string,\n  enterActive: _propTypes2.default.string,\n  leave: _propTypes2.default.string,\n  leaveActive: _propTypes2.default.string,\n  appear: _propTypes2.default.string,\n  appearActive: _propTypes2.default.string\n})]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC91dGlscy9Qcm9wVHlwZXMuanM/NDMzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUEsc0NBQXNDLHVDQUF1QyxnQkFBZ0I7O0FBRTdGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwiZmlsZSI6IjE1ODUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLm5hbWVTaGFwZSA9IHVuZGVmaW5lZDtcbmV4cG9ydHMudHJhbnNpdGlvblRpbWVvdXQgPSB0cmFuc2l0aW9uVGltZW91dDtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3Byb3BUeXBlcyA9IHJlcXVpcmUoJ3Byb3AtdHlwZXMnKTtcblxudmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gdHJhbnNpdGlvblRpbWVvdXQodHJhbnNpdGlvblR5cGUpIHtcbiAgdmFyIHRpbWVvdXRQcm9wTmFtZSA9ICd0cmFuc2l0aW9uJyArIHRyYW5zaXRpb25UeXBlICsgJ1RpbWVvdXQnO1xuICB2YXIgZW5hYmxlZFByb3BOYW1lID0gJ3RyYW5zaXRpb24nICsgdHJhbnNpdGlvblR5cGU7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcykge1xuICAgIC8vIElmIHRoZSB0cmFuc2l0aW9uIGlzIGVuYWJsZWRcbiAgICBpZiAocHJvcHNbZW5hYmxlZFByb3BOYW1lXSkge1xuICAgICAgLy8gSWYgbm8gdGltZW91dCBkdXJhdGlvbiBpcyBwcm92aWRlZFxuICAgICAgaWYgKHByb3BzW3RpbWVvdXRQcm9wTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbmV3IEVycm9yKHRpbWVvdXRQcm9wTmFtZSArICcgd2FzblxcJ3Qgc3VwcGxpZWQgdG8gQ1NTVHJhbnNpdGlvbkdyb3VwOiAnICsgJ3RoaXMgY2FuIGNhdXNlIHVucmVsaWFibGUgYW5pbWF0aW9ucyBhbmQgd29uXFwndCBiZSBzdXBwb3J0ZWQgaW4gJyArICdhIGZ1dHVyZSB2ZXJzaW9uIG9mIFJlYWN0LiBTZWUgJyArICdodHRwczovL2ZiLm1lL3JlYWN0LWFuaW1hdGlvbi10cmFuc2l0aW9uLWdyb3VwLXRpbWVvdXQgZm9yIG1vcmUgJyArICdpbmZvcm1hdGlvbi4nKTtcblxuICAgICAgICAvLyBJZiB0aGUgZHVyYXRpb24gaXNuJ3QgYSBudW1iZXJcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb3BzW3RpbWVvdXRQcm9wTmFtZV0gIT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IodGltZW91dFByb3BOYW1lICsgJyBtdXN0IGJlIGEgbnVtYmVyIChpbiBtaWxsaXNlY29uZHMpJyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH07XG59XG5cbnZhciBuYW1lU2hhcGUgPSBleHBvcnRzLm5hbWVTaGFwZSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5zaGFwZSh7XG4gIGVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgbGVhdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBhY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG59KSwgX3Byb3BUeXBlczIuZGVmYXVsdC5zaGFwZSh7XG4gIGVudGVyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgZW50ZXJBY3RpdmU6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICBsZWF2ZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGxlYXZlQWN0aXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYXBwZWFyOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgYXBwZWFyQWN0aXZlOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xufSldKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL3V0aWxzL1Byb3BUeXBlcy5qc1xuLy8gbW9kdWxlIGlkID0gMTU4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1585\n");

/***/ }),

/***/ 1587:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _chainFunction = __webpack_require__(1623);\n\nvar _chainFunction2 = _interopRequireDefault(_chainFunction);\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(17);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _warning = __webpack_require__(95);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ChildMapping = __webpack_require__(1624);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n  component: _propTypes2.default.any,\n  childFactory: _propTypes2.default.func,\n  children: _propTypes2.default.node\n};\n\nvar defaultProps = {\n  component: 'span',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n\nvar TransitionGroup = function (_React$Component) {\n  _inherits(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    _classCallCheck(this, TransitionGroup);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this.performAppear = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillAppear) {\n        component.componentWillAppear(_this._handleDoneAppearing.bind(_this, key, component));\n      } else {\n        _this._handleDoneAppearing(key, component);\n      }\n    };\n\n    _this._handleDoneAppearing = function (key, component) {\n      if (component.componentDidAppear) {\n        component.componentDidAppear();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully appeared. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performEnter = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillEnter) {\n        component.componentWillEnter(_this._handleDoneEntering.bind(_this, key, component));\n      } else {\n        _this._handleDoneEntering(key, component);\n      }\n    };\n\n    _this._handleDoneEntering = function (key, component) {\n      if (component.componentDidEnter) {\n        component.componentDidEnter();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n        // This was removed before it had fully entered. Remove it.\n        _this.performLeave(key, component);\n      }\n    };\n\n    _this.performLeave = function (key, component) {\n      _this.currentlyTransitioningKeys[key] = true;\n\n      if (component.componentWillLeave) {\n        component.componentWillLeave(_this._handleDoneLeaving.bind(_this, key, component));\n      } else {\n        // Note that this is somewhat dangerous b/c it calls setState()\n        // again, effectively mutating the component before all the work\n        // is done.\n        _this._handleDoneLeaving(key, component);\n      }\n    };\n\n    _this._handleDoneLeaving = function (key, component) {\n      if (component.componentDidLeave) {\n        component.componentDidLeave();\n      }\n\n      delete _this.currentlyTransitioningKeys[key];\n\n      var currentChildMapping = (0, _ChildMapping.getChildMapping)(_this.props.children);\n\n      if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n        // This entered again before it fully left. Add it again.\n        _this.keysToEnter.push(key);\n      } else {\n        _this.setState(function (state) {\n          var newChildren = _extends({}, state.children);\n          delete newChildren[key];\n          return { children: newChildren };\n        });\n      }\n    };\n\n    _this.childRefs = Object.create(null);\n\n    _this.state = {\n      children: (0, _ChildMapping.getChildMapping)(props.children)\n    };\n    return _this;\n  }\n\n  TransitionGroup.prototype.componentWillMount = function componentWillMount() {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  };\n\n  TransitionGroup.prototype.componentDidMount = function componentDidMount() {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key, this.childRefs[key]);\n      }\n    }\n  };\n\n  TransitionGroup.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    var nextChildMapping = (0, _ChildMapping.getChildMapping)(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: (0, _ChildMapping.mergeChildMappings)(prevChildMapping, nextChildMapping)\n    });\n\n    for (var key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (var _key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(_key);\n      if (prevChildMapping[_key] && !hasNext && !this.currentlyTransitioningKeys[_key]) {\n        this.keysToLeave.push(_key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  };\n\n  TransitionGroup.prototype.componentDidUpdate = function componentDidUpdate() {\n    var _this2 = this;\n\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(function (key) {\n      return _this2.performEnter(key, _this2.childRefs[key]);\n    });\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(function (key) {\n      return _this2.performLeave(key, _this2.childRefs[key]);\n    });\n  };\n\n  TransitionGroup.prototype.render = function render() {\n    var _this3 = this;\n\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n\n    var _loop = function _loop(key) {\n      var child = _this3.state.children[key];\n      if (child) {\n        var isCallbackRef = typeof child.ref !== 'string';\n        var factoryChild = _this3.props.childFactory(child);\n        var ref = function ref(r) {\n          _this3.childRefs[key] = r;\n        };\n\n         true ? (0, _warning2.default)(isCallbackRef, 'string refs are not supported on children of TransitionGroup and will be ignored. ' + 'Please use a callback ref instead: https://facebook.github.io/react/docs/refs-and-the-dom.html#the-ref-callback-attribute') : void 0;\n\n        // Always chaining the refs leads to problems when the childFactory\n        // wraps the child. The child ref callback gets called twice with the\n        // wrapper and the child. So we only need to chain the ref if the\n        // factoryChild is not different from child.\n        if (factoryChild === child && isCallbackRef) {\n          ref = (0, _chainFunction2.default)(child.ref, ref);\n        }\n\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(_react2.default.cloneElement(factoryChild, {\n          key: key,\n          ref: ref\n        }));\n      }\n    };\n\n    for (var key in this.state.children) {\n      _loop(key);\n    }\n\n    // Do not forward TransitionGroup props to primitive DOM nodes\n    var props = _extends({}, this.props);\n    delete props.transitionLeave;\n    delete props.transitionName;\n    delete props.transitionAppear;\n    delete props.transitionEnter;\n    delete props.childFactory;\n    delete props.transitionLeaveTimeout;\n    delete props.transitionEnterTimeout;\n    delete props.transitionAppearTimeout;\n    delete props.component;\n\n    return _react2.default.createElement(this.props.component, props, childrenToRender);\n  };\n\n  return TransitionGroup;\n}(_react2.default.Component);\n\nTransitionGroup.displayName = 'TransitionGroup';\n\n\nTransitionGroup.propTypes =  true ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nexports.default = TransitionGroup;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1587\n");

/***/ }),

/***/ 1596:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base16_js__ = __webpack_require__(1702);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__base32_js__ = __webpack_require__(1703);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__base32hex_js__ = __webpack_require__(1704);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__base64_js__ = __webpack_require__(1705);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__base64url_js__ = __webpack_require__(1706);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__codec_js__ = __webpack_require__(1563);\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__base16_js__; });\n/* unused harmony reexport base32 */\n/* unused harmony reexport base32hex */\n/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_3__base64_js__; });\n/* unused harmony reexport base64url */\n/* unused harmony reexport codec */\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvaW5kZXguanM/NTk5OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRVEiLCJmaWxlIjoiMTU5Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGJhc2UxNiBmcm9tICcuL2Jhc2UxNi5qcydcbmltcG9ydCAqIGFzIGJhc2UzMiBmcm9tICcuL2Jhc2UzMi5qcydcbmltcG9ydCAqIGFzIGJhc2UzMmhleCBmcm9tICcuL2Jhc2UzMmhleC5qcydcbmltcG9ydCAqIGFzIGJhc2U2NCBmcm9tICcuL2Jhc2U2NC5qcydcbmltcG9ydCAqIGFzIGJhc2U2NHVybCBmcm9tICcuL2Jhc2U2NHVybC5qcydcbmltcG9ydCAqIGFzIGNvZGVjIGZyb20gJy4vY29kZWMuanMnXG5cbmV4cG9ydCB7IGJhc2UxNiwgYmFzZTMyLCBiYXNlMzJoZXgsIGJhc2U2NCwgYmFzZTY0dXJsLCBjb2RlYyB9XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZmM0NjQ4L2xpYi9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTU5NlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1596\n");

/***/ }),

/***/ 1597:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ActionTypes; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = createStore;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(319);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_symbol_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_symbol_observable__);\n\n\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__[\"a\" /* default */])(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = observable, _ref2;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1597\n");

/***/ }),

/***/ 1598:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = warning;\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy91dGlscy93YXJuaW5nLmpzP2E3NDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJmaWxlIjoiMTU5OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1lbXB0eSAqL1xuICB9IGNhdGNoIChlKSB7fVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWVtcHR5ICovXG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy91dGlscy93YXJuaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTk4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1598\n");

/***/ }),

/***/ 1599:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = compose;\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9jb21wb3NlLmpzPzc5NTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxZQUFZO0FBQ3ZCLGFBQWEsU0FBUztBQUN0QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrRUFBa0UsYUFBYTtBQUMvRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwiZmlsZSI6IjE1OTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbXBvc2VzIHNpbmdsZS1hcmd1bWVudCBmdW5jdGlvbnMgZnJvbSByaWdodCB0byBsZWZ0LiBUaGUgcmlnaHRtb3N0XG4gKiBmdW5jdGlvbiBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMgYXMgaXQgcHJvdmlkZXMgdGhlIHNpZ25hdHVyZSBmb3JcbiAqIHRoZSByZXN1bHRpbmcgY29tcG9zaXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmNzIFRoZSBmdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiBvYnRhaW5lZCBieSBjb21wb3NpbmcgdGhlIGFyZ3VtZW50IGZ1bmN0aW9uc1xuICogZnJvbSByaWdodCB0byBsZWZ0LiBGb3IgZXhhbXBsZSwgY29tcG9zZShmLCBnLCBoKSBpcyBpZGVudGljYWwgdG8gZG9pbmdcbiAqICguLi5hcmdzKSA9PiBmKGcoaCguLi5hcmdzKSkpLlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXBvc2UoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBmdW5jcyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGZ1bmNzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoYXJnKSB7XG4gICAgICByZXR1cm4gYXJnO1xuICAgIH07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAxKSB7XG4gICAgcmV0dXJuIGZ1bmNzWzBdO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmNzLnJlZHVjZShmdW5jdGlvbiAoYSwgYikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gYShiLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gICAgfTtcbiAgfSk7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9jb21wb3NlLmpzXG4vLyBtb2R1bGUgaWQgPSAxNTk5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1599\n");

/***/ }),

/***/ 1623:
/***/ (function(module, exports) {

eval("\r\nmodule.exports = function chain(){\r\n  var len = arguments.length\r\n  var args = [];\r\n\r\n  for (var i = 0; i < len; i++)\r\n    args[i] = arguments[i]\r\n\r\n  args = args.filter(function(fn){ return fn != null })\r\n\r\n  if (args.length === 0) return undefined\r\n  if (args.length === 1) return args[0]\r\n\r\n  return args.reduce(function(current, next){\r\n    return function chainedFunction() {\r\n      current.apply(this, arguments);\r\n      next.apply(this, arguments);\r\n    };\r\n  })\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY2hhaW4tZnVuY3Rpb24vaW5kZXguanM/Y2RjMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixTQUFTO0FBQzFCOztBQUVBLGtDQUFrQyxvQkFBb0I7O0FBRXREO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsImZpbGUiOiIxNjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY2hhaW4oKXtcclxuICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aFxyXG4gIHZhciBhcmdzID0gW107XHJcblxyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspXHJcbiAgICBhcmdzW2ldID0gYXJndW1lbnRzW2ldXHJcblxyXG4gIGFyZ3MgPSBhcmdzLmZpbHRlcihmdW5jdGlvbihmbil7IHJldHVybiBmbiAhPSBudWxsIH0pXHJcblxyXG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIHVuZGVmaW5lZFxyXG4gIGlmIChhcmdzLmxlbmd0aCA9PT0gMSkgcmV0dXJuIGFyZ3NbMF1cclxuXHJcbiAgcmV0dXJuIGFyZ3MucmVkdWNlKGZ1bmN0aW9uKGN1cnJlbnQsIG5leHQpe1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGNoYWluZWRGdW5jdGlvbigpIHtcclxuICAgICAgY3VycmVudC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG4gICAgICBuZXh0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgICB9O1xyXG4gIH0pXHJcbn1cclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY2hhaW4tZnVuY3Rpb24vaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE2MjNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1623\n");

/***/ }),

/***/ 1624:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\n\nvar _react = __webpack_require__(13);\n\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\nfunction getChildMapping(children) {\n  if (!children) {\n    return children;\n  }\n  var result = {};\n  _react.Children.map(children, function (child) {\n    return child;\n  }).forEach(function (child) {\n    result[child.key] = child;\n  });\n  return result;\n}\n\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    if (next.hasOwnProperty(key)) {\n      return next[key];\n    }\n\n    return prev[key];\n  }\n\n  // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n  var nextKeysPending = {};\n\n  var pendingKeys = [];\n  for (var prevKey in prev) {\n    if (next.hasOwnProperty(prevKey)) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i = void 0;\n  var childMapping = {};\n  for (var nextKey in next) {\n    if (nextKeysPending.hasOwnProperty(nextKey)) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n    childMapping[nextKey] = getValueForKey(nextKey);\n  }\n\n  // Finally, add the keys which didn't appear before any key in `next`\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC91dGlscy9DaGlsZE1hcHBpbmcuanM/ZDY4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxQ0FBcUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE2MjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmdldENoaWxkTWFwcGluZyA9IGdldENoaWxkTWFwcGluZztcbmV4cG9ydHMubWVyZ2VDaGlsZE1hcHBpbmdzID0gbWVyZ2VDaGlsZE1hcHBpbmdzO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxuLyoqXG4gKiBHaXZlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmAsIHJldHVybiBhbiBvYmplY3QgbWFwcGluZyBrZXkgdG8gY2hpbGQuXG4gKlxuICogQHBhcmFtIHsqfSBjaGlsZHJlbiBgdGhpcy5wcm9wcy5jaGlsZHJlbmBcbiAqIEByZXR1cm4ge29iamVjdH0gTWFwcGluZyBvZiBrZXkgdG8gY2hpbGRcbiAqL1xuZnVuY3Rpb24gZ2V0Q2hpbGRNYXBwaW5nKGNoaWxkcmVuKSB7XG4gIGlmICghY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gY2hpbGRyZW47XG4gIH1cbiAgdmFyIHJlc3VsdCA9IHt9O1xuICBfcmVhY3QuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICByZXR1cm4gY2hpbGQ7XG4gIH0pLmZvckVhY2goZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgcmVzdWx0W2NoaWxkLmtleV0gPSBjaGlsZDtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogV2hlbiB5b3UncmUgYWRkaW5nIG9yIHJlbW92aW5nIGNoaWxkcmVuIHNvbWUgbWF5IGJlIGFkZGVkIG9yIHJlbW92ZWQgaW4gdGhlXG4gKiBzYW1lIHJlbmRlciBwYXNzLiBXZSB3YW50IHRvIHNob3cgKmJvdGgqIHNpbmNlIHdlIHdhbnQgdG8gc2ltdWx0YW5lb3VzbHlcbiAqIGFuaW1hdGUgZWxlbWVudHMgaW4gYW5kIG91dC4gVGhpcyBmdW5jdGlvbiB0YWtlcyBhIHByZXZpb3VzIHNldCBvZiBrZXlzXG4gKiBhbmQgYSBuZXcgc2V0IG9mIGtleXMgYW5kIG1lcmdlcyB0aGVtIHdpdGggaXRzIGJlc3QgZ3Vlc3Mgb2YgdGhlIGNvcnJlY3RcbiAqIG9yZGVyaW5nLiBJbiB0aGUgZnV0dXJlIHdlIG1heSBleHBvc2Ugc29tZSBvZiB0aGUgdXRpbGl0aWVzIGluXG4gKiBSZWFjdE11bHRpQ2hpbGQgdG8gbWFrZSB0aGlzIGVhc3ksIGJ1dCBmb3Igbm93IFJlYWN0IGl0c2VsZiBkb2VzIG5vdFxuICogZGlyZWN0bHkgaGF2ZSB0aGlzIGNvbmNlcHQgb2YgdGhlIHVuaW9uIG9mIHByZXZDaGlsZHJlbiBhbmQgbmV4dENoaWxkcmVuXG4gKiBzbyB3ZSBpbXBsZW1lbnQgaXQgaGVyZS5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gcHJldiBwcmV2IGNoaWxkcmVuIGFzIHJldHVybmVkIGZyb21cbiAqIGBSZWFjdFRyYW5zaXRpb25DaGlsZE1hcHBpbmcuZ2V0Q2hpbGRNYXBwaW5nKClgLlxuICogQHBhcmFtIHtvYmplY3R9IG5leHQgbmV4dCBjaGlsZHJlbiBhcyByZXR1cm5lZCBmcm9tXG4gKiBgUmVhY3RUcmFuc2l0aW9uQ2hpbGRNYXBwaW5nLmdldENoaWxkTWFwcGluZygpYC5cbiAqIEByZXR1cm4ge29iamVjdH0gYSBrZXkgc2V0IHRoYXQgY29udGFpbnMgYWxsIGtleXMgaW4gYHByZXZgIGFuZCBhbGwga2V5c1xuICogaW4gYG5leHRgIGluIGEgcmVhc29uYWJsZSBvcmRlci5cbiAqL1xuZnVuY3Rpb24gbWVyZ2VDaGlsZE1hcHBpbmdzKHByZXYsIG5leHQpIHtcbiAgcHJldiA9IHByZXYgfHwge307XG4gIG5leHQgPSBuZXh0IHx8IHt9O1xuXG4gIGZ1bmN0aW9uIGdldFZhbHVlRm9yS2V5KGtleSkge1xuICAgIGlmIChuZXh0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiBuZXh0W2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIHByZXZba2V5XTtcbiAgfVxuXG4gIC8vIEZvciBlYWNoIGtleSBvZiBgbmV4dGAsIHRoZSBsaXN0IG9mIGtleXMgdG8gaW5zZXJ0IGJlZm9yZSB0aGF0IGtleSBpblxuICAvLyB0aGUgY29tYmluZWQgbGlzdFxuICB2YXIgbmV4dEtleXNQZW5kaW5nID0ge307XG5cbiAgdmFyIHBlbmRpbmdLZXlzID0gW107XG4gIGZvciAodmFyIHByZXZLZXkgaW4gcHJldikge1xuICAgIGlmIChuZXh0Lmhhc093blByb3BlcnR5KHByZXZLZXkpKSB7XG4gICAgICBpZiAocGVuZGluZ0tleXMubGVuZ3RoKSB7XG4gICAgICAgIG5leHRLZXlzUGVuZGluZ1twcmV2S2V5XSA9IHBlbmRpbmdLZXlzO1xuICAgICAgICBwZW5kaW5nS2V5cyA9IFtdO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwZW5kaW5nS2V5cy5wdXNoKHByZXZLZXkpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBpID0gdm9pZCAwO1xuICB2YXIgY2hpbGRNYXBwaW5nID0ge307XG4gIGZvciAodmFyIG5leHRLZXkgaW4gbmV4dCkge1xuICAgIGlmIChuZXh0S2V5c1BlbmRpbmcuaGFzT3duUHJvcGVydHkobmV4dEtleSkpIHtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuZXh0S2V5c1BlbmRpbmdbbmV4dEtleV0ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHBlbmRpbmdOZXh0S2V5ID0gbmV4dEtleXNQZW5kaW5nW25leHRLZXldW2ldO1xuICAgICAgICBjaGlsZE1hcHBpbmdbbmV4dEtleXNQZW5kaW5nW25leHRLZXldW2ldXSA9IGdldFZhbHVlRm9yS2V5KHBlbmRpbmdOZXh0S2V5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgY2hpbGRNYXBwaW5nW25leHRLZXldID0gZ2V0VmFsdWVGb3JLZXkobmV4dEtleSk7XG4gIH1cblxuICAvLyBGaW5hbGx5LCBhZGQgdGhlIGtleXMgd2hpY2ggZGlkbid0IGFwcGVhciBiZWZvcmUgYW55IGtleSBpbiBgbmV4dGBcbiAgZm9yIChpID0gMDsgaSA8IHBlbmRpbmdLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2hpbGRNYXBwaW5nW3BlbmRpbmdLZXlzW2ldXSA9IGdldFZhbHVlRm9yS2V5KHBlbmRpbmdLZXlzW2ldKTtcbiAgfVxuXG4gIHJldHVybiBjaGlsZE1hcHBpbmc7XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC91dGlscy9DaGlsZE1hcHBpbmcuanNcbi8vIG1vZHVsZSBpZCA9IDE2MjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1624\n");

/***/ }),

/***/ 1625:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _addClass = __webpack_require__(1626);\n\nvar _addClass2 = _interopRequireDefault(_addClass);\n\nvar _removeClass = __webpack_require__(1628);\n\nvar _removeClass2 = _interopRequireDefault(_removeClass);\n\nvar _requestAnimationFrame = __webpack_require__(1629);\n\nvar _requestAnimationFrame2 = _interopRequireDefault(_requestAnimationFrame);\n\nvar _properties = __webpack_require__(1630);\n\nvar _react = __webpack_require__(13);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(17);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = __webpack_require__(318);\n\nvar _PropTypes = __webpack_require__(1585);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar events = [];\nif (_properties.transitionEnd) events.push(_properties.transitionEnd);\nif (_properties.animationEnd) events.push(_properties.animationEnd);\n\nfunction addEndListener(node, listener) {\n  if (events.length) {\n    events.forEach(function (e) {\n      return node.addEventListener(e, listener, false);\n    });\n  } else {\n    setTimeout(listener, 0);\n  }\n\n  return function () {\n    if (!events.length) return;\n    events.forEach(function (e) {\n      return node.removeEventListener(e, listener, false);\n    });\n  };\n}\n\nvar propTypes = {\n  children: _propTypes2.default.node,\n  name: _PropTypes.nameShape.isRequired,\n\n  // Once we require timeouts to be specified, we can remove the\n  // boolean flags (appear etc.) and just accept a number\n  // or a bool for the timeout flags (appearTimeout etc.)\n  appear: _propTypes2.default.bool,\n  enter: _propTypes2.default.bool,\n  leave: _propTypes2.default.bool,\n  appearTimeout: _propTypes2.default.number,\n  enterTimeout: _propTypes2.default.number,\n  leaveTimeout: _propTypes2.default.number\n};\n\nvar CSSTransitionGroupChild = function (_React$Component) {\n  _inherits(CSSTransitionGroupChild, _React$Component);\n\n  function CSSTransitionGroupChild() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CSSTransitionGroupChild);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.componentWillAppear = function (done) {\n      if (_this.props.appear) {\n        _this.transition('appear', done, _this.props.appearTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillEnter = function (done) {\n      if (_this.props.enter) {\n        _this.transition('enter', done, _this.props.enterTimeout);\n      } else {\n        done();\n      }\n    }, _this.componentWillLeave = function (done) {\n      if (_this.props.leave) {\n        _this.transition('leave', done, _this.props.leaveTimeout);\n      } else {\n        done();\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  CSSTransitionGroupChild.prototype.componentWillMount = function componentWillMount() {\n    this.classNameAndNodeQueue = [];\n    this.transitionTimeouts = [];\n  };\n\n  CSSTransitionGroupChild.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.unmounted = true;\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n\n    this.classNameAndNodeQueue.length = 0;\n  };\n\n  CSSTransitionGroupChild.prototype.transition = function transition(animationType, finishCallback, timeout) {\n    var node = (0, _reactDom.findDOMNode)(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timer = null;\n    var removeListeners = void 0;\n\n    (0, _addClass2.default)(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClassAndNode(activeClassName, node);\n\n    // Clean-up the animation after the specified delay\n    var finish = function finish(e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timer);\n      if (removeListeners) removeListeners();\n\n      (0, _removeClass2.default)(node, className);\n      (0, _removeClass2.default)(node, activeClassName);\n\n      if (removeListeners) removeListeners();\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    if (timeout) {\n      timer = setTimeout(finish, timeout);\n      this.transitionTimeouts.push(timer);\n    } else if (_properties.transitionEnd) {\n      removeListeners = addEndListener(node, finish);\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.queueClassAndNode = function queueClassAndNode(className, node) {\n    var _this2 = this;\n\n    this.classNameAndNodeQueue.push({\n      className: className,\n      node: node\n    });\n\n    if (!this.rafHandle) {\n      this.rafHandle = (0, _requestAnimationFrame2.default)(function () {\n        return _this2.flushClassNameAndNodeQueue();\n      });\n    }\n  };\n\n  CSSTransitionGroupChild.prototype.flushClassNameAndNodeQueue = function flushClassNameAndNodeQueue() {\n    if (!this.unmounted) {\n      this.classNameAndNodeQueue.forEach(function (obj) {\n        // This is for to force a repaint,\n        // which is necessary in order to transition styles when adding a class name.\n        /* eslint-disable no-unused-expressions */\n        obj.node.scrollTop;\n        /* eslint-enable no-unused-expressions */\n        (0, _addClass2.default)(obj.node, obj.className);\n      });\n    }\n    this.classNameAndNodeQueue.length = 0;\n    this.rafHandle = null;\n  };\n\n  CSSTransitionGroupChild.prototype.render = function render() {\n    var props = _extends({}, this.props);\n    delete props.name;\n    delete props.appear;\n    delete props.enter;\n    delete props.leave;\n    delete props.appearTimeout;\n    delete props.enterTimeout;\n    delete props.leaveTimeout;\n    delete props.children;\n    return _react2.default.cloneElement(_react2.default.Children.only(this.props.children), props);\n  };\n\n  return CSSTransitionGroupChild;\n}(_react2.default.Component);\n\nCSSTransitionGroupChild.displayName = 'CSSTransitionGroupChild';\n\n\nCSSTransitionGroupChild.propTypes =  true ? propTypes : {};\n\nexports.default = CSSTransitionGroupChild;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1625\n");

/***/ }),

/***/ 1626:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addClass;\n\nvar _hasClass = __webpack_require__(1627);\n\nvar _hasClass2 = _interopRequireDefault(_hasClass);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass2.default)(element)) element.className = element.className + ' ' + className;\n}\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvYWRkQ2xhc3MuanM/ZjNlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBLDBEQUEwRDtBQUMxRDtBQUNBIiwiZmlsZSI6IjE2MjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGRDbGFzcztcblxudmFyIF9oYXNDbGFzcyA9IHJlcXVpcmUoJy4vaGFzQ2xhc3MnKTtcblxudmFyIF9oYXNDbGFzczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oYXNDbGFzcyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGFkZENsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChjbGFzc05hbWUpO2Vsc2UgaWYgKCEoMCwgX2hhc0NsYXNzMi5kZWZhdWx0KShlbGVtZW50KSkgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZSArICcgJyArIGNsYXNzTmFtZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2NsYXNzL2FkZENsYXNzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1626\n");

/***/ }),

/***/ 1627:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hasClass;\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + element.className + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\nmodule.exports = exports[\"default\"];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvaGFzQ2xhc3MuanM/MWUwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxxRkFBcUY7QUFDckY7QUFDQSIsImZpbGUiOiIxNjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBoYXNDbGFzcztcbmZ1bmN0aW9uIGhhc0NsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIHJldHVybiAhIWNsYXNzTmFtZSAmJiBlbGVtZW50LmNsYXNzTGlzdC5jb250YWlucyhjbGFzc05hbWUpO2Vsc2UgcmV0dXJuIChcIiBcIiArIGVsZW1lbnQuY2xhc3NOYW1lICsgXCIgXCIpLmluZGV4T2YoXCIgXCIgKyBjbGFzc05hbWUgKyBcIiBcIikgIT09IC0xO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzW1wiZGVmYXVsdFwiXTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9jbGFzcy9oYXNDbGFzcy5qc1xuLy8gbW9kdWxlIGlkID0gMTYyN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1627\n");

/***/ }),

/***/ 1628:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvY2xhc3MvcmVtb3ZlQ2xhc3MuanM/MDM4YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBLDZEQUE2RDtBQUM3RCIsImZpbGUiOiIxNjI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHJlbW92ZUNsYXNzKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xuICBpZiAoZWxlbWVudC5jbGFzc0xpc3QpIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShjbGFzc05hbWUpO2Vsc2UgZWxlbWVudC5jbGFzc05hbWUgPSBlbGVtZW50LmNsYXNzTmFtZS5yZXBsYWNlKG5ldyBSZWdFeHAoJyhefFxcXFxzKScgKyBjbGFzc05hbWUgKyAnKD86XFxcXHN8JCknLCAnZycpLCAnJDEnKS5yZXBsYWNlKC9cXHMrL2csICcgJykucmVwbGFjZSgvXlxccyp8XFxzKiQvZywgJycpO1xufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9jbGFzcy9yZW1vdmVDbGFzcy5qc1xuLy8gbW9kdWxlIGlkID0gMTYyOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA0IDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1628\n");

/***/ }),

/***/ 1629:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _inDOM = __webpack_require__(1584);\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\nvar cancel = 'clearTimeout';\nvar raf = fallback;\nvar compatRaf = void 0;\n\nvar getKey = function getKey(vendor, k) {\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + 'AnimationFrame';\n};\n\nif (_inDOM2.default) {\n  vendors.some(function (vendor) {\n    var rafKey = getKey(vendor, 'request');\n\n    if (rafKey in window) {\n      cancel = getKey(vendor, 'cancel');\n      return raf = function raf(cb) {\n        return window[rafKey](cb);\n      };\n    }\n  });\n}\n\n/* https://github.com/component/raf */\nvar prev = new Date().getTime();\nfunction fallback(fn) {\n  var curr = new Date().getTime(),\n      ms = Math.max(0, 16 - (curr - prev)),\n      req = setTimeout(fn, ms);\n\n  prev = curr;\n  return req;\n}\n\ncompatRaf = function compatRaf(cb) {\n  return raf(cb);\n};\ncompatRaf.cancel = function (id) {\n  window[cancel] && typeof window[cancel] === 'function' && window[cancel](id);\n};\nexports.default = compatRaf;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdXRpbC9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuanM/OTUyMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2MjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfaW5ET00gPSByZXF1aXJlKCcuL2luRE9NJyk7XG5cbnZhciBfaW5ET00yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW5ET00pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgdmVuZG9ycyA9IFsnJywgJ3dlYmtpdCcsICdtb3onLCAnbycsICdtcyddO1xudmFyIGNhbmNlbCA9ICdjbGVhclRpbWVvdXQnO1xudmFyIHJhZiA9IGZhbGxiYWNrO1xudmFyIGNvbXBhdFJhZiA9IHZvaWQgMDtcblxudmFyIGdldEtleSA9IGZ1bmN0aW9uIGdldEtleSh2ZW5kb3IsIGspIHtcbiAgcmV0dXJuIHZlbmRvciArICghdmVuZG9yID8gayA6IGtbMF0udG9VcHBlckNhc2UoKSArIGsuc3Vic3RyKDEpKSArICdBbmltYXRpb25GcmFtZSc7XG59O1xuXG5pZiAoX2luRE9NMi5kZWZhdWx0KSB7XG4gIHZlbmRvcnMuc29tZShmdW5jdGlvbiAodmVuZG9yKSB7XG4gICAgdmFyIHJhZktleSA9IGdldEtleSh2ZW5kb3IsICdyZXF1ZXN0Jyk7XG5cbiAgICBpZiAocmFmS2V5IGluIHdpbmRvdykge1xuICAgICAgY2FuY2VsID0gZ2V0S2V5KHZlbmRvciwgJ2NhbmNlbCcpO1xuICAgICAgcmV0dXJuIHJhZiA9IGZ1bmN0aW9uIHJhZihjYikge1xuICAgICAgICByZXR1cm4gd2luZG93W3JhZktleV0oY2IpO1xuICAgICAgfTtcbiAgICB9XG4gIH0pO1xufVxuXG4vKiBodHRwczovL2dpdGh1Yi5jb20vY29tcG9uZW50L3JhZiAqL1xudmFyIHByZXYgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbmZ1bmN0aW9uIGZhbGxiYWNrKGZuKSB7XG4gIHZhciBjdXJyID0gbmV3IERhdGUoKS5nZXRUaW1lKCksXG4gICAgICBtcyA9IE1hdGgubWF4KDAsIDE2IC0gKGN1cnIgLSBwcmV2KSksXG4gICAgICByZXEgPSBzZXRUaW1lb3V0KGZuLCBtcyk7XG5cbiAgcHJldiA9IGN1cnI7XG4gIHJldHVybiByZXE7XG59XG5cbmNvbXBhdFJhZiA9IGZ1bmN0aW9uIGNvbXBhdFJhZihjYikge1xuICByZXR1cm4gcmFmKGNiKTtcbn07XG5jb21wYXRSYWYuY2FuY2VsID0gZnVuY3Rpb24gKGlkKSB7XG4gIHdpbmRvd1tjYW5jZWxdICYmIHR5cGVvZiB3aW5kb3dbY2FuY2VsXSA9PT0gJ2Z1bmN0aW9uJyAmJiB3aW5kb3dbY2FuY2VsXShpZCk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gY29tcGF0UmFmO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdXRpbC9yZXF1ZXN0QW5pbWF0aW9uRnJhbWUuanNcbi8vIG1vZHVsZSBpZCA9IDE2Mjlcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNCA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1629\n");

/***/ }),

/***/ 1630:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.animationEnd = exports.animationDelay = exports.animationTiming = exports.animationDuration = exports.animationName = exports.transitionEnd = exports.transitionDuration = exports.transitionDelay = exports.transitionTiming = exports.transitionProperty = exports.transform = undefined;\n\nvar _inDOM = __webpack_require__(1584);\n\nvar _inDOM2 = _interopRequireDefault(_inDOM);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar transform = 'transform';\nvar prefix = void 0,\n    transitionEnd = void 0,\n    animationEnd = void 0;\nvar transitionProperty = void 0,\n    transitionDuration = void 0,\n    transitionTiming = void 0,\n    transitionDelay = void 0;\nvar animationName = void 0,\n    animationDuration = void 0,\n    animationTiming = void 0,\n    animationDelay = void 0;\n\nif (_inDOM2.default) {\n  var _getTransitionPropert = getTransitionProperties();\n\n  prefix = _getTransitionPropert.prefix;\n  exports.transitionEnd = transitionEnd = _getTransitionPropert.transitionEnd;\n  exports.animationEnd = animationEnd = _getTransitionPropert.animationEnd;\n\n\n  exports.transform = transform = prefix + '-' + transform;\n  exports.transitionProperty = transitionProperty = prefix + '-transition-property';\n  exports.transitionDuration = transitionDuration = prefix + '-transition-duration';\n  exports.transitionDelay = transitionDelay = prefix + '-transition-delay';\n  exports.transitionTiming = transitionTiming = prefix + '-transition-timing-function';\n\n  exports.animationName = animationName = prefix + '-animation-name';\n  exports.animationDuration = animationDuration = prefix + '-animation-duration';\n  exports.animationTiming = animationTiming = prefix + '-animation-delay';\n  exports.animationDelay = animationDelay = prefix + '-animation-timing-function';\n}\n\nexports.transform = transform;\nexports.transitionProperty = transitionProperty;\nexports.transitionTiming = transitionTiming;\nexports.transitionDelay = transitionDelay;\nexports.transitionDuration = transitionDuration;\nexports.transitionEnd = transitionEnd;\nexports.animationName = animationName;\nexports.animationDuration = animationDuration;\nexports.animationTiming = animationTiming;\nexports.animationDelay = animationDelay;\nexports.animationEnd = animationEnd;\nexports.default = {\n  transform: transform,\n  end: transitionEnd,\n  property: transitionProperty,\n  timing: transitionTiming,\n  delay: transitionDelay,\n  duration: transitionDuration\n};\n\n\nfunction getTransitionProperties() {\n  var style = document.createElement('div').style;\n\n  var vendorMap = {\n    O: function O(e) {\n      return 'o' + e.toLowerCase();\n    },\n    Moz: function Moz(e) {\n      return e.toLowerCase();\n    },\n    Webkit: function Webkit(e) {\n      return 'webkit' + e;\n    },\n    ms: function ms(e) {\n      return 'MS' + e;\n    }\n  };\n\n  var vendors = Object.keys(vendorMap);\n\n  var transitionEnd = void 0,\n      animationEnd = void 0;\n  var prefix = '';\n\n  for (var i = 0; i < vendors.length; i++) {\n    var vendor = vendors[i];\n\n    if (vendor + 'TransitionProperty' in style) {\n      prefix = '-' + vendor.toLowerCase();\n      transitionEnd = vendorMap[vendor]('TransitionEnd');\n      animationEnd = vendorMap[vendor]('AnimationEnd');\n      break;\n    }\n  }\n\n  if (!transitionEnd && 'transitionProperty' in style) transitionEnd = 'transitionend';\n\n  if (!animationEnd && 'animationName' in style) animationEnd = 'animationend';\n\n  style = null;\n\n  return { animationEnd: animationEnd, transitionEnd: transitionEnd, prefix: prefix };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9wcm9wZXJ0aWVzLmpzPzRiZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQTs7QUFFQTs7QUFFQSxzQ0FBc0MsdUNBQXVDLGdCQUFnQjs7QUFFN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLG9CQUFvQjtBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxVQUFVO0FBQ1YiLCJmaWxlIjoiMTYzMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuYW5pbWF0aW9uRW5kID0gZXhwb3J0cy5hbmltYXRpb25EZWxheSA9IGV4cG9ydHMuYW5pbWF0aW9uVGltaW5nID0gZXhwb3J0cy5hbmltYXRpb25EdXJhdGlvbiA9IGV4cG9ydHMuYW5pbWF0aW9uTmFtZSA9IGV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IGV4cG9ydHMudHJhbnNpdGlvbkR1cmF0aW9uID0gZXhwb3J0cy50cmFuc2l0aW9uRGVsYXkgPSBleHBvcnRzLnRyYW5zaXRpb25UaW1pbmcgPSBleHBvcnRzLnRyYW5zaXRpb25Qcm9wZXJ0eSA9IGV4cG9ydHMudHJhbnNmb3JtID0gdW5kZWZpbmVkO1xuXG52YXIgX2luRE9NID0gcmVxdWlyZSgnLi4vdXRpbC9pbkRPTScpO1xuXG52YXIgX2luRE9NMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2luRE9NKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHRyYW5zZm9ybSA9ICd0cmFuc2Zvcm0nO1xudmFyIHByZWZpeCA9IHZvaWQgMCxcbiAgICB0cmFuc2l0aW9uRW5kID0gdm9pZCAwLFxuICAgIGFuaW1hdGlvbkVuZCA9IHZvaWQgMDtcbnZhciB0cmFuc2l0aW9uUHJvcGVydHkgPSB2b2lkIDAsXG4gICAgdHJhbnNpdGlvbkR1cmF0aW9uID0gdm9pZCAwLFxuICAgIHRyYW5zaXRpb25UaW1pbmcgPSB2b2lkIDAsXG4gICAgdHJhbnNpdGlvbkRlbGF5ID0gdm9pZCAwO1xudmFyIGFuaW1hdGlvbk5hbWUgPSB2b2lkIDAsXG4gICAgYW5pbWF0aW9uRHVyYXRpb24gPSB2b2lkIDAsXG4gICAgYW5pbWF0aW9uVGltaW5nID0gdm9pZCAwLFxuICAgIGFuaW1hdGlvbkRlbGF5ID0gdm9pZCAwO1xuXG5pZiAoX2luRE9NMi5kZWZhdWx0KSB7XG4gIHZhciBfZ2V0VHJhbnNpdGlvblByb3BlcnQgPSBnZXRUcmFuc2l0aW9uUHJvcGVydGllcygpO1xuXG4gIHByZWZpeCA9IF9nZXRUcmFuc2l0aW9uUHJvcGVydC5wcmVmaXg7XG4gIGV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IHRyYW5zaXRpb25FbmQgPSBfZ2V0VHJhbnNpdGlvblByb3BlcnQudHJhbnNpdGlvbkVuZDtcbiAgZXhwb3J0cy5hbmltYXRpb25FbmQgPSBhbmltYXRpb25FbmQgPSBfZ2V0VHJhbnNpdGlvblByb3BlcnQuYW5pbWF0aW9uRW5kO1xuXG5cbiAgZXhwb3J0cy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm0gPSBwcmVmaXggKyAnLScgKyB0cmFuc2Zvcm07XG4gIGV4cG9ydHMudHJhbnNpdGlvblByb3BlcnR5ID0gdHJhbnNpdGlvblByb3BlcnR5ID0gcHJlZml4ICsgJy10cmFuc2l0aW9uLXByb3BlcnR5JztcbiAgZXhwb3J0cy50cmFuc2l0aW9uRHVyYXRpb24gPSB0cmFuc2l0aW9uRHVyYXRpb24gPSBwcmVmaXggKyAnLXRyYW5zaXRpb24tZHVyYXRpb24nO1xuICBleHBvcnRzLnRyYW5zaXRpb25EZWxheSA9IHRyYW5zaXRpb25EZWxheSA9IHByZWZpeCArICctdHJhbnNpdGlvbi1kZWxheSc7XG4gIGV4cG9ydHMudHJhbnNpdGlvblRpbWluZyA9IHRyYW5zaXRpb25UaW1pbmcgPSBwcmVmaXggKyAnLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uJztcblxuICBleHBvcnRzLmFuaW1hdGlvbk5hbWUgPSBhbmltYXRpb25OYW1lID0gcHJlZml4ICsgJy1hbmltYXRpb24tbmFtZSc7XG4gIGV4cG9ydHMuYW5pbWF0aW9uRHVyYXRpb24gPSBhbmltYXRpb25EdXJhdGlvbiA9IHByZWZpeCArICctYW5pbWF0aW9uLWR1cmF0aW9uJztcbiAgZXhwb3J0cy5hbmltYXRpb25UaW1pbmcgPSBhbmltYXRpb25UaW1pbmcgPSBwcmVmaXggKyAnLWFuaW1hdGlvbi1kZWxheSc7XG4gIGV4cG9ydHMuYW5pbWF0aW9uRGVsYXkgPSBhbmltYXRpb25EZWxheSA9IHByZWZpeCArICctYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbic7XG59XG5cbmV4cG9ydHMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuZXhwb3J0cy50cmFuc2l0aW9uUHJvcGVydHkgPSB0cmFuc2l0aW9uUHJvcGVydHk7XG5leHBvcnRzLnRyYW5zaXRpb25UaW1pbmcgPSB0cmFuc2l0aW9uVGltaW5nO1xuZXhwb3J0cy50cmFuc2l0aW9uRGVsYXkgPSB0cmFuc2l0aW9uRGVsYXk7XG5leHBvcnRzLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRyYW5zaXRpb25EdXJhdGlvbjtcbmV4cG9ydHMudHJhbnNpdGlvbkVuZCA9IHRyYW5zaXRpb25FbmQ7XG5leHBvcnRzLmFuaW1hdGlvbk5hbWUgPSBhbmltYXRpb25OYW1lO1xuZXhwb3J0cy5hbmltYXRpb25EdXJhdGlvbiA9IGFuaW1hdGlvbkR1cmF0aW9uO1xuZXhwb3J0cy5hbmltYXRpb25UaW1pbmcgPSBhbmltYXRpb25UaW1pbmc7XG5leHBvcnRzLmFuaW1hdGlvbkRlbGF5ID0gYW5pbWF0aW9uRGVsYXk7XG5leHBvcnRzLmFuaW1hdGlvbkVuZCA9IGFuaW1hdGlvbkVuZDtcbmV4cG9ydHMuZGVmYXVsdCA9IHtcbiAgdHJhbnNmb3JtOiB0cmFuc2Zvcm0sXG4gIGVuZDogdHJhbnNpdGlvbkVuZCxcbiAgcHJvcGVydHk6IHRyYW5zaXRpb25Qcm9wZXJ0eSxcbiAgdGltaW5nOiB0cmFuc2l0aW9uVGltaW5nLFxuICBkZWxheTogdHJhbnNpdGlvbkRlbGF5LFxuICBkdXJhdGlvbjogdHJhbnNpdGlvbkR1cmF0aW9uXG59O1xuXG5cbmZ1bmN0aW9uIGdldFRyYW5zaXRpb25Qcm9wZXJ0aWVzKCkge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKS5zdHlsZTtcblxuICB2YXIgdmVuZG9yTWFwID0ge1xuICAgIE86IGZ1bmN0aW9uIE8oZSkge1xuICAgICAgcmV0dXJuICdvJyArIGUudG9Mb3dlckNhc2UoKTtcbiAgICB9LFxuICAgIE1vejogZnVuY3Rpb24gTW96KGUpIHtcbiAgICAgIHJldHVybiBlLnRvTG93ZXJDYXNlKCk7XG4gICAgfSxcbiAgICBXZWJraXQ6IGZ1bmN0aW9uIFdlYmtpdChlKSB7XG4gICAgICByZXR1cm4gJ3dlYmtpdCcgKyBlO1xuICAgIH0sXG4gICAgbXM6IGZ1bmN0aW9uIG1zKGUpIHtcbiAgICAgIHJldHVybiAnTVMnICsgZTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHZlbmRvcnMgPSBPYmplY3Qua2V5cyh2ZW5kb3JNYXApO1xuXG4gIHZhciB0cmFuc2l0aW9uRW5kID0gdm9pZCAwLFxuICAgICAgYW5pbWF0aW9uRW5kID0gdm9pZCAwO1xuICB2YXIgcHJlZml4ID0gJyc7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZW5kb3JzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHZlbmRvciA9IHZlbmRvcnNbaV07XG5cbiAgICBpZiAodmVuZG9yICsgJ1RyYW5zaXRpb25Qcm9wZXJ0eScgaW4gc3R5bGUpIHtcbiAgICAgIHByZWZpeCA9ICctJyArIHZlbmRvci50b0xvd2VyQ2FzZSgpO1xuICAgICAgdHJhbnNpdGlvbkVuZCA9IHZlbmRvck1hcFt2ZW5kb3JdKCdUcmFuc2l0aW9uRW5kJyk7XG4gICAgICBhbmltYXRpb25FbmQgPSB2ZW5kb3JNYXBbdmVuZG9yXSgnQW5pbWF0aW9uRW5kJyk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoIXRyYW5zaXRpb25FbmQgJiYgJ3RyYW5zaXRpb25Qcm9wZXJ0eScgaW4gc3R5bGUpIHRyYW5zaXRpb25FbmQgPSAndHJhbnNpdGlvbmVuZCc7XG5cbiAgaWYgKCFhbmltYXRpb25FbmQgJiYgJ2FuaW1hdGlvbk5hbWUnIGluIHN0eWxlKSBhbmltYXRpb25FbmQgPSAnYW5pbWF0aW9uZW5kJztcblxuICBzdHlsZSA9IG51bGw7XG5cbiAgcmV0dXJuIHsgYW5pbWF0aW9uRW5kOiBhbmltYXRpb25FbmQsIHRyYW5zaXRpb25FbmQ6IHRyYW5zaXRpb25FbmQsIHByZWZpeDogcHJlZml4IH07XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvdHJhbnNpdGlvbi9wcm9wZXJ0aWVzLmpzXG4vLyBtb2R1bGUgaWQgPSAxNjMwXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDQgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1630\n");

/***/ }),

/***/ 1694:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1695);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(74)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./auth.styles.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./auth.styles.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYXV0aC9hdXRoLnN0eWxlcy5sZXNzPzZkZGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIxNjk0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyL2luZGV4LmpzIS4vYXV0aC5zdHlsZXMubGVzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9hdXRoLnN0eWxlcy5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2F1dGguc3R5bGVzLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2F1dGgvYXV0aC5zdHlsZXMubGVzc1xuLy8gbW9kdWxlIGlkID0gMTY5NFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSAxMCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1694\n");

/***/ }),

/***/ 1695:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(66)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".auth-styles_Auth__header_qG1 h1 {\\n  font-weight: 500;\\n  letter-spacing: 0.3px;\\n  text-transform: uppercase;\\n}\\n.auth-styles_Auth_3DK {\\n  min-height: 100%;\\n  padding: 2rem;\\n  width: 100%;\\n}\\n@media all and (max-width: 900px) {\\n  .auth-styles_Auth_3DK {\\n    padding: 0;\\n  }\\n}\\n.auth-styles_Auth--constrained_2_F {\\n  max-width: 1200px;\\n  min-height: 100%;\\n}\\n.auth-styles_Auth_3DK {\\n  display: flex;\\n  justify-content: center;\\n}\\n.auth-styles_Auth--constrained_2_F {\\n  align-items: flex-start;\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n  width: 100%;\\n}\\n.auth-styles_Auth__header_qG1 {\\n  margin-top: 5rem;\\n}\\n.auth-styles_Auth__header_qG1 h1 {\\n  color: #ffffff;\\n}\\n@media all and (max-width: 900px) {\\n  .auth-styles_Auth__header_qG1 {\\n    padding-left: 2em;\\n  }\\n}\\n.auth-styles_Auth__content_2Xc {\\n  display: flex;\\n  min-height: 500px;\\n  width: 100%;\\n}\\n@media all and (max-width: 900px) {\\n  .auth-styles_Auth__content_2Xc {\\n    flex-direction: column;\\n  }\\n}\\n.auth-styles_Auth__connections_2pe {\\n  background: #ffffff;\\n  display: flex;\\n  flex: 1;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"Auth__header\": \"auth-styles_Auth__header_qG1\",\n\t\"Auth\": \"auth-styles_Auth_3DK\",\n\t\"Auth--constrained\": \"auth-styles_Auth--constrained_2_F\",\n\t\"Auth__content\": \"auth-styles_Auth__content_2Xc\",\n\t\"Auth__connections\": \"auth-styles_Auth__connections_2pe\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYXV0aC9hdXRoLnN0eWxlcy5sZXNzPzU3Y2MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSwyREFBNEQscUJBQXFCLDBCQUEwQiw4QkFBOEIsR0FBRyx5QkFBeUIscUJBQXFCLGtCQUFrQixnQkFBZ0IsR0FBRyxxQ0FBcUMsMkJBQTJCLGlCQUFpQixLQUFLLEdBQUcsc0NBQXNDLHNCQUFzQixxQkFBcUIsR0FBRyx5QkFBeUIsa0JBQWtCLDRCQUE0QixHQUFHLHNDQUFzQyw0QkFBNEIsa0JBQWtCLFlBQVksMkJBQTJCLGdCQUFnQixHQUFHLGlDQUFpQyxxQkFBcUIsR0FBRyxvQ0FBb0MsbUJBQW1CLEdBQUcscUNBQXFDLG1DQUFtQyx3QkFBd0IsS0FBSyxHQUFHLGtDQUFrQyxrQkFBa0Isc0JBQXNCLGdCQUFnQixHQUFHLHFDQUFxQyxvQ0FBb0MsNkJBQTZCLEtBQUssR0FBRyxzQ0FBc0Msd0JBQXdCLGtCQUFrQixZQUFZLEdBQUc7O0FBRXptQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE2OTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKHVuZGVmaW5lZCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYXV0aC1zdHlsZXNfQXV0aF9faGVhZGVyX3FHMSBoMSB7XFxuICBmb250LXdlaWdodDogNTAwO1xcbiAgbGV0dGVyLXNwYWNpbmc6IDAuM3B4O1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG59XFxuLmF1dGgtc3R5bGVzX0F1dGhfM0RLIHtcXG4gIG1pbi1oZWlnaHQ6IDEwMCU7XFxuICBwYWRkaW5nOiAycmVtO1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAuYXV0aC1zdHlsZXNfQXV0aF8zREsge1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgfVxcbn1cXG4uYXV0aC1zdHlsZXNfQXV0aC0tY29uc3RyYWluZWRfMl9GIHtcXG4gIG1heC13aWR0aDogMTIwMHB4O1xcbiAgbWluLWhlaWdodDogMTAwJTtcXG59XFxuLmF1dGgtc3R5bGVzX0F1dGhfM0RLIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuLmF1dGgtc3R5bGVzX0F1dGgtLWNvbnN0cmFpbmVkXzJfRiB7XFxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4OiAxO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG4uYXV0aC1zdHlsZXNfQXV0aF9faGVhZGVyX3FHMSB7XFxuICBtYXJnaW4tdG9wOiA1cmVtO1xcbn1cXG4uYXV0aC1zdHlsZXNfQXV0aF9faGVhZGVyX3FHMSBoMSB7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG59XFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gIC5hdXRoLXN0eWxlc19BdXRoX19oZWFkZXJfcUcxIHtcXG4gICAgcGFkZGluZy1sZWZ0OiAyZW07XFxuICB9XFxufVxcbi5hdXRoLXN0eWxlc19BdXRoX19jb250ZW50XzJYYyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWluLWhlaWdodDogNTAwcHg7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gIC5hdXRoLXN0eWxlc19BdXRoX19jb250ZW50XzJYYyB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICB9XFxufVxcbi5hdXRoLXN0eWxlc19BdXRoX19jb25uZWN0aW9uc18ycGUge1xcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4OiAxO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJBdXRoX19oZWFkZXJcIjogXCJhdXRoLXN0eWxlc19BdXRoX19oZWFkZXJfcUcxXCIsXG5cdFwiQXV0aFwiOiBcImF1dGgtc3R5bGVzX0F1dGhfM0RLXCIsXG5cdFwiQXV0aC0tY29uc3RyYWluZWRcIjogXCJhdXRoLXN0eWxlc19BdXRoLS1jb25zdHJhaW5lZF8yX0ZcIixcblx0XCJBdXRoX19jb250ZW50XCI6IFwiYXV0aC1zdHlsZXNfQXV0aF9fY29udGVudF8yWGNcIixcblx0XCJBdXRoX19jb25uZWN0aW9uc1wiOiBcImF1dGgtc3R5bGVzX0F1dGhfX2Nvbm5lY3Rpb25zXzJwZVwiXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wibW9kdWxlc1wiOnRydWUsXCJsb2NhbElkZW50TmFtZVwiOlwiW25hbWVdX1tsb2NhbF1fW2hhc2g6YmFzZTY0OjNdXCJ9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIhLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYXV0aC9hdXRoLnN0eWxlcy5sZXNzXG4vLyBtb2R1bGUgaWQgPSAxNjk1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDEwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1695\n");

/***/ }),

/***/ 1696:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _CSSTransitionGroup = __webpack_require__(1583);\n\nvar _CSSTransitionGroup2 = _interopRequireDefault(_CSSTransitionGroup);\n\nvar _TransitionGroup = __webpack_require__(1587);\n\nvar _TransitionGroup2 = _interopRequireDefault(_TransitionGroup);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  TransitionGroup: _TransitionGroup2.default,\n  CSSTransitionGroup: _CSSTransitionGroup2.default\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtdHJhbnNpdGlvbi1ncm91cC9pbmRleC5qcz81MTU3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3RjtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNjk2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX0NTU1RyYW5zaXRpb25Hcm91cCA9IHJlcXVpcmUoJy4vQ1NTVHJhbnNpdGlvbkdyb3VwJyk7XG5cbnZhciBfQ1NTVHJhbnNpdGlvbkdyb3VwMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0NTU1RyYW5zaXRpb25Hcm91cCk7XG5cbnZhciBfVHJhbnNpdGlvbkdyb3VwID0gcmVxdWlyZSgnLi9UcmFuc2l0aW9uR3JvdXAnKTtcblxudmFyIF9UcmFuc2l0aW9uR3JvdXAyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfVHJhbnNpdGlvbkdyb3VwKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFRyYW5zaXRpb25Hcm91cDogX1RyYW5zaXRpb25Hcm91cDIuZGVmYXVsdCxcbiAgQ1NTVHJhbnNpdGlvbkdyb3VwOiBfQ1NTVHJhbnNpdGlvbkdyb3VwMi5kZWZhdWx0XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE2OTZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1696\n");

/***/ }),

/***/ 1697:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export REGISTER */\n/* unused harmony export LOGIN */\n/* unused harmony export LOGOUT */\n/* unused harmony export IMPORT */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return FUND_ACCOUNT; });\n/* unused harmony export AUTH_TYPES */\n/* unused harmony export DEFAULT_AUTH_TYPE */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AIRBITZ_WALLET_TYPE; });\nvar _AUTH_TYPES;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar REGISTER = 'register';\nvar LOGIN = 'login';\nvar LOGOUT = 'logout';\nvar IMPORT = 'import';\nvar FUND_ACCOUNT = 'fund_account';\n\nvar AUTH_TYPES = (_AUTH_TYPES = {}, _defineProperty(_AUTH_TYPES, REGISTER, REGISTER), _defineProperty(_AUTH_TYPES, LOGIN, LOGIN), _defineProperty(_AUTH_TYPES, IMPORT, IMPORT), _defineProperty(_AUTH_TYPES, LOGOUT, LOGOUT), _AUTH_TYPES);\n\nvar DEFAULT_AUTH_TYPE = REGISTER;\n\nvar AIRBITZ_WALLET_TYPE = 'wallet:ethereum';\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(REGISTER, 'REGISTER', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(LOGIN, 'LOGIN', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(LOGOUT, 'LOGOUT', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(IMPORT, 'IMPORT', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(FUND_ACCOUNT, 'FUND_ACCOUNT', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(AUTH_TYPES, 'AUTH_TYPES', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(DEFAULT_AUTH_TYPE, 'DEFAULT_AUTH_TYPE', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n\n  __REACT_HOT_LOADER__.register(AIRBITZ_WALLET_TYPE, 'AIRBITZ_WALLET_TYPE', '/Users/do/augur/dev/augur/src/modules/auth/constants/auth-types.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnN0YW50cy9hdXRoLXR5cGVzLmpzPzkwOWEiXSwibmFtZXMiOlsiUkVHSVNURVIiLCJMT0dJTiIsIkxPR09VVCIsIklNUE9SVCIsIkZVTkRfQUNDT1VOVCIsIkFVVEhfVFlQRVMiLCJERUZBVUxUX0FVVEhfVFlQRSIsIkFJUkJJVFpfV0FMTEVUX1RZUEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFPLElBQU1BLFdBQVcsVUFBakI7QUFDQSxJQUFNQyxRQUFRLE9BQWQ7QUFDQSxJQUFNQyxTQUFTLFFBQWY7QUFDQSxJQUFNQyxTQUFTLFFBQWY7QUFDQSxJQUFNQyxlQUFlLGNBQXJCOztBQUVBLElBQU1DLDZEQUNWTCxRQURVLEVBQ0NBLFFBREQsZ0NBRVZDLEtBRlUsRUFFRkEsS0FGRSxnQ0FHVkUsTUFIVSxFQUdEQSxNQUhDLGdDQUlWRCxNQUpVLEVBSURBLE1BSkMsZUFBTjs7QUFPQSxJQUFNSSxvQkFBb0JOLFFBQTFCOztBQUVBLElBQU1PLHNCQUFzQixpQkFBNUI7Ozs7Ozs7O2dDQWZNUCxROztnQ0FDQUMsSzs7Z0NBQ0FDLE07O2dDQUNBQyxNOztnQ0FDQUMsWTs7Z0NBRUFDLFU7O2dDQU9BQyxpQjs7Z0NBRUFDLG1CIiwiZmlsZSI6IjE2OTcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUkVHSVNURVIgPSAncmVnaXN0ZXInXG5leHBvcnQgY29uc3QgTE9HSU4gPSAnbG9naW4nXG5leHBvcnQgY29uc3QgTE9HT1VUID0gJ2xvZ291dCdcbmV4cG9ydCBjb25zdCBJTVBPUlQgPSAnaW1wb3J0J1xuZXhwb3J0IGNvbnN0IEZVTkRfQUNDT1VOVCA9ICdmdW5kX2FjY291bnQnXG5cbmV4cG9ydCBjb25zdCBBVVRIX1RZUEVTID0ge1xuICBbUkVHSVNURVJdOiBSRUdJU1RFUixcbiAgW0xPR0lOXTogTE9HSU4sXG4gIFtJTVBPUlRdOiBJTVBPUlQsXG4gIFtMT0dPVVRdOiBMT0dPVVRcbn1cblxuZXhwb3J0IGNvbnN0IERFRkFVTFRfQVVUSF9UWVBFID0gUkVHSVNURVJcblxuZXhwb3J0IGNvbnN0IEFJUkJJVFpfV0FMTEVUX1RZUEUgPSAnd2FsbGV0OmV0aGVyZXVtJ1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb25zdGFudHMvYXV0aC10eXBlcy5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1697\n");

/***/ }),

/***/ 1698:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_airbitz_core_js_ui__ = __webpack_require__(1699);\n\n\n// NOTE -- I have a strong suspicion we can refactor this out to be clearer/cleaner, leaving for now\n\nvar selectABCUIContext = function selectABCUIContext() {\n  return Object(__WEBPACK_IMPORTED_MODULE_0_airbitz_core_js_ui__[\"a\" /* makeABCUIContext */])({\n    apiKey: 'e239ec875955ec7474628a1dc3d449c8ea8e1b48',\n    appId: 'net.augur.app',\n    assetPath: '/abcui/assets/', // NOTE -- this is only here until the lib fixes this bug (PR submitted)\n    assetsPath: '/abcui/assets/',\n    vendorName: 'Augur',\n    vendorImageUrl: 'https://airbitz.co/go/wp-content/uploads/2016/08/augur_logo_100.png'\n  });\n};\n\nvar _default = selectABCUIContext;\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(selectABCUIContext, 'selectABCUIContext', '/Users/do/augur/dev/augur/src/modules/auth/helpers/abc.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/helpers/abc.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2hlbHBlcnMvYWJjLmpzP2VmYmIiXSwibmFtZXMiOlsic2VsZWN0QUJDVUlDb250ZXh0IiwibWFrZUFCQ1VJQ29udGV4dCIsImFwaUtleSIsImFwcElkIiwiYXNzZXRQYXRoIiwiYXNzZXRzUGF0aCIsInZlbmRvck5hbWUiLCJ2ZW5kb3JJbWFnZVVybCJdLCJtYXBwaW5ncyI6IjtBQUFBOztBQUVBOztBQUVBLElBQU1BLHFCQUFxQixTQUFyQkEsa0JBQXFCO0FBQUEsU0FBTSxvRkFBQUMsQ0FBaUI7QUFDaERDLFlBQVEsMENBRHdDO0FBRWhEQyxXQUFPLGVBRnlDO0FBR2hEQyxlQUFXLGdCQUhxQyxFQUduQjtBQUM3QkMsZ0JBQVksZ0JBSm9DO0FBS2hEQyxnQkFBWSxPQUxvQztBQU1oREMsb0JBQWdCO0FBTmdDLEdBQWpCLENBQU47QUFBQSxDQUEzQjs7ZUFTZVAsa0I7QUFBZjs7Ozs7Ozs7Z0NBVE1BLGtCIiwiZmlsZSI6IjE2OTguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlQUJDVUlDb250ZXh0IH0gZnJvbSAnYWlyYml0ei1jb3JlLWpzLXVpJ1xuXG4vLyBOT1RFIC0tIEkgaGF2ZSBhIHN0cm9uZyBzdXNwaWNpb24gd2UgY2FuIHJlZmFjdG9yIHRoaXMgb3V0IHRvIGJlIGNsZWFyZXIvY2xlYW5lciwgbGVhdmluZyBmb3Igbm93XG5cbmNvbnN0IHNlbGVjdEFCQ1VJQ29udGV4dCA9ICgpID0+IG1ha2VBQkNVSUNvbnRleHQoe1xuICBhcGlLZXk6ICdlMjM5ZWM4NzU5NTVlYzc0NzQ2MjhhMWRjM2Q0NDljOGVhOGUxYjQ4JyxcbiAgYXBwSWQ6ICduZXQuYXVndXIuYXBwJyxcbiAgYXNzZXRQYXRoOiAnL2FiY3VpL2Fzc2V0cy8nLCAvLyBOT1RFIC0tIHRoaXMgaXMgb25seSBoZXJlIHVudGlsIHRoZSBsaWIgZml4ZXMgdGhpcyBidWcgKFBSIHN1Ym1pdHRlZClcbiAgYXNzZXRzUGF0aDogJy9hYmN1aS9hc3NldHMvJyxcbiAgdmVuZG9yTmFtZTogJ0F1Z3VyJyxcbiAgdmVuZG9ySW1hZ2VVcmw6ICdodHRwczovL2FpcmJpdHouY28vZ28vd3AtY29udGVudC91cGxvYWRzLzIwMTYvMDgvYXVndXJfbG9nb18xMDAucG5nJ1xufSlcblxuZXhwb3J0IGRlZmF1bHQgc2VsZWN0QUJDVUlDb250ZXh0XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2hlbHBlcnMvYWJjLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1698\n");

/***/ }),

/***/ 1699:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return makeABCUIContext; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_airbitz_core_js__ = __webpack_require__(1700);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_whatwg_fetch__ = __webpack_require__(1717);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_whatwg_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_whatwg_fetch__);\n\n\n\nvar DomWindow;\nvar DomDocument;\nif (typeof window === 'undefined') {\n  DomWindow = {};\n} else {\n  DomWindow = window;\n}\nif (typeof document === 'undefined') {\n  DomDocument = {\n    createElement: function () {\n      console.log(\n        'createElement: Error browser routine used in non-browser environment'\n      );\n    },\n    getElementsByTagName: function () {\n      console.log(\n        'getElementsByTagName: Error browser routine used in non-browser environment'\n      );\n    }\n  };\n} else {\n  DomDocument = document;\n}\nfunction createIFrame (path) {\n  var frame = DomDocument.createElement('iframe');\n  var body = DomDocument.getElementsByTagName('BODY')[0];\n  body.appendChild(frame, body);\n  frame.setAttribute('src', path);\n  frame.setAttribute('frameborder', '0');\n  frame.setAttribute('allowtransparency', 'true');\n  frame.setAttribute(\n    'style',\n    'border: 0px none transparent; overflow: hidden; visibility: visible; margin: 0px; padding: 0px; position: fixed; left: 0px; top: 0px; width: 100%; height: 100%; z-index: 9999; display: block; background: transparent;'\n  );\n  return frame\n}\n\nfunction removeIFrame (frame) {\n  frame.parentNode.removeChild(frame);\n}\n\nfunction makeABCUIContext (args) {\n  return new UIContext(args)\n}\n\nvar UIContext = function UIContext (args) {\n  var opts = {};\n\n  // API key:\n  if (args.apiKey == null) {\n    throw new Error('Missing api key')\n  }\n  opts.apiKey = args.apiKey;\n\n  // appId:\n  if (args.appId != null) {\n    opts.appId = args.appId;\n  } else if (args.accountType != null) {\n    opts.accountType = args.accountType;\n    console.warn(\n      'Please provide Airbitz with an `appId`. The `accountType` is deprecated.'\n    );\n  } else {\n    throw new Error('Missing appId')\n  }\n\n  // Figure out which server to use:\n  if (DomWindow.localStorage != null) {\n    var value = DomWindow.localStorage.getItem('airbitzAuthServer');\n    if (value != null) {\n      opts.authServer = value;\n    }\n  }\n\n  // Make the core context:\n  this.abcContext = Object(__WEBPACK_IMPORTED_MODULE_0_airbitz_core_js__[\"a\" /* makeContext */])(opts);\n  this.abcContext.displayName = args.vendorName;\n  this.abcContext.displayImageUrl = args.vendorImageUrl;\n  DomWindow.abcContext = this.abcContext;\n\n  // Set up the UI context:\n  if (args.assetPath != null) {\n    this.assetsPath = args.assetsPath;\n  } else if (args.bundlePath != null) {\n    this.assetsPath = args.bundlePath + '/assets';\n  } else {\n    this.assetsPath = './assets';\n  }\n\n  DomWindow.abcuiContext = {\n    vendorName: args.vendorName,\n    assetsPath: this.assetsPath\n  };\n};\n\nUIContext.prototype.openLoginWindow = function openLoginWindow (callback) {\n  var frame = createIFrame(this.assetsPath + '/index.html');\n  var done = function () {\n    DomWindow.loginCallback = null;\n    removeIFrame(frame);\n  };\n  DomWindow.loginCallback = function (error, account) {\n    if (account) {\n      DomWindow.abcAccount = account;\n      callback(error, account);\n      done();\n    }\n  };\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame);\n  };\n};\n\nUIContext.prototype.getABCContext = function getABCContext () {\n  return this.abcContext\n};\n\nUIContext.prototype.openRecoveryWindow = function openRecoveryWindow (callback) {\n  createIFrame(this.assetsPath + '/index.html#/recovery');\n};\n\nUIContext.prototype.openSetupRecoveryWindow = function openSetupRecoveryWindow (account, opts, callback) {\n  var frame;\n  if (opts && opts.noRequirePassword) {\n    frame = createIFrame(\n      this.assetsPath + '/index.html#/account/setuprecovery-nopassword'\n    );\n  } else {\n    frame = createIFrame(\n      this.assetsPath + '/index.html#/account/setuprecovery'\n    );\n  }\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame);\n  };\n};\n\nUIContext.prototype.openChangePinEdgeLoginWindow = function openChangePinEdgeLoginWindow (account, callback) {\n  var frame = createIFrame(\n    this.assetsPath + '/index.html#/account/changepin-edge-login'\n  );\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame);\n  };\n};\n\nUIContext.prototype.openManageWindow = function openManageWindow (account, callback) {\n  DomWindow.abcAccount = account;\n  var frame = createIFrame(this.assetsPath + '/index.html#/home/');\n  DomWindow.exitCallback = function () {\n    removeIFrame(frame);\n    callback(null);\n  };\n};\n\n\n//# sourceMappingURL=abcui.es6.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzLXVpL2xpYi9hYmN1aS5lczYuanM/ZWE2MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQXNCO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0JBQWtCLHFCQUFxQixhQUFhLGNBQWMsaUJBQWlCLFdBQVcsVUFBVSxhQUFhLGNBQWMsZUFBZSxnQkFBZ0IseUJBQXlCO0FBQzdOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFUTtBQUNSIiwiZmlsZSI6IjE2OTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlQ29udGV4dCB9IGZyb20gJ2FpcmJpdHotY29yZS1qcyc7XG5pbXBvcnQgJ3doYXR3Zy1mZXRjaCc7XG5cbnZhciBEb21XaW5kb3c7XG52YXIgRG9tRG9jdW1lbnQ7XG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgRG9tV2luZG93ID0ge307XG59IGVsc2Uge1xuICBEb21XaW5kb3cgPSB3aW5kb3c7XG59XG5pZiAodHlwZW9mIGRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICBEb21Eb2N1bWVudCA9IHtcbiAgICBjcmVhdGVFbGVtZW50OiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgJ2NyZWF0ZUVsZW1lbnQ6IEVycm9yIGJyb3dzZXIgcm91dGluZSB1c2VkIGluIG5vbi1icm93c2VyIGVudmlyb25tZW50J1xuICAgICAgKTtcbiAgICB9LFxuICAgIGdldEVsZW1lbnRzQnlUYWdOYW1lOiBmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgJ2dldEVsZW1lbnRzQnlUYWdOYW1lOiBFcnJvciBicm93c2VyIHJvdXRpbmUgdXNlZCBpbiBub24tYnJvd3NlciBlbnZpcm9ubWVudCdcbiAgICAgICk7XG4gICAgfVxuICB9O1xufSBlbHNlIHtcbiAgRG9tRG9jdW1lbnQgPSBkb2N1bWVudDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUlGcmFtZSAocGF0aCkge1xuICB2YXIgZnJhbWUgPSBEb21Eb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTtcbiAgdmFyIGJvZHkgPSBEb21Eb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnQk9EWScpWzBdO1xuICBib2R5LmFwcGVuZENoaWxkKGZyYW1lLCBib2R5KTtcbiAgZnJhbWUuc2V0QXR0cmlidXRlKCdzcmMnLCBwYXRoKTtcbiAgZnJhbWUuc2V0QXR0cmlidXRlKCdmcmFtZWJvcmRlcicsICcwJyk7XG4gIGZyYW1lLnNldEF0dHJpYnV0ZSgnYWxsb3d0cmFuc3BhcmVuY3knLCAndHJ1ZScpO1xuICBmcmFtZS5zZXRBdHRyaWJ1dGUoXG4gICAgJ3N0eWxlJyxcbiAgICAnYm9yZGVyOiAwcHggbm9uZSB0cmFuc3BhcmVudDsgb3ZlcmZsb3c6IGhpZGRlbjsgdmlzaWJpbGl0eTogdmlzaWJsZTsgbWFyZ2luOiAwcHg7IHBhZGRpbmc6IDBweDsgcG9zaXRpb246IGZpeGVkOyBsZWZ0OiAwcHg7IHRvcDogMHB4OyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyB6LWluZGV4OiA5OTk5OyBkaXNwbGF5OiBibG9jazsgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7J1xuICApO1xuICByZXR1cm4gZnJhbWVcbn1cblxuZnVuY3Rpb24gcmVtb3ZlSUZyYW1lIChmcmFtZSkge1xuICBmcmFtZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGZyYW1lKTtcbn1cblxuZnVuY3Rpb24gbWFrZUFCQ1VJQ29udGV4dCAoYXJncykge1xuICByZXR1cm4gbmV3IFVJQ29udGV4dChhcmdzKVxufVxuXG52YXIgVUlDb250ZXh0ID0gZnVuY3Rpb24gVUlDb250ZXh0IChhcmdzKSB7XG4gIHZhciBvcHRzID0ge307XG5cbiAgLy8gQVBJIGtleTpcbiAgaWYgKGFyZ3MuYXBpS2V5ID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgYXBpIGtleScpXG4gIH1cbiAgb3B0cy5hcGlLZXkgPSBhcmdzLmFwaUtleTtcblxuICAvLyBhcHBJZDpcbiAgaWYgKGFyZ3MuYXBwSWQgIT0gbnVsbCkge1xuICAgIG9wdHMuYXBwSWQgPSBhcmdzLmFwcElkO1xuICB9IGVsc2UgaWYgKGFyZ3MuYWNjb3VudFR5cGUgIT0gbnVsbCkge1xuICAgIG9wdHMuYWNjb3VudFR5cGUgPSBhcmdzLmFjY291bnRUeXBlO1xuICAgIGNvbnNvbGUud2FybihcbiAgICAgICdQbGVhc2UgcHJvdmlkZSBBaXJiaXR6IHdpdGggYW4gYGFwcElkYC4gVGhlIGBhY2NvdW50VHlwZWAgaXMgZGVwcmVjYXRlZC4nXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgYXBwSWQnKVxuICB9XG5cbiAgLy8gRmlndXJlIG91dCB3aGljaCBzZXJ2ZXIgdG8gdXNlOlxuICBpZiAoRG9tV2luZG93LmxvY2FsU3RvcmFnZSAhPSBudWxsKSB7XG4gICAgdmFyIHZhbHVlID0gRG9tV2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhaXJiaXR6QXV0aFNlcnZlcicpO1xuICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICBvcHRzLmF1dGhTZXJ2ZXIgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICAvLyBNYWtlIHRoZSBjb3JlIGNvbnRleHQ6XG4gIHRoaXMuYWJjQ29udGV4dCA9IG1ha2VDb250ZXh0KG9wdHMpO1xuICB0aGlzLmFiY0NvbnRleHQuZGlzcGxheU5hbWUgPSBhcmdzLnZlbmRvck5hbWU7XG4gIHRoaXMuYWJjQ29udGV4dC5kaXNwbGF5SW1hZ2VVcmwgPSBhcmdzLnZlbmRvckltYWdlVXJsO1xuICBEb21XaW5kb3cuYWJjQ29udGV4dCA9IHRoaXMuYWJjQ29udGV4dDtcblxuICAvLyBTZXQgdXAgdGhlIFVJIGNvbnRleHQ6XG4gIGlmIChhcmdzLmFzc2V0UGF0aCAhPSBudWxsKSB7XG4gICAgdGhpcy5hc3NldHNQYXRoID0gYXJncy5hc3NldHNQYXRoO1xuICB9IGVsc2UgaWYgKGFyZ3MuYnVuZGxlUGF0aCAhPSBudWxsKSB7XG4gICAgdGhpcy5hc3NldHNQYXRoID0gYXJncy5idW5kbGVQYXRoICsgJy9hc3NldHMnO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuYXNzZXRzUGF0aCA9ICcuL2Fzc2V0cyc7XG4gIH1cblxuICBEb21XaW5kb3cuYWJjdWlDb250ZXh0ID0ge1xuICAgIHZlbmRvck5hbWU6IGFyZ3MudmVuZG9yTmFtZSxcbiAgICBhc3NldHNQYXRoOiB0aGlzLmFzc2V0c1BhdGhcbiAgfTtcbn07XG5cblVJQ29udGV4dC5wcm90b3R5cGUub3BlbkxvZ2luV2luZG93ID0gZnVuY3Rpb24gb3BlbkxvZ2luV2luZG93IChjYWxsYmFjaykge1xuICB2YXIgZnJhbWUgPSBjcmVhdGVJRnJhbWUodGhpcy5hc3NldHNQYXRoICsgJy9pbmRleC5odG1sJyk7XG4gIHZhciBkb25lID0gZnVuY3Rpb24gKCkge1xuICAgIERvbVdpbmRvdy5sb2dpbkNhbGxiYWNrID0gbnVsbDtcbiAgICByZW1vdmVJRnJhbWUoZnJhbWUpO1xuICB9O1xuICBEb21XaW5kb3cubG9naW5DYWxsYmFjayA9IGZ1bmN0aW9uIChlcnJvciwgYWNjb3VudCkge1xuICAgIGlmIChhY2NvdW50KSB7XG4gICAgICBEb21XaW5kb3cuYWJjQWNjb3VudCA9IGFjY291bnQ7XG4gICAgICBjYWxsYmFjayhlcnJvciwgYWNjb3VudCk7XG4gICAgICBkb25lKCk7XG4gICAgfVxuICB9O1xuICBEb21XaW5kb3cuZXhpdENhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHJlbW92ZUlGcmFtZShmcmFtZSk7XG4gIH07XG59O1xuXG5VSUNvbnRleHQucHJvdG90eXBlLmdldEFCQ0NvbnRleHQgPSBmdW5jdGlvbiBnZXRBQkNDb250ZXh0ICgpIHtcbiAgcmV0dXJuIHRoaXMuYWJjQ29udGV4dFxufTtcblxuVUlDb250ZXh0LnByb3RvdHlwZS5vcGVuUmVjb3ZlcnlXaW5kb3cgPSBmdW5jdGlvbiBvcGVuUmVjb3ZlcnlXaW5kb3cgKGNhbGxiYWNrKSB7XG4gIGNyZWF0ZUlGcmFtZSh0aGlzLmFzc2V0c1BhdGggKyAnL2luZGV4Lmh0bWwjL3JlY292ZXJ5Jyk7XG59O1xuXG5VSUNvbnRleHQucHJvdG90eXBlLm9wZW5TZXR1cFJlY292ZXJ5V2luZG93ID0gZnVuY3Rpb24gb3BlblNldHVwUmVjb3ZlcnlXaW5kb3cgKGFjY291bnQsIG9wdHMsIGNhbGxiYWNrKSB7XG4gIHZhciBmcmFtZTtcbiAgaWYgKG9wdHMgJiYgb3B0cy5ub1JlcXVpcmVQYXNzd29yZCkge1xuICAgIGZyYW1lID0gY3JlYXRlSUZyYW1lKFxuICAgICAgdGhpcy5hc3NldHNQYXRoICsgJy9pbmRleC5odG1sIy9hY2NvdW50L3NldHVwcmVjb3Zlcnktbm9wYXNzd29yZCdcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGZyYW1lID0gY3JlYXRlSUZyYW1lKFxuICAgICAgdGhpcy5hc3NldHNQYXRoICsgJy9pbmRleC5odG1sIy9hY2NvdW50L3NldHVwcmVjb3ZlcnknXG4gICAgKTtcbiAgfVxuICBEb21XaW5kb3cuZXhpdENhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHJlbW92ZUlGcmFtZShmcmFtZSk7XG4gIH07XG59O1xuXG5VSUNvbnRleHQucHJvdG90eXBlLm9wZW5DaGFuZ2VQaW5FZGdlTG9naW5XaW5kb3cgPSBmdW5jdGlvbiBvcGVuQ2hhbmdlUGluRWRnZUxvZ2luV2luZG93IChhY2NvdW50LCBjYWxsYmFjaykge1xuICB2YXIgZnJhbWUgPSBjcmVhdGVJRnJhbWUoXG4gICAgdGhpcy5hc3NldHNQYXRoICsgJy9pbmRleC5odG1sIy9hY2NvdW50L2NoYW5nZXBpbi1lZGdlLWxvZ2luJ1xuICApO1xuICBEb21XaW5kb3cuZXhpdENhbGxiYWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHJlbW92ZUlGcmFtZShmcmFtZSk7XG4gIH07XG59O1xuXG5VSUNvbnRleHQucHJvdG90eXBlLm9wZW5NYW5hZ2VXaW5kb3cgPSBmdW5jdGlvbiBvcGVuTWFuYWdlV2luZG93IChhY2NvdW50LCBjYWxsYmFjaykge1xuICBEb21XaW5kb3cuYWJjQWNjb3VudCA9IGFjY291bnQ7XG4gIHZhciBmcmFtZSA9IGNyZWF0ZUlGcmFtZSh0aGlzLmFzc2V0c1BhdGggKyAnL2luZGV4Lmh0bWwjL2hvbWUvJyk7XG4gIERvbVdpbmRvdy5leGl0Q2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmVtb3ZlSUZyYW1lKGZyYW1lKTtcbiAgICBjYWxsYmFjayhudWxsKTtcbiAgfTtcbn07XG5cbmV4cG9ydCB7IG1ha2VBQkNVSUNvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFiY3VpLmVzNi5qcy5tYXBcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2FpcmJpdHotY29yZS1qcy11aS9saWIvYWJjdWkuZXM2LmpzXG4vLyBtb2R1bGUgaWQgPSAxNjk5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1699\n");

/***/ }),

/***/ 1700:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export error */\n/* unused harmony export internal */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return makeContext; });\n/* unused harmony export makeABCContext */\n/* unused harmony export makeCurrencyWallet */\n/* unused harmony export makeBrowserIo */\n/* unused harmony export makeFakeIos */\n/* unused harmony export NetworkError */\n/* unused harmony export ObsoleteApiError */\n/* unused harmony export UsernameError */\n/* unused harmony export PasswordError */\n/* unused harmony export OtpError */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_base_x__ = __webpack_require__(1701);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_base_x___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_base_x__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rfc4648__ = __webpack_require__(1596);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utf8__ = __webpack_require__(1707);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utf8___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_utf8__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_aes_js__ = __webpack_require__(1708);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_aes_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_aes_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_redux__ = __webpack_require__(1709);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_disklet__ = __webpack_require__(1713);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_scrypt_js__ = __webpack_require__(1716);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_scrypt_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_scrypt_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_redux_thunk__ = __webpack_require__(361);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_redux_thunk___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_redux_thunk__);\n\n\n\n\n\n\n\n\n\nvar CREATE_REACTION = 'redux-reactions/CREATE_REACTION';\nvar DISPOSE_REACTION = 'redux-reactions/DISPOSE_REACTION';\n\n/**\n * Returns an action which installs a reaction.\n *\n * The first parameters must be selector functions.\n * These accept the total store state and return the values\n * needed to trigger the reaction.\n *\n * The final function implements the reaction.\n * It is called when any of its selectors return a different value.\n */\nfunction createReaction () {\n  var selectors = [], len = arguments.length;\n  while ( len-- ) selectors[ len ] = arguments[ len ];\n\n  var reaction = selectors.pop();\n\n  return { type: CREATE_REACTION, payload: { reaction: reaction, selectors: selectors } }\n}\n\n/**\n * Assuming the state has changed, attempts to run a reaction.\n */\nfunction runReaction (state, cache) {\n  var inputs = cache.inputs;\n  var reaction = cache.reaction;\n  var selectors = cache.selectors;\n\n  // Check the selectors, starting a new array if there are changes:\n  var newInputs;\n  for (var i = 0; i < selectors.length; ++i) {\n    var input = selectors[i](state);\n\n    if (newInputs) {\n      newInputs[i] = input;\n    } else if (input !== inputs[i]) {\n      newInputs = inputs.slice(0, i);\n      newInputs[i] = input;\n    }\n  }\n\n  // Run the reaction if the inputs have changed:\n  if (newInputs) {\n    cache.inputs = newInputs;\n    return reaction.apply(void 0, newInputs.concat( inputs ))\n  }\n}\n\n/**\n * Add this middleware to your reducer to enable reactions.\n */\nfunction reactionMiddleware (ref) {\n  var dispatch = ref.dispatch;\n  var getState = ref.getState;\n\n  var reactions = [];\n  var nextId = 0;\n  var oldState;\n\n  function maybeRun (out) {\n    return typeof out === 'function' ? out(dispatch, getState) : out\n  }\n\n  return function (next) { return function (action) {\n    var type = action.type;\n    var payload = action.payload;\n\n    // Intercept our action types:\n    switch (type) {\n      case CREATE_REACTION: {\n        var reaction = payload.reaction;\n        var selectors = payload.selectors;\n        var id = ++nextId;\n        var cache = { id: id, inputs: [], reaction: reaction, selectors: selectors };\n\n        reactions.push(cache);\n        var out$1 = maybeRun(runReaction(getState(), cache));\n\n        return { type: DISPOSE_REACTION, payload: { id: id, out: out$1 } }\n      }\n      case DISPOSE_REACTION: {\n        reactions = reactions.filter(function (cache) { return cache.id !== payload.id; });\n        return\n      }\n    }\n\n    var out = next(action);\n\n    // Run the reactions if the state has changed:\n    var actions = [];\n    var state = getState();\n    if (state !== oldState) {\n      oldState = state;\n      for (var i = 0, list = reactions; i < list.length; i += 1) {\n        var cache$1 = list[i];\n\n        actions.push(runReaction(state, cache$1));\n      }\n    }\n\n    // Dispatch any actions that were generated:\n    for (var i$1 = 0, list$1 = actions; i$1 < list$1.length; i$1 += 1) {\n      var action$1 = list$1[i$1];\n\n      maybeRun(action$1);\n    }\n\n    return out\n  }; }\n}\n\n/**\n * Returns x, unless that would be undefined or null.\n * This is called the \"Elvis operator\" in many languages.\n */\nfunction elvis (x, fallback) {\n  return x != null ? x : fallback\n}\n\n/**\n * Copies the selected properties into a new object, if they exist.\n */\nfunction filterObject (source, keys) {\n  var out = {};\n  for (var i = 0, list = keys; i < list.length; i += 1) {\n    var key = list[i];\n\n    if (key in source) {\n      out[key] = source[key];\n    }\n  }\n  return out\n}\n\n/**\n * Safely concatenate a bunch of arrays, which may or may not exist.\n * Purrs quietly when pet.\n */\nfunction softCat () {\n  var lists = [], len = arguments.length;\n  while ( len-- ) lists[ len ] = arguments[ len ];\n\n  return (ref = []).concat.apply(ref, lists.filter(function (list) { return list != null; }))\n  var ref;\n}\n\n/**\n * Merges several Javascript objects deeply,\n * prefering the items from later objects.\n */\nfunction mergeDeeply () {\n  var objects = [], len = arguments.length;\n  while ( len-- ) objects[ len ] = arguments[ len ];\n\n  var out = {};\n\n  for (var i = 0, list = objects; i < list.length; i += 1) {\n    var o = list[i];\n\n    if (o == null) { continue }\n\n    for (var i$1 = 0, list$1 = Object.keys(o); i$1 < list$1.length; i$1 += 1) {\n      var key = list$1[i$1];\n\n      if (o[key] == null) { continue }\n\n      out[key] = out[key] != null && typeof o[key] === 'object'\n        ? mergeDeeply(out[key], o[key])\n        : o[key];\n    }\n  }\n\n  return out\n}\n\nfunction compareInputs (a, b) {\n  if ( b === void 0 ) b = [];\n\n  if (a.length !== b.length) { return false }\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) { return false }\n  }\n  return true\n}\n\n/**\n * Creates a cached selector for an expensive-to-compute value.\n * @param {*} selector A function that takes the state and some optional\n * parameters. Each parameter is used to index into the cache.\n * The selector should return an array of values, which are passed into\n * the derive function.\n * @param {*} derive This is the expensive calculation.\n * Its inputs come from the selector function.\n */\nfunction deriveSelector (selector, derive) {\n  var cacheTree = {};\n\n  var out = function derivedSelector (state) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    // The arguments must match the selector:\n    if (args.length + 1 !== selector.length) {\n      throw new Error((\"Expected \" + (selector.length) + \" arguments\"))\n    }\n\n    // Navigate to our specific cache:\n    var cache = cacheTree;\n    for (var i = 0, list = args; i < list.length; i += 1) {\n      var arg = list[i];\n\n      if (!cache[arg]) { cache[arg] = {}; }\n      cache = cache[arg];\n    }\n\n    // First, see if the state has changed:\n    if (cache.oldState === state) { return cache.value }\n    cache.oldState = state;\n\n    // Next, check the inputs:\n    var newInputs = selector.apply(void 0, [ state ].concat( args ));\n    if (!Array.isArray(newInputs)) {\n      throw new Error('The sector for a derived value should return an array.')\n    }\n\n    // Run the derivation if the inputs have changed:\n    if (!compareInputs(newInputs, cache.inputs)) {\n      cache.inputs = newInputs;\n      cache.value = derive.apply(void 0, newInputs);\n    }\n\n    return cache.value\n  };\n\n  out.clearCache = function clearCache () {\n    cacheTree = {};\n  };\n\n  return out\n}\n\n// Basic wallet functionality:\nfunction getCurrencyWalletEngine (state, keyId) {\n  return state.currencyWallets[keyId].engine\n}\n\nfunction getCurrencyWalletPlugin (state, keyId) {\n  return state.currencyWallets[keyId].plugin\n}\n\n// Settable values:\n\nfunction getCurrencyWalletBalance (state, keyId) {\n  return state.currencyWallets[keyId].balance\n}\n\nfunction getCurrencyWalletBlockHeight (state, keyId) {\n  return state.currencyWallets[keyId].blockHeight\n}\n\nfunction getCurrencyWalletName (state, keyId) {\n  return state.currencyWallets[keyId].name\n}\n\nfunction getCurrencyWalletFiat (state, keyId) {\n  return 'iso:USD'\n}\n\nfunction getCurrencyWalletFile (state, keyId, txid) {\n  return state.currencyWallets[keyId].files[txid]\n}\n\nfunction getCurrencyWalletProgress (state, keyId) {\n  return state.currencyWallets[keyId].progress\n}\n\n// Transactions:\n\nfunction getCurrencyWalletFiles (state, keyId) {\n  return state.currencyWallets[keyId].files\n}\n\n/**\n * Returns a list of `{ txid?: string, filename?: string, date?: number }`.\n * TODO: Merge our file list with the plugin txid list.\n */\nvar getCurrencyWalletTxList = deriveSelector(\n  function (state, keyId) { return [state.currencyWallets[keyId].txs]; },\n  function (txs) { return Object.keys(txs).map(function (txid) { return ({ txid: txid }); }); }\n);\n\nfunction getCurrencyWalletTxs (state, keyId) {\n  return state.currencyWallets[keyId].txs\n}\n\n/**\n * Recursively searches for the best exchange rate.\n */\nfunction searchRoutes (search, fromCurrency, parentRate, blacklist) {\n  // If we reach our target, we are done:\n  if (fromCurrency === search.toCurrency) {\n    search.bestRate = parentRate;\n  }\n\n  // Never re-vist the same currency:\n  blacklist = Object.assign({}, blacklist);\n  blacklist[fromCurrency] = true;\n\n  // Iterate over all the currencies we can convert to from here:\n  for (var i$1 = 0, list = Object.keys(search.routes[fromCurrency]); i$1 < list.length; i$1 += 1) {\n    // Skip this currency if it is on the blacklist:\n    var currency = list[i$1];\n\n    if (blacklist[currency]) { continue }\n\n    // Of all the pairs that bring us to this currency, find the best one:\n    var ourRate = { rate: 0, cost: Infinity };\n    var indices = search.routes[fromCurrency][currency];\n    for (var i$2 = 0, list$1 = indices; i$2 < list$1.length; i$2 += 1) {\n      var i = list$1[i$2];\n\n      var pair = search.pairs[i];\n      var inverse = pair.fromCurrency !== fromCurrency;\n      var cost =\n        parentRate.cost +\n        search.getPairCost(pair.source, search.now - pair.timestamp, inverse);\n\n      // Save this rate if it has a better score:\n      if (cost < ourRate.cost) {\n        var rate = inverse\n          ? parentRate.rate / pair.rate\n          : parentRate.rate * pair.rate;\n        ourRate = { rate: rate, cost: cost };\n      }\n    }\n\n    // Only recurse if we have a better score:\n    if (ourRate.cost < search.bestRate.cost) {\n      searchRoutes(search, currency, ourRate, blacklist);\n    }\n  }\n}\n\nfunction startRouteSearch (\n  routes,\n  pairs,\n  fromCurrency,\n  toCurrency,\n  getPairCost\n) {\n  var search = {\n    // Search constants:\n    now: Date.now() / 1000,\n    routes: routes,\n    pairs: pairs,\n    toCurrency: toCurrency,\n    getPairCost: getPairCost,\n\n    // The search overwrites this as it finds better rates:\n    bestRate: { rate: 0, cost: Infinity }\n  };\n\n  // Only search if the endpoints exist:\n  if (search.routes[fromCurrency] && search.routes[toCurrency]) {\n    searchRoutes(search, fromCurrency, { rate: 1, cost: 0 }, {});\n  }\n\n  return search.bestRate.rate\n}\n\n/**\n * Looks up the best available exchange rate.\n * @param {*} getPairCost a function that assigns scores to currecy pairs.\n * Higher scores are worse. The scores add, so longer paths have higher costs\n * than shorter paths. The signature is `(source, age, inverse) => cost`.\n */\nfunction getExchangeRate (state, fromCurrency, toCurrency, getPairCost) {\n  return startRouteSearch(\n    state.exchangeCache.rates.routes,\n    state.exchangeCache.rates.pairs,\n    fromCurrency,\n    toCurrency,\n    getPairCost\n  )\n}\n\nfunction getCurrencyMultiplier (state, currencyCode) {\n  for (var i = 0, list = state.plugins.currencyPlugins; i < list.length; i += 1) {\n    var plugin = list[i];\n\n    var info = plugin.currencyInfo;\n\n    for (var i$1 = 0, list$1 = info.denominations; i$1 < list$1.length; i$1 += 1) {\n      var denomination = list$1[i$1];\n\n      if (denomination.name === currencyCode) {\n        return denomination.multiplier\n      }\n    }\n\n    for (var i$2 = 0, list$2 = info.metaTokens; i$2 < list$2.length; i$2 += 1) {\n      var token = list$2[i$2];\n\n      for (var i$3 = 0, list$3 = token.denominations; i$3 < list$3.length; i$3 += 1) {\n        var denomination$1 = list$3[i$3];\n\n        if (denomination$1.name === currencyCode) {\n          return denomination$1.multiplier\n        }\n      }\n    }\n  }\n\n  return 1\n}\n\nfunction getExchangePlugins (state) {\n  return state.plugins.exchangePlugins\n}\n\nvar base58Codec = __WEBPACK_IMPORTED_MODULE_0_base_x___default()(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n\nfunction assertString (text) {\n  if (typeof text !== 'string') {\n    throw new Error('Input is not a string')\n  }\n}\n\nfunction assertData (data) {\n  if (typeof data === 'string' || data.length == null) {\n    throw new Error('Input is not data')\n  }\n}\n\nvar base16$1 = {\n  parse: function parse (text) {\n    assertString(text);\n    return __WEBPACK_IMPORTED_MODULE_1_rfc4648__[\"a\" /* base16 */].parse(text, { out: Uint8Array })\n  },\n  stringify: function stringify (data) {\n    assertData(data);\n    return __WEBPACK_IMPORTED_MODULE_1_rfc4648__[\"a\" /* base16 */].stringify(data).toLowerCase()\n  }\n};\n\nvar base58 = {\n  parse: function parse (text) {\n    assertString(text);\n    return base58Codec.decode(text)\n  },\n  stringify: function stringify (data) {\n    assertData(data);\n    return base58Codec.encode(data)\n  }\n};\n\nvar base64$1 = {\n  parse: function parse (text) {\n    assertString(text);\n    return __WEBPACK_IMPORTED_MODULE_1_rfc4648__[\"b\" /* base64 */].parse(text, { out: Uint8Array })\n  },\n  stringify: function stringify (data) {\n    assertData(data);\n    return __WEBPACK_IMPORTED_MODULE_1_rfc4648__[\"b\" /* base64 */].stringify(data)\n  }\n};\n\nvar utf8 = {\n  parse: function parse (text) {\n    var byteString = __WEBPACK_IMPORTED_MODULE_2_utf8___default.a.encode(text);\n    var out = new Uint8Array(text.length);\n\n    for (var i = 0; i < text.length; ++i) {\n      out[i] = byteString.charCodeAt(i);\n    }\n\n    return out\n  },\n\n  stringify: function stringify (data) {\n    assertData(data);\n\n    // Some of our data contains terminating null bytes due to an old bug.\n    // We need to filter that out here:\n    var length = data[data.length - 1] === 0 ? data.length - 1 : data.length;\n\n    var byteString = '';\n    for (var i = 0; i < length; ++i) {\n      byteString += String.fromCharCode(data[i]);\n    }\n\n    return __WEBPACK_IMPORTED_MODULE_2_utf8___default.a.decode(byteString)\n  }\n};\n\nfunction calcSnrpForTarget (salt, benchMs, targetMs) {\n  var snrp = {\n    salt_hex: base16$1.stringify(salt),\n    n: 16384,\n    r: 1,\n    p: 1\n  };\n\n  var estTargetTimeElapsed = benchMs;\n  var nUnPowered = 0;\n  var r = targetMs / estTargetTimeElapsed;\n  if (r > 8) {\n    snrp.r = 8;\n\n    estTargetTimeElapsed *= 8;\n    var n = targetMs / estTargetTimeElapsed;\n\n    if (n > 4) {\n      nUnPowered = 4;\n\n      estTargetTimeElapsed *= 4;\n      var p = targetMs / estTargetTimeElapsed;\n      snrp.p = Math.floor(p);\n    } else {\n      nUnPowered = Math.floor(n);\n    }\n  } else {\n    snrp.r = r > 4 ? Math.floor(r) : 4;\n  }\n  nUnPowered = nUnPowered >= 1 ? nUnPowered : 1;\n  snrp.n = Math.pow(2, nUnPowered + 13);\n\n  return snrp\n}\n\n/**\n * Performs an scrypt derivation.\n */\nfunction scrypt (state, data, snrp) {\n  return state.scrypt.timeScrypt(data, snrp).then(function (value) { return value.hash; })\n}\n\n/**\n * Computes an SNRP value.\n */\nfunction makeSnrp (state, targetMs) {\n  if ( targetMs === void 0 ) targetMs = 2000;\n\n  var io = state.io;\n  var scrypt = state.scrypt;\n\n  // Run the benchmark.\n  // Writing directly to Redux would normally be a big no-no,\n  // but memoization is \"state\" in the normal sense:\n  if (scrypt.benchmark == null) {\n    scrypt.benchmark = scrypt.timeScrypt('', {\n      salt_hex: '00000000000000000000000000000000',\n      n: 16384,\n      r: 1,\n      p: 1\n    });\n  }\n\n  // Calculate an SNRP value:\n  return scrypt.benchmark.then(function (value) {\n    var benchMs = value.time;\n\n    var snrp = calcSnrpForTarget(io.random(32), benchMs, targetMs);\n    io.console.info(\n      (\"snrp: \" + (snrp.n) + \" \" + (snrp.r) + \" \" + (snrp.p) + \" based on \" + benchMs + \"ms benchmark\")\n    );\n    return snrp\n  })\n}\n\nvar userIdSnrp = {\n  salt_hex: 'b5865ffb9fa7b3bfe4b2384d47ce831ee22a4a9d5c34c7ef7d21467cc758f81b',\n  n: 16384,\n  r: 1,\n  p: 1\n};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar cryptoBundle = createCommonjsModule(function (module, exports) {\n(function(e, a) { for(var i in a) { e[i] = a[i]; } }(exports, /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\t{ return installedModules[moduleId].exports; }\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// These two libraries are broken under Rollup.js,\n\t// so we have to webpack them before we include them in our bundle.\n\t// This is the Webpack entry point.\n\n\texports.elliptic = __webpack_require__(1);\n\texports.hashjs = __webpack_require__(18);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar elliptic = exports;\n\n\telliptic.version = __webpack_require__(2).version;\n\telliptic.utils = __webpack_require__(3);\n\telliptic.rand = __webpack_require__(9);\n\telliptic.curve = __webpack_require__(11);\n\telliptic.curves = __webpack_require__(17);\n\n\t// Protocols\n\telliptic.ec = __webpack_require__(31);\n\telliptic.eddsa = __webpack_require__(35);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"_from\":\"elliptic@^6.4.0\",\"_id\":\"elliptic@6.4.0\",\"_inBundle\":false,\"_integrity\":\"sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=\",\"_location\":\"/elliptic\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"range\",\"registry\":true,\"raw\":\"elliptic@^6.4.0\",\"name\":\"elliptic\",\"escapedName\":\"elliptic\",\"rawSpec\":\"^6.4.0\",\"saveSpec\":null,\"fetchSpec\":\"^6.4.0\"},\"_requiredBy\":[\"/\"],\"_resolved\":\"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz\",\"_shasum\":\"cac9af8762c85836187003c8dfe193e5e2eae5df\",\"_spec\":\"elliptic@^6.4.0\",\"_where\":\"/Users/paul/git3/airbitz-core-js\",\"author\":{\"name\":\"Fedor Indutny\",\"email\":\"fedor@indutny.com\"},\"bugs\":{\"url\":\"https://github.com/indutny/elliptic/issues\"},\"bundleDependencies\":false,\"dependencies\":{\"bn.js\":\"^4.4.0\",\"brorand\":\"^1.0.1\",\"hash.js\":\"^1.0.0\",\"hmac-drbg\":\"^1.0.0\",\"inherits\":\"^2.0.1\",\"minimalistic-assert\":\"^1.0.0\",\"minimalistic-crypto-utils\":\"^1.0.0\"},\"deprecated\":false,\"description\":\"EC cryptography\",\"devDependencies\":{\"brfs\":\"^1.4.3\",\"coveralls\":\"^2.11.3\",\"grunt\":\"^0.4.5\",\"grunt-browserify\":\"^5.0.0\",\"grunt-cli\":\"^1.2.0\",\"grunt-contrib-connect\":\"^1.0.0\",\"grunt-contrib-copy\":\"^1.0.0\",\"grunt-contrib-uglify\":\"^1.0.1\",\"grunt-mocha-istanbul\":\"^3.0.1\",\"grunt-saucelabs\":\"^8.6.2\",\"istanbul\":\"^0.4.2\",\"jscs\":\"^2.9.0\",\"jshint\":\"^2.6.0\",\"mocha\":\"^2.1.0\"},\"files\":[\"lib\"],\"homepage\":\"https://github.com/indutny/elliptic\",\"keywords\":[\"EC\",\"Elliptic\",\"curve\",\"Cryptography\"],\"license\":\"MIT\",\"main\":\"lib/elliptic.js\",\"name\":\"elliptic\",\"repository\":{\"type\":\"git\",\"url\":\"git+ssh://git@github.com/indutny/elliptic.git\"},\"scripts\":{\"jscs\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"jshint\":\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\"lint\":\"npm run jscs && npm run jshint\",\"test\":\"npm run lint && npm run unit\",\"unit\":\"istanbul test _mocha --reporter=spec test/index.js\",\"version\":\"grunt dist && git add dist/\"},\"version\":\"6.4.0\"};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = exports;\n\tvar BN = __webpack_require__(4);\n\tvar minAssert = __webpack_require__(7);\n\tvar minUtils = __webpack_require__(8);\n\n\tutils.assert = minAssert;\n\tutils.toArray = minUtils.toArray;\n\tutils.zero2 = minUtils.zero2;\n\tutils.toHex = minUtils.toHex;\n\tutils.encode = minUtils.encode;\n\n\t// Represent num in a w-NAF form\n\tfunction getNAF(num, w) {\n\t  var naf = [];\n\t  var ws = 1 << (w + 1);\n\t  var k = num.clone();\n\t  while (k.cmpn(1) >= 0) {\n\t    var z;\n\t    if (k.isOdd()) {\n\t      var mod = k.andln(ws - 1);\n\t      if (mod > (ws >> 1) - 1)\n\t        { z = (ws >> 1) - mod; }\n\t      else\n\t        { z = mod; }\n\t      k.isubn(z);\n\t    } else {\n\t      z = 0;\n\t    }\n\t    naf.push(z);\n\n\t    // Optimization, shift by word if possible\n\t    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n\t    for (var i = 1; i < shift; i++)\n\t      { naf.push(0); }\n\t    k.iushrn(shift);\n\t  }\n\n\t  return naf;\n\t}\n\tutils.getNAF = getNAF;\n\n\t// Represent k1, k2 in a Joint Sparse Form\n\tfunction getJSF(k1, k2) {\n\t  var jsf = [\n\t    [],\n\t    []\n\t  ];\n\n\t  k1 = k1.clone();\n\t  k2 = k2.clone();\n\t  var d1 = 0;\n\t  var d2 = 0;\n\t  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n\t    // First phase\n\t    var m14 = (k1.andln(3) + d1) & 3;\n\t    var m24 = (k2.andln(3) + d2) & 3;\n\t    if (m14 === 3)\n\t      { m14 = -1; }\n\t    if (m24 === 3)\n\t      { m24 = -1; }\n\t    var u1;\n\t    if ((m14 & 1) === 0) {\n\t      u1 = 0;\n\t    } else {\n\t      var m8 = (k1.andln(7) + d1) & 7;\n\t      if ((m8 === 3 || m8 === 5) && m24 === 2)\n\t        { u1 = -m14; }\n\t      else\n\t        { u1 = m14; }\n\t    }\n\t    jsf[0].push(u1);\n\n\t    var u2;\n\t    if ((m24 & 1) === 0) {\n\t      u2 = 0;\n\t    } else {\n\t      var m8 = (k2.andln(7) + d2) & 7;\n\t      if ((m8 === 3 || m8 === 5) && m14 === 2)\n\t        { u2 = -m24; }\n\t      else\n\t        { u2 = m24; }\n\t    }\n\t    jsf[1].push(u2);\n\n\t    // Second phase\n\t    if (2 * d1 === u1 + 1)\n\t      { d1 = 1 - d1; }\n\t    if (2 * d2 === u2 + 1)\n\t      { d2 = 1 - d2; }\n\t    k1.iushrn(1);\n\t    k2.iushrn(1);\n\t  }\n\n\t  return jsf;\n\t}\n\tutils.getJSF = getJSF;\n\n\tfunction cachedProperty(obj, name, computer) {\n\t  var key = '_' + name;\n\t  obj.prototype[name] = function cachedProperty() {\n\t    return this[key] !== undefined ? this[key] :\n\t           this[key] = computer.call(this);\n\t  };\n\t}\n\tutils.cachedProperty = cachedProperty;\n\n\tfunction parseBytes(bytes) {\n\t  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n\t                                     bytes;\n\t}\n\tutils.parseBytes = parseBytes;\n\n\tfunction intFromLE(bytes) {\n\t  return new BN(bytes, 'hex', 'le');\n\t}\n\tutils.intFromLE = intFromLE;\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {\n\t  'use strict';\n\n\t  // Utils\n\t  function assert (val, msg) {\n\t    if (!val) { throw new Error(msg || 'Assertion failed'); }\n\t  }\n\n\t  // Could use `inherits` module, but don't want to move from single file\n\t  // architecture yet.\n\t  function inherits (ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\n\t  // BN\n\n\t  function BN (number, base, endian) {\n\t    if (BN.isBN(number)) {\n\t      return number;\n\t    }\n\n\t    this.negative = 0;\n\t    this.words = null;\n\t    this.length = 0;\n\n\t    // Reduction context\n\t    this.red = null;\n\n\t    if (number !== null) {\n\t      if (base === 'le' || base === 'be') {\n\t        endian = base;\n\t        base = 10;\n\t      }\n\n\t      this._init(number || 0, base || 10, endian || 'be');\n\t    }\n\t  }\n\t  if (typeof module === 'object') {\n\t    module.exports = BN;\n\t  } else {\n\t    exports.BN = BN;\n\t  }\n\n\t  BN.BN = BN;\n\t  BN.wordSize = 26;\n\n\t  var Buffer;\n\t  try {\n\t    // Obfuscate that we require Buffer, to reduce size\n\t    Buffer = __webpack_require__(6).Buffer;\n\t  } catch (e) {\n\t  }\n\n\t  BN.isBN = function isBN (num) {\n\t    if (num instanceof BN) {\n\t      return true;\n\t    }\n\n\t    return num !== null && typeof num === 'object' &&\n\t      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n\t  };\n\n\t  BN.max = function max (left, right) {\n\t    if (left.cmp(right) > 0) { return left; }\n\t    return right;\n\t  };\n\n\t  BN.min = function min (left, right) {\n\t    if (left.cmp(right) < 0) { return left; }\n\t    return right;\n\t  };\n\n\t  BN.prototype._init = function init (number, base, endian) {\n\t    if (typeof number === 'number') {\n\t      return this._initNumber(number, base, endian);\n\t    }\n\n\t    if (typeof number === 'object') {\n\t      return this._initArray(number, base, endian);\n\t    }\n\n\t    if (base === 'hex') {\n\t      base = 16;\n\t    }\n\t    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n\t    number = number.toString().replace(/\\s+/g, '');\n\t    var start = 0;\n\t    if (number[0] === '-') {\n\t      start++;\n\t    }\n\n\t    if (base === 16) {\n\t      this._parseHex(number, start);\n\t    } else {\n\t      this._parseBase(number, base, start);\n\t    }\n\n\t    if (number[0] === '-') {\n\t      this.negative = 1;\n\t    }\n\n\t    this.strip();\n\n\t    if (endian !== 'le') { return; }\n\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\n\t  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n\t    if (number < 0) {\n\t      this.negative = 1;\n\t      number = -number;\n\t    }\n\t    if (number < 0x4000000) {\n\t      this.words = [ number & 0x3ffffff ];\n\t      this.length = 1;\n\t    } else if (number < 0x10000000000000) {\n\t      this.words = [\n\t        number & 0x3ffffff,\n\t        (number / 0x4000000) & 0x3ffffff\n\t      ];\n\t      this.length = 2;\n\t    } else {\n\t      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\t      this.words = [\n\t        number & 0x3ffffff,\n\t        (number / 0x4000000) & 0x3ffffff,\n\t        1\n\t      ];\n\t      this.length = 3;\n\t    }\n\n\t    if (endian !== 'le') { return; }\n\n\t    // Reverse the bytes\n\t    this._initArray(this.toArray(), base, endian);\n\t  };\n\n\t  BN.prototype._initArray = function _initArray (number, base, endian) {\n\t    var this$1 = this;\n\n\t    // Perhaps a Uint8Array\n\t    assert(typeof number.length === 'number');\n\t    if (number.length <= 0) {\n\t      this.words = [ 0 ];\n\t      this.length = 1;\n\t      return this;\n\t    }\n\n\t    this.length = Math.ceil(number.length / 3);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this$1.words[i] = 0;\n\t    }\n\n\t    var j, w;\n\t    var off = 0;\n\t    if (endian === 'be') {\n\t      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n\t        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n\t        this$1.words[j] |= (w << off) & 0x3ffffff;\n\t        this$1.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    } else if (endian === 'le') {\n\t      for (i = 0, j = 0; i < number.length; i += 3) {\n\t        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n\t        this$1.words[j] |= (w << off) & 0x3ffffff;\n\t        this$1.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n\t        off += 24;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          j++;\n\t        }\n\t      }\n\t    }\n\t    return this.strip();\n\t  };\n\n\t  function parseHex (str, start, end) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\n\t      r <<= 4;\n\n\t      // 'a' - 'f'\n\t      if (c >= 49 && c <= 54) {\n\t        r |= c - 49 + 0xa;\n\n\t      // 'A' - 'F'\n\t      } else if (c >= 17 && c <= 22) {\n\t        r |= c - 17 + 0xa;\n\n\t      // '0' - '9'\n\t      } else {\n\t        r |= c & 0xf;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\n\t  BN.prototype._parseHex = function _parseHex (number, start) {\n\t    var this$1 = this;\n\n\t    // Create possibly bigger array to ensure that it fits the number\n\t    this.length = Math.ceil((number.length - start) / 6);\n\t    this.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      this$1.words[i] = 0;\n\t    }\n\n\t    var j, w;\n\t    // Scan 24-bit chunks and add them to the number\n\t    var off = 0;\n\t    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n\t      w = parseHex(number, i, i + 6);\n\t      this$1.words[j] |= (w << off) & 0x3ffffff;\n\t      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n\t      this$1.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n\t      off += 24;\n\t      if (off >= 26) {\n\t        off -= 26;\n\t        j++;\n\t      }\n\t    }\n\t    if (i + 6 !== start) {\n\t      w = parseHex(number, start, i + 6);\n\t      this.words[j] |= (w << off) & 0x3ffffff;\n\t      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n\t    }\n\t    this.strip();\n\t  };\n\n\t  function parseBase (str, start, end, mul) {\n\t    var r = 0;\n\t    var len = Math.min(str.length, end);\n\t    for (var i = start; i < len; i++) {\n\t      var c = str.charCodeAt(i) - 48;\n\n\t      r *= mul;\n\n\t      // 'a'\n\t      if (c >= 49) {\n\t        r += c - 49 + 0xa;\n\n\t      // 'A'\n\t      } else if (c >= 17) {\n\t        r += c - 17 + 0xa;\n\n\t      // '0' - '9'\n\t      } else {\n\t        r += c;\n\t      }\n\t    }\n\t    return r;\n\t  }\n\n\t  BN.prototype._parseBase = function _parseBase (number, base, start) {\n\t    var this$1 = this;\n\n\t    // Initialize as zero\n\t    this.words = [ 0 ];\n\t    this.length = 1;\n\n\t    // Find length of limb in base\n\t    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n\t      limbLen++;\n\t    }\n\t    limbLen--;\n\t    limbPow = (limbPow / base) | 0;\n\n\t    var total = number.length - start;\n\t    var mod = total % limbLen;\n\t    var end = Math.min(total, total - mod) + start;\n\n\t    var word = 0;\n\t    for (var i = start; i < end; i += limbLen) {\n\t      word = parseBase(number, i, i + limbLen, base);\n\n\t      this$1.imuln(limbPow);\n\t      if (this$1.words[0] + word < 0x4000000) {\n\t        this$1.words[0] += word;\n\t      } else {\n\t        this$1._iaddn(word);\n\t      }\n\t    }\n\n\t    if (mod !== 0) {\n\t      var pow = 1;\n\t      word = parseBase(number, i, number.length, base);\n\n\t      for (i = 0; i < mod; i++) {\n\t        pow *= base;\n\t      }\n\n\t      this.imuln(pow);\n\t      if (this.words[0] + word < 0x4000000) {\n\t        this.words[0] += word;\n\t      } else {\n\t        this._iaddn(word);\n\t      }\n\t    }\n\t  };\n\n\t  BN.prototype.copy = function copy (dest) {\n\t    var this$1 = this;\n\n\t    dest.words = new Array(this.length);\n\t    for (var i = 0; i < this.length; i++) {\n\t      dest.words[i] = this$1.words[i];\n\t    }\n\t    dest.length = this.length;\n\t    dest.negative = this.negative;\n\t    dest.red = this.red;\n\t  };\n\n\t  BN.prototype.clone = function clone () {\n\t    var r = new BN(null);\n\t    this.copy(r);\n\t    return r;\n\t  };\n\n\t  BN.prototype._expand = function _expand (size) {\n\t    var this$1 = this;\n\n\t    while (this.length < size) {\n\t      this$1.words[this$1.length++] = 0;\n\t    }\n\t    return this;\n\t  };\n\n\t  // Remove leading `0` from `this`\n\t  BN.prototype.strip = function strip () {\n\t    var this$1 = this;\n\n\t    while (this.length > 1 && this.words[this.length - 1] === 0) {\n\t      this$1.length--;\n\t    }\n\t    return this._normSign();\n\t  };\n\n\t  BN.prototype._normSign = function _normSign () {\n\t    // -0 = 0\n\t    if (this.length === 1 && this.words[0] === 0) {\n\t      this.negative = 0;\n\t    }\n\t    return this;\n\t  };\n\n\t  BN.prototype.inspect = function inspect () {\n\t    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n\t  };\n\n\t  /*\n\n\t  var zeros = [];\n\t  var groupSizes = [];\n\t  var groupBases = [];\n\n\t  var s = '';\n\t  var i = -1;\n\t  while (++i < BN.wordSize) {\n\t    zeros[i] = s;\n\t    s += '0';\n\t  }\n\t  groupSizes[0] = 0;\n\t  groupSizes[1] = 0;\n\t  groupBases[0] = 0;\n\t  groupBases[1] = 0;\n\t  var base = 2 - 1;\n\t  while (++base < 36 + 1) {\n\t    var groupSize = 0;\n\t    var groupBase = 1;\n\t    while (groupBase < (1 << BN.wordSize) / base) {\n\t      groupBase *= base;\n\t      groupSize += 1;\n\t    }\n\t    groupSizes[base] = groupSize;\n\t    groupBases[base] = groupBase;\n\t  }\n\n\t  */\n\n\t  var zeros = [\n\t    '',\n\t    '0',\n\t    '00',\n\t    '000',\n\t    '0000',\n\t    '00000',\n\t    '000000',\n\t    '0000000',\n\t    '00000000',\n\t    '000000000',\n\t    '0000000000',\n\t    '00000000000',\n\t    '000000000000',\n\t    '0000000000000',\n\t    '00000000000000',\n\t    '000000000000000',\n\t    '0000000000000000',\n\t    '00000000000000000',\n\t    '000000000000000000',\n\t    '0000000000000000000',\n\t    '00000000000000000000',\n\t    '000000000000000000000',\n\t    '0000000000000000000000',\n\t    '00000000000000000000000',\n\t    '000000000000000000000000',\n\t    '0000000000000000000000000'\n\t  ];\n\n\t  var groupSizes = [\n\t    0, 0,\n\t    25, 16, 12, 11, 10, 9, 8,\n\t    8, 7, 7, 7, 7, 6, 6,\n\t    6, 6, 6, 6, 6, 5, 5,\n\t    5, 5, 5, 5, 5, 5, 5,\n\t    5, 5, 5, 5, 5, 5, 5\n\t  ];\n\n\t  var groupBases = [\n\t    0, 0,\n\t    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n\t    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n\t    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n\t    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n\t    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n\t  ];\n\n\t  BN.prototype.toString = function toString (base, padding) {\n\t    var this$1 = this;\n\n\t    base = base || 10;\n\t    padding = padding | 0 || 1;\n\n\t    var out;\n\t    if (base === 16 || base === 'hex') {\n\t      out = '';\n\t      var off = 0;\n\t      var carry = 0;\n\t      for (var i = 0; i < this.length; i++) {\n\t        var w = this$1.words[i];\n\t        var word = (((w << off) | carry) & 0xffffff).toString(16);\n\t        carry = (w >>> (24 - off)) & 0xffffff;\n\t        if (carry !== 0 || i !== this$1.length - 1) {\n\t          out = zeros[6 - word.length] + word + out;\n\t        } else {\n\t          out = word + out;\n\t        }\n\t        off += 2;\n\t        if (off >= 26) {\n\t          off -= 26;\n\t          i--;\n\t        }\n\t      }\n\t      if (carry !== 0) {\n\t        out = carry.toString(16) + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\n\t    if (base === (base | 0) && base >= 2 && base <= 36) {\n\t      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n\t      var groupSize = groupSizes[base];\n\t      // var groupBase = Math.pow(base, groupSize);\n\t      var groupBase = groupBases[base];\n\t      out = '';\n\t      var c = this.clone();\n\t      c.negative = 0;\n\t      while (!c.isZero()) {\n\t        var r = c.modn(groupBase).toString(base);\n\t        c = c.idivn(groupBase);\n\n\t        if (!c.isZero()) {\n\t          out = zeros[groupSize - r.length] + r + out;\n\t        } else {\n\t          out = r + out;\n\t        }\n\t      }\n\t      if (this.isZero()) {\n\t        out = '0' + out;\n\t      }\n\t      while (out.length % padding !== 0) {\n\t        out = '0' + out;\n\t      }\n\t      if (this.negative !== 0) {\n\t        out = '-' + out;\n\t      }\n\t      return out;\n\t    }\n\n\t    assert(false, 'Base should be between 2 and 36');\n\t  };\n\n\t  BN.prototype.toNumber = function toNumber () {\n\t    var ret = this.words[0];\n\t    if (this.length === 2) {\n\t      ret += this.words[1] * 0x4000000;\n\t    } else if (this.length === 3 && this.words[2] === 0x01) {\n\t      // NOTE: at this stage it is known that the top bit is set\n\t      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n\t    } else if (this.length > 2) {\n\t      assert(false, 'Number can only safely store up to 53 bits');\n\t    }\n\t    return (this.negative !== 0) ? -ret : ret;\n\t  };\n\n\t  BN.prototype.toJSON = function toJSON () {\n\t    return this.toString(16);\n\t  };\n\n\t  BN.prototype.toBuffer = function toBuffer (endian, length) {\n\t    assert(typeof Buffer !== 'undefined');\n\t    return this.toArrayLike(Buffer, endian, length);\n\t  };\n\n\t  BN.prototype.toArray = function toArray (endian, length) {\n\t    return this.toArrayLike(Array, endian, length);\n\t  };\n\n\t  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n\t    var byteLength = this.byteLength();\n\t    var reqLength = length || Math.max(1, byteLength);\n\t    assert(byteLength <= reqLength, 'byte array longer than desired length');\n\t    assert(reqLength > 0, 'Requested array length <= 0');\n\n\t    this.strip();\n\t    var littleEndian = endian === 'le';\n\t    var res = new ArrayType(reqLength);\n\n\t    var b, i;\n\t    var q = this.clone();\n\t    if (!littleEndian) {\n\t      // Assume big-endian\n\t      for (i = 0; i < reqLength - byteLength; i++) {\n\t        res[i] = 0;\n\t      }\n\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\n\t        res[reqLength - i - 1] = b;\n\t      }\n\t    } else {\n\t      for (i = 0; !q.isZero(); i++) {\n\t        b = q.andln(0xff);\n\t        q.iushrn(8);\n\n\t        res[i] = b;\n\t      }\n\n\t      for (; i < reqLength; i++) {\n\t        res[i] = 0;\n\t      }\n\t    }\n\n\t    return res;\n\t  };\n\n\t  if (Math.clz32) {\n\t    BN.prototype._countBits = function _countBits (w) {\n\t      return 32 - Math.clz32(w);\n\t    };\n\t  } else {\n\t    BN.prototype._countBits = function _countBits (w) {\n\t      var t = w;\n\t      var r = 0;\n\t      if (t >= 0x1000) {\n\t        r += 13;\n\t        t >>>= 13;\n\t      }\n\t      if (t >= 0x40) {\n\t        r += 7;\n\t        t >>>= 7;\n\t      }\n\t      if (t >= 0x8) {\n\t        r += 4;\n\t        t >>>= 4;\n\t      }\n\t      if (t >= 0x02) {\n\t        r += 2;\n\t        t >>>= 2;\n\t      }\n\t      return r + t;\n\t    };\n\t  }\n\n\t  BN.prototype._zeroBits = function _zeroBits (w) {\n\t    // Short-cut\n\t    if (w === 0) { return 26; }\n\n\t    var t = w;\n\t    var r = 0;\n\t    if ((t & 0x1fff) === 0) {\n\t      r += 13;\n\t      t >>>= 13;\n\t    }\n\t    if ((t & 0x7f) === 0) {\n\t      r += 7;\n\t      t >>>= 7;\n\t    }\n\t    if ((t & 0xf) === 0) {\n\t      r += 4;\n\t      t >>>= 4;\n\t    }\n\t    if ((t & 0x3) === 0) {\n\t      r += 2;\n\t      t >>>= 2;\n\t    }\n\t    if ((t & 0x1) === 0) {\n\t      r++;\n\t    }\n\t    return r;\n\t  };\n\n\t  // Return number of used bits in a BN\n\t  BN.prototype.bitLength = function bitLength () {\n\t    var w = this.words[this.length - 1];\n\t    var hi = this._countBits(w);\n\t    return (this.length - 1) * 26 + hi;\n\t  };\n\n\t  function toBitArray (num) {\n\t    var w = new Array(num.bitLength());\n\n\t    for (var bit = 0; bit < w.length; bit++) {\n\t      var off = (bit / 26) | 0;\n\t      var wbit = bit % 26;\n\n\t      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n\t    }\n\n\t    return w;\n\t  }\n\n\t  // Number of trailing zero bits\n\t  BN.prototype.zeroBits = function zeroBits () {\n\t    var this$1 = this;\n\n\t    if (this.isZero()) { return 0; }\n\n\t    var r = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var b = this$1._zeroBits(this$1.words[i]);\n\t      r += b;\n\t      if (b !== 26) { break; }\n\t    }\n\t    return r;\n\t  };\n\n\t  BN.prototype.byteLength = function byteLength () {\n\t    return Math.ceil(this.bitLength() / 8);\n\t  };\n\n\t  BN.prototype.toTwos = function toTwos (width) {\n\t    if (this.negative !== 0) {\n\t      return this.abs().inotn(width).iaddn(1);\n\t    }\n\t    return this.clone();\n\t  };\n\n\t  BN.prototype.fromTwos = function fromTwos (width) {\n\t    if (this.testn(width - 1)) {\n\t      return this.notn(width).iaddn(1).ineg();\n\t    }\n\t    return this.clone();\n\t  };\n\n\t  BN.prototype.isNeg = function isNeg () {\n\t    return this.negative !== 0;\n\t  };\n\n\t  // Return negative clone of `this`\n\t  BN.prototype.neg = function neg () {\n\t    return this.clone().ineg();\n\t  };\n\n\t  BN.prototype.ineg = function ineg () {\n\t    if (!this.isZero()) {\n\t      this.negative ^= 1;\n\t    }\n\n\t    return this;\n\t  };\n\n\t  // Or `num` with `this` in-place\n\t  BN.prototype.iuor = function iuor (num) {\n\t    var this$1 = this;\n\n\t    while (this.length < num.length) {\n\t      this$1.words[this$1.length++] = 0;\n\t    }\n\n\t    for (var i = 0; i < num.length; i++) {\n\t      this$1.words[i] = this$1.words[i] | num.words[i];\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ior = function ior (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuor(num);\n\t  };\n\n\t  // Or `num` with `this`\n\t  BN.prototype.or = function or (num) {\n\t    if (this.length > num.length) { return this.clone().ior(num); }\n\t    return num.clone().ior(this);\n\t  };\n\n\t  BN.prototype.uor = function uor (num) {\n\t    if (this.length > num.length) { return this.clone().iuor(num); }\n\t    return num.clone().iuor(this);\n\t  };\n\n\t  // And `num` with `this` in-place\n\t  BN.prototype.iuand = function iuand (num) {\n\t    var this$1 = this;\n\n\t    // b = min-length(num, this)\n\t    var b;\n\t    if (this.length > num.length) {\n\t      b = num;\n\t    } else {\n\t      b = this;\n\t    }\n\n\t    for (var i = 0; i < b.length; i++) {\n\t      this$1.words[i] = this$1.words[i] & num.words[i];\n\t    }\n\n\t    this.length = b.length;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.iand = function iand (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuand(num);\n\t  };\n\n\t  // And `num` with `this`\n\t  BN.prototype.and = function and (num) {\n\t    if (this.length > num.length) { return this.clone().iand(num); }\n\t    return num.clone().iand(this);\n\t  };\n\n\t  BN.prototype.uand = function uand (num) {\n\t    if (this.length > num.length) { return this.clone().iuand(num); }\n\t    return num.clone().iuand(this);\n\t  };\n\n\t  // Xor `num` with `this` in-place\n\t  BN.prototype.iuxor = function iuxor (num) {\n\t    var this$1 = this;\n\n\t    // a.length > b.length\n\t    var a;\n\t    var b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    for (var i = 0; i < b.length; i++) {\n\t      this$1.words[i] = a.words[i] ^ b.words[i];\n\t    }\n\n\t    if (this !== a) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    this.length = a.length;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ixor = function ixor (num) {\n\t    assert((this.negative | num.negative) === 0);\n\t    return this.iuxor(num);\n\t  };\n\n\t  // Xor `num` with `this`\n\t  BN.prototype.xor = function xor (num) {\n\t    if (this.length > num.length) { return this.clone().ixor(num); }\n\t    return num.clone().ixor(this);\n\t  };\n\n\t  BN.prototype.uxor = function uxor (num) {\n\t    if (this.length > num.length) { return this.clone().iuxor(num); }\n\t    return num.clone().iuxor(this);\n\t  };\n\n\t  // Not ``this`` with ``width`` bitwidth\n\t  BN.prototype.inotn = function inotn (width) {\n\t    var this$1 = this;\n\n\t    assert(typeof width === 'number' && width >= 0);\n\n\t    var bytesNeeded = Math.ceil(width / 26) | 0;\n\t    var bitsLeft = width % 26;\n\n\t    // Extend the buffer with leading zeroes\n\t    this._expand(bytesNeeded);\n\n\t    if (bitsLeft > 0) {\n\t      bytesNeeded--;\n\t    }\n\n\t    // Handle complete words\n\t    for (var i = 0; i < bytesNeeded; i++) {\n\t      this$1.words[i] = ~this$1.words[i] & 0x3ffffff;\n\t    }\n\n\t    // Handle the residue\n\t    if (bitsLeft > 0) {\n\t      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n\t    }\n\n\t    // And remove leading zeroes\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.notn = function notn (width) {\n\t    return this.clone().inotn(width);\n\t  };\n\n\t  // Set `bit` of `this`\n\t  BN.prototype.setn = function setn (bit, val) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\n\t    var off = (bit / 26) | 0;\n\t    var wbit = bit % 26;\n\n\t    this._expand(off + 1);\n\n\t    if (val) {\n\t      this.words[off] = this.words[off] | (1 << wbit);\n\t    } else {\n\t      this.words[off] = this.words[off] & ~(1 << wbit);\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Add `num` to `this` in-place\n\t  BN.prototype.iadd = function iadd (num) {\n\t    var this$1 = this;\n\n\t    var r;\n\n\t    // negative + positive\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      this.negative = 0;\n\t      r = this.isub(num);\n\t      this.negative ^= 1;\n\t      return this._normSign();\n\n\t    // positive + negative\n\t    } else if (this.negative === 0 && num.negative !== 0) {\n\t      num.negative = 0;\n\t      r = this.isub(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\t    }\n\n\t    // a.length > b.length\n\t    var a, b;\n\t    if (this.length > num.length) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t      carry = r >>> 26;\n\t    }\n\n\t    this.length = a.length;\n\t    if (carry !== 0) {\n\t      this.words[this.length] = carry;\n\t      this.length++;\n\t    // Copy the rest of the words\n\t    } else if (a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    return this;\n\t  };\n\n\t  // Add `num` to `this`\n\t  BN.prototype.add = function add (num) {\n\t    var res;\n\t    if (num.negative !== 0 && this.negative === 0) {\n\t      num.negative = 0;\n\t      res = this.sub(num);\n\t      num.negative ^= 1;\n\t      return res;\n\t    } else if (num.negative === 0 && this.negative !== 0) {\n\t      this.negative = 0;\n\t      res = num.sub(this);\n\t      this.negative = 1;\n\t      return res;\n\t    }\n\n\t    if (this.length > num.length) { return this.clone().iadd(num); }\n\n\t    return num.clone().iadd(this);\n\t  };\n\n\t  // Subtract `num` from `this` in-place\n\t  BN.prototype.isub = function isub (num) {\n\t    var this$1 = this;\n\n\t    // this - (-num) = this + num\n\t    if (num.negative !== 0) {\n\t      num.negative = 0;\n\t      var r = this.iadd(num);\n\t      num.negative = 1;\n\t      return r._normSign();\n\n\t    // -this - num = -(this + num)\n\t    } else if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iadd(num);\n\t      this.negative = 1;\n\t      return this._normSign();\n\t    }\n\n\t    // At this point both numbers are positive\n\t    var cmp = this.cmp(num);\n\n\t    // Optimization - zeroify\n\t    if (cmp === 0) {\n\t      this.negative = 0;\n\t      this.length = 1;\n\t      this.words[0] = 0;\n\t      return this;\n\t    }\n\n\t    // a > b\n\t    var a, b;\n\t    if (cmp > 0) {\n\t      a = this;\n\t      b = num;\n\t    } else {\n\t      a = num;\n\t      b = this;\n\t    }\n\n\t    var carry = 0;\n\t    for (var i = 0; i < b.length; i++) {\n\t      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t    }\n\t    for (; carry !== 0 && i < a.length; i++) {\n\t      r = (a.words[i] | 0) + carry;\n\t      carry = r >> 26;\n\t      this$1.words[i] = r & 0x3ffffff;\n\t    }\n\n\t    // Copy rest of the words\n\t    if (carry === 0 && i < a.length && a !== this) {\n\t      for (; i < a.length; i++) {\n\t        this$1.words[i] = a.words[i];\n\t      }\n\t    }\n\n\t    this.length = Math.max(this.length, i);\n\n\t    if (a !== this) {\n\t      this.negative = 1;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Subtract `num` from `this`\n\t  BN.prototype.sub = function sub (num) {\n\t    return this.clone().isub(num);\n\t  };\n\n\t  function smallMulTo (self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    var len = (self.length + num.length) | 0;\n\t    out.length = len;\n\t    len = (len - 1) | 0;\n\n\t    // Peel one iteration (compiler can't do it, because of code complexity)\n\t    var a = self.words[0] | 0;\n\t    var b = num.words[0] | 0;\n\t    var r = a * b;\n\n\t    var lo = r & 0x3ffffff;\n\t    var carry = (r / 0x4000000) | 0;\n\t    out.words[0] = lo;\n\n\t    for (var k = 1; k < len; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = carry >>> 26;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = (k - j) | 0;\n\t        a = self.words[i] | 0;\n\t        b = num.words[j] | 0;\n\t        r = a * b + rword;\n\t        ncarry += (r / 0x4000000) | 0;\n\t        rword = r & 0x3ffffff;\n\t      }\n\t      out.words[k] = rword | 0;\n\t      carry = ncarry | 0;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry | 0;\n\t    } else {\n\t      out.length--;\n\t    }\n\n\t    return out.strip();\n\t  }\n\n\t  // TODO(indutny): it may be reasonable to omit it for users who don't need\n\t  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n\t  // multiplication (like elliptic secp256k1).\n\t  var comb10MulTo = function comb10MulTo (self, num, out) {\n\t    var a = self.words;\n\t    var b = num.words;\n\t    var o = out.words;\n\t    var c = 0;\n\t    var lo;\n\t    var mid;\n\t    var hi;\n\t    var a0 = a[0] | 0;\n\t    var al0 = a0 & 0x1fff;\n\t    var ah0 = a0 >>> 13;\n\t    var a1 = a[1] | 0;\n\t    var al1 = a1 & 0x1fff;\n\t    var ah1 = a1 >>> 13;\n\t    var a2 = a[2] | 0;\n\t    var al2 = a2 & 0x1fff;\n\t    var ah2 = a2 >>> 13;\n\t    var a3 = a[3] | 0;\n\t    var al3 = a3 & 0x1fff;\n\t    var ah3 = a3 >>> 13;\n\t    var a4 = a[4] | 0;\n\t    var al4 = a4 & 0x1fff;\n\t    var ah4 = a4 >>> 13;\n\t    var a5 = a[5] | 0;\n\t    var al5 = a5 & 0x1fff;\n\t    var ah5 = a5 >>> 13;\n\t    var a6 = a[6] | 0;\n\t    var al6 = a6 & 0x1fff;\n\t    var ah6 = a6 >>> 13;\n\t    var a7 = a[7] | 0;\n\t    var al7 = a7 & 0x1fff;\n\t    var ah7 = a7 >>> 13;\n\t    var a8 = a[8] | 0;\n\t    var al8 = a8 & 0x1fff;\n\t    var ah8 = a8 >>> 13;\n\t    var a9 = a[9] | 0;\n\t    var al9 = a9 & 0x1fff;\n\t    var ah9 = a9 >>> 13;\n\t    var b0 = b[0] | 0;\n\t    var bl0 = b0 & 0x1fff;\n\t    var bh0 = b0 >>> 13;\n\t    var b1 = b[1] | 0;\n\t    var bl1 = b1 & 0x1fff;\n\t    var bh1 = b1 >>> 13;\n\t    var b2 = b[2] | 0;\n\t    var bl2 = b2 & 0x1fff;\n\t    var bh2 = b2 >>> 13;\n\t    var b3 = b[3] | 0;\n\t    var bl3 = b3 & 0x1fff;\n\t    var bh3 = b3 >>> 13;\n\t    var b4 = b[4] | 0;\n\t    var bl4 = b4 & 0x1fff;\n\t    var bh4 = b4 >>> 13;\n\t    var b5 = b[5] | 0;\n\t    var bl5 = b5 & 0x1fff;\n\t    var bh5 = b5 >>> 13;\n\t    var b6 = b[6] | 0;\n\t    var bl6 = b6 & 0x1fff;\n\t    var bh6 = b6 >>> 13;\n\t    var b7 = b[7] | 0;\n\t    var bl7 = b7 & 0x1fff;\n\t    var bh7 = b7 >>> 13;\n\t    var b8 = b[8] | 0;\n\t    var bl8 = b8 & 0x1fff;\n\t    var bh8 = b8 >>> 13;\n\t    var b9 = b[9] | 0;\n\t    var bl9 = b9 & 0x1fff;\n\t    var bh9 = b9 >>> 13;\n\n\t    out.negative = self.negative ^ num.negative;\n\t    out.length = 19;\n\t    /* k = 0 */\n\t    lo = Math.imul(al0, bl0);\n\t    mid = Math.imul(al0, bh0);\n\t    mid = (mid + Math.imul(ah0, bl0)) | 0;\n\t    hi = Math.imul(ah0, bh0);\n\t    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n\t    w0 &= 0x3ffffff;\n\t    /* k = 1 */\n\t    lo = Math.imul(al1, bl0);\n\t    mid = Math.imul(al1, bh0);\n\t    mid = (mid + Math.imul(ah1, bl0)) | 0;\n\t    hi = Math.imul(ah1, bh0);\n\t    lo = (lo + Math.imul(al0, bl1)) | 0;\n\t    mid = (mid + Math.imul(al0, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh1)) | 0;\n\t    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n\t    w1 &= 0x3ffffff;\n\t    /* k = 2 */\n\t    lo = Math.imul(al2, bl0);\n\t    mid = Math.imul(al2, bh0);\n\t    mid = (mid + Math.imul(ah2, bl0)) | 0;\n\t    hi = Math.imul(ah2, bh0);\n\t    lo = (lo + Math.imul(al1, bl1)) | 0;\n\t    mid = (mid + Math.imul(al1, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh1)) | 0;\n\t    lo = (lo + Math.imul(al0, bl2)) | 0;\n\t    mid = (mid + Math.imul(al0, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh2)) | 0;\n\t    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n\t    w2 &= 0x3ffffff;\n\t    /* k = 3 */\n\t    lo = Math.imul(al3, bl0);\n\t    mid = Math.imul(al3, bh0);\n\t    mid = (mid + Math.imul(ah3, bl0)) | 0;\n\t    hi = Math.imul(ah3, bh0);\n\t    lo = (lo + Math.imul(al2, bl1)) | 0;\n\t    mid = (mid + Math.imul(al2, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh1)) | 0;\n\t    lo = (lo + Math.imul(al1, bl2)) | 0;\n\t    mid = (mid + Math.imul(al1, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh2)) | 0;\n\t    lo = (lo + Math.imul(al0, bl3)) | 0;\n\t    mid = (mid + Math.imul(al0, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh3)) | 0;\n\t    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n\t    w3 &= 0x3ffffff;\n\t    /* k = 4 */\n\t    lo = Math.imul(al4, bl0);\n\t    mid = Math.imul(al4, bh0);\n\t    mid = (mid + Math.imul(ah4, bl0)) | 0;\n\t    hi = Math.imul(ah4, bh0);\n\t    lo = (lo + Math.imul(al3, bl1)) | 0;\n\t    mid = (mid + Math.imul(al3, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh1)) | 0;\n\t    lo = (lo + Math.imul(al2, bl2)) | 0;\n\t    mid = (mid + Math.imul(al2, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh2)) | 0;\n\t    lo = (lo + Math.imul(al1, bl3)) | 0;\n\t    mid = (mid + Math.imul(al1, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh3)) | 0;\n\t    lo = (lo + Math.imul(al0, bl4)) | 0;\n\t    mid = (mid + Math.imul(al0, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh4)) | 0;\n\t    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n\t    w4 &= 0x3ffffff;\n\t    /* k = 5 */\n\t    lo = Math.imul(al5, bl0);\n\t    mid = Math.imul(al5, bh0);\n\t    mid = (mid + Math.imul(ah5, bl0)) | 0;\n\t    hi = Math.imul(ah5, bh0);\n\t    lo = (lo + Math.imul(al4, bl1)) | 0;\n\t    mid = (mid + Math.imul(al4, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh1)) | 0;\n\t    lo = (lo + Math.imul(al3, bl2)) | 0;\n\t    mid = (mid + Math.imul(al3, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh2)) | 0;\n\t    lo = (lo + Math.imul(al2, bl3)) | 0;\n\t    mid = (mid + Math.imul(al2, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh3)) | 0;\n\t    lo = (lo + Math.imul(al1, bl4)) | 0;\n\t    mid = (mid + Math.imul(al1, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh4)) | 0;\n\t    lo = (lo + Math.imul(al0, bl5)) | 0;\n\t    mid = (mid + Math.imul(al0, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh5)) | 0;\n\t    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n\t    w5 &= 0x3ffffff;\n\t    /* k = 6 */\n\t    lo = Math.imul(al6, bl0);\n\t    mid = Math.imul(al6, bh0);\n\t    mid = (mid + Math.imul(ah6, bl0)) | 0;\n\t    hi = Math.imul(ah6, bh0);\n\t    lo = (lo + Math.imul(al5, bl1)) | 0;\n\t    mid = (mid + Math.imul(al5, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh1)) | 0;\n\t    lo = (lo + Math.imul(al4, bl2)) | 0;\n\t    mid = (mid + Math.imul(al4, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh2)) | 0;\n\t    lo = (lo + Math.imul(al3, bl3)) | 0;\n\t    mid = (mid + Math.imul(al3, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh3)) | 0;\n\t    lo = (lo + Math.imul(al2, bl4)) | 0;\n\t    mid = (mid + Math.imul(al2, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh4)) | 0;\n\t    lo = (lo + Math.imul(al1, bl5)) | 0;\n\t    mid = (mid + Math.imul(al1, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh5)) | 0;\n\t    lo = (lo + Math.imul(al0, bl6)) | 0;\n\t    mid = (mid + Math.imul(al0, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh6)) | 0;\n\t    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n\t    w6 &= 0x3ffffff;\n\t    /* k = 7 */\n\t    lo = Math.imul(al7, bl0);\n\t    mid = Math.imul(al7, bh0);\n\t    mid = (mid + Math.imul(ah7, bl0)) | 0;\n\t    hi = Math.imul(ah7, bh0);\n\t    lo = (lo + Math.imul(al6, bl1)) | 0;\n\t    mid = (mid + Math.imul(al6, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh1)) | 0;\n\t    lo = (lo + Math.imul(al5, bl2)) | 0;\n\t    mid = (mid + Math.imul(al5, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh2)) | 0;\n\t    lo = (lo + Math.imul(al4, bl3)) | 0;\n\t    mid = (mid + Math.imul(al4, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh3)) | 0;\n\t    lo = (lo + Math.imul(al3, bl4)) | 0;\n\t    mid = (mid + Math.imul(al3, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh4)) | 0;\n\t    lo = (lo + Math.imul(al2, bl5)) | 0;\n\t    mid = (mid + Math.imul(al2, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh5)) | 0;\n\t    lo = (lo + Math.imul(al1, bl6)) | 0;\n\t    mid = (mid + Math.imul(al1, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh6)) | 0;\n\t    lo = (lo + Math.imul(al0, bl7)) | 0;\n\t    mid = (mid + Math.imul(al0, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh7)) | 0;\n\t    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n\t    w7 &= 0x3ffffff;\n\t    /* k = 8 */\n\t    lo = Math.imul(al8, bl0);\n\t    mid = Math.imul(al8, bh0);\n\t    mid = (mid + Math.imul(ah8, bl0)) | 0;\n\t    hi = Math.imul(ah8, bh0);\n\t    lo = (lo + Math.imul(al7, bl1)) | 0;\n\t    mid = (mid + Math.imul(al7, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh1)) | 0;\n\t    lo = (lo + Math.imul(al6, bl2)) | 0;\n\t    mid = (mid + Math.imul(al6, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh2)) | 0;\n\t    lo = (lo + Math.imul(al5, bl3)) | 0;\n\t    mid = (mid + Math.imul(al5, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh3)) | 0;\n\t    lo = (lo + Math.imul(al4, bl4)) | 0;\n\t    mid = (mid + Math.imul(al4, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh4)) | 0;\n\t    lo = (lo + Math.imul(al3, bl5)) | 0;\n\t    mid = (mid + Math.imul(al3, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh5)) | 0;\n\t    lo = (lo + Math.imul(al2, bl6)) | 0;\n\t    mid = (mid + Math.imul(al2, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh6)) | 0;\n\t    lo = (lo + Math.imul(al1, bl7)) | 0;\n\t    mid = (mid + Math.imul(al1, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh7)) | 0;\n\t    lo = (lo + Math.imul(al0, bl8)) | 0;\n\t    mid = (mid + Math.imul(al0, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh8)) | 0;\n\t    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n\t    w8 &= 0x3ffffff;\n\t    /* k = 9 */\n\t    lo = Math.imul(al9, bl0);\n\t    mid = Math.imul(al9, bh0);\n\t    mid = (mid + Math.imul(ah9, bl0)) | 0;\n\t    hi = Math.imul(ah9, bh0);\n\t    lo = (lo + Math.imul(al8, bl1)) | 0;\n\t    mid = (mid + Math.imul(al8, bh1)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl1)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh1)) | 0;\n\t    lo = (lo + Math.imul(al7, bl2)) | 0;\n\t    mid = (mid + Math.imul(al7, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh2)) | 0;\n\t    lo = (lo + Math.imul(al6, bl3)) | 0;\n\t    mid = (mid + Math.imul(al6, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh3)) | 0;\n\t    lo = (lo + Math.imul(al5, bl4)) | 0;\n\t    mid = (mid + Math.imul(al5, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh4)) | 0;\n\t    lo = (lo + Math.imul(al4, bl5)) | 0;\n\t    mid = (mid + Math.imul(al4, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh5)) | 0;\n\t    lo = (lo + Math.imul(al3, bl6)) | 0;\n\t    mid = (mid + Math.imul(al3, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh6)) | 0;\n\t    lo = (lo + Math.imul(al2, bl7)) | 0;\n\t    mid = (mid + Math.imul(al2, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh7)) | 0;\n\t    lo = (lo + Math.imul(al1, bl8)) | 0;\n\t    mid = (mid + Math.imul(al1, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh8)) | 0;\n\t    lo = (lo + Math.imul(al0, bl9)) | 0;\n\t    mid = (mid + Math.imul(al0, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah0, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah0, bh9)) | 0;\n\t    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n\t    w9 &= 0x3ffffff;\n\t    /* k = 10 */\n\t    lo = Math.imul(al9, bl1);\n\t    mid = Math.imul(al9, bh1);\n\t    mid = (mid + Math.imul(ah9, bl1)) | 0;\n\t    hi = Math.imul(ah9, bh1);\n\t    lo = (lo + Math.imul(al8, bl2)) | 0;\n\t    mid = (mid + Math.imul(al8, bh2)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl2)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh2)) | 0;\n\t    lo = (lo + Math.imul(al7, bl3)) | 0;\n\t    mid = (mid + Math.imul(al7, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh3)) | 0;\n\t    lo = (lo + Math.imul(al6, bl4)) | 0;\n\t    mid = (mid + Math.imul(al6, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh4)) | 0;\n\t    lo = (lo + Math.imul(al5, bl5)) | 0;\n\t    mid = (mid + Math.imul(al5, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh5)) | 0;\n\t    lo = (lo + Math.imul(al4, bl6)) | 0;\n\t    mid = (mid + Math.imul(al4, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh6)) | 0;\n\t    lo = (lo + Math.imul(al3, bl7)) | 0;\n\t    mid = (mid + Math.imul(al3, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh7)) | 0;\n\t    lo = (lo + Math.imul(al2, bl8)) | 0;\n\t    mid = (mid + Math.imul(al2, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh8)) | 0;\n\t    lo = (lo + Math.imul(al1, bl9)) | 0;\n\t    mid = (mid + Math.imul(al1, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah1, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah1, bh9)) | 0;\n\t    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n\t    w10 &= 0x3ffffff;\n\t    /* k = 11 */\n\t    lo = Math.imul(al9, bl2);\n\t    mid = Math.imul(al9, bh2);\n\t    mid = (mid + Math.imul(ah9, bl2)) | 0;\n\t    hi = Math.imul(ah9, bh2);\n\t    lo = (lo + Math.imul(al8, bl3)) | 0;\n\t    mid = (mid + Math.imul(al8, bh3)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl3)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh3)) | 0;\n\t    lo = (lo + Math.imul(al7, bl4)) | 0;\n\t    mid = (mid + Math.imul(al7, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh4)) | 0;\n\t    lo = (lo + Math.imul(al6, bl5)) | 0;\n\t    mid = (mid + Math.imul(al6, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh5)) | 0;\n\t    lo = (lo + Math.imul(al5, bl6)) | 0;\n\t    mid = (mid + Math.imul(al5, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh6)) | 0;\n\t    lo = (lo + Math.imul(al4, bl7)) | 0;\n\t    mid = (mid + Math.imul(al4, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh7)) | 0;\n\t    lo = (lo + Math.imul(al3, bl8)) | 0;\n\t    mid = (mid + Math.imul(al3, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh8)) | 0;\n\t    lo = (lo + Math.imul(al2, bl9)) | 0;\n\t    mid = (mid + Math.imul(al2, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah2, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah2, bh9)) | 0;\n\t    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n\t    w11 &= 0x3ffffff;\n\t    /* k = 12 */\n\t    lo = Math.imul(al9, bl3);\n\t    mid = Math.imul(al9, bh3);\n\t    mid = (mid + Math.imul(ah9, bl3)) | 0;\n\t    hi = Math.imul(ah9, bh3);\n\t    lo = (lo + Math.imul(al8, bl4)) | 0;\n\t    mid = (mid + Math.imul(al8, bh4)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl4)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh4)) | 0;\n\t    lo = (lo + Math.imul(al7, bl5)) | 0;\n\t    mid = (mid + Math.imul(al7, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh5)) | 0;\n\t    lo = (lo + Math.imul(al6, bl6)) | 0;\n\t    mid = (mid + Math.imul(al6, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh6)) | 0;\n\t    lo = (lo + Math.imul(al5, bl7)) | 0;\n\t    mid = (mid + Math.imul(al5, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh7)) | 0;\n\t    lo = (lo + Math.imul(al4, bl8)) | 0;\n\t    mid = (mid + Math.imul(al4, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh8)) | 0;\n\t    lo = (lo + Math.imul(al3, bl9)) | 0;\n\t    mid = (mid + Math.imul(al3, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah3, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah3, bh9)) | 0;\n\t    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n\t    w12 &= 0x3ffffff;\n\t    /* k = 13 */\n\t    lo = Math.imul(al9, bl4);\n\t    mid = Math.imul(al9, bh4);\n\t    mid = (mid + Math.imul(ah9, bl4)) | 0;\n\t    hi = Math.imul(ah9, bh4);\n\t    lo = (lo + Math.imul(al8, bl5)) | 0;\n\t    mid = (mid + Math.imul(al8, bh5)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl5)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh5)) | 0;\n\t    lo = (lo + Math.imul(al7, bl6)) | 0;\n\t    mid = (mid + Math.imul(al7, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh6)) | 0;\n\t    lo = (lo + Math.imul(al6, bl7)) | 0;\n\t    mid = (mid + Math.imul(al6, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh7)) | 0;\n\t    lo = (lo + Math.imul(al5, bl8)) | 0;\n\t    mid = (mid + Math.imul(al5, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh8)) | 0;\n\t    lo = (lo + Math.imul(al4, bl9)) | 0;\n\t    mid = (mid + Math.imul(al4, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah4, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah4, bh9)) | 0;\n\t    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n\t    w13 &= 0x3ffffff;\n\t    /* k = 14 */\n\t    lo = Math.imul(al9, bl5);\n\t    mid = Math.imul(al9, bh5);\n\t    mid = (mid + Math.imul(ah9, bl5)) | 0;\n\t    hi = Math.imul(ah9, bh5);\n\t    lo = (lo + Math.imul(al8, bl6)) | 0;\n\t    mid = (mid + Math.imul(al8, bh6)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl6)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh6)) | 0;\n\t    lo = (lo + Math.imul(al7, bl7)) | 0;\n\t    mid = (mid + Math.imul(al7, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh7)) | 0;\n\t    lo = (lo + Math.imul(al6, bl8)) | 0;\n\t    mid = (mid + Math.imul(al6, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh8)) | 0;\n\t    lo = (lo + Math.imul(al5, bl9)) | 0;\n\t    mid = (mid + Math.imul(al5, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah5, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah5, bh9)) | 0;\n\t    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n\t    w14 &= 0x3ffffff;\n\t    /* k = 15 */\n\t    lo = Math.imul(al9, bl6);\n\t    mid = Math.imul(al9, bh6);\n\t    mid = (mid + Math.imul(ah9, bl6)) | 0;\n\t    hi = Math.imul(ah9, bh6);\n\t    lo = (lo + Math.imul(al8, bl7)) | 0;\n\t    mid = (mid + Math.imul(al8, bh7)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl7)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh7)) | 0;\n\t    lo = (lo + Math.imul(al7, bl8)) | 0;\n\t    mid = (mid + Math.imul(al7, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh8)) | 0;\n\t    lo = (lo + Math.imul(al6, bl9)) | 0;\n\t    mid = (mid + Math.imul(al6, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah6, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah6, bh9)) | 0;\n\t    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n\t    w15 &= 0x3ffffff;\n\t    /* k = 16 */\n\t    lo = Math.imul(al9, bl7);\n\t    mid = Math.imul(al9, bh7);\n\t    mid = (mid + Math.imul(ah9, bl7)) | 0;\n\t    hi = Math.imul(ah9, bh7);\n\t    lo = (lo + Math.imul(al8, bl8)) | 0;\n\t    mid = (mid + Math.imul(al8, bh8)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl8)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh8)) | 0;\n\t    lo = (lo + Math.imul(al7, bl9)) | 0;\n\t    mid = (mid + Math.imul(al7, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah7, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah7, bh9)) | 0;\n\t    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n\t    w16 &= 0x3ffffff;\n\t    /* k = 17 */\n\t    lo = Math.imul(al9, bl8);\n\t    mid = Math.imul(al9, bh8);\n\t    mid = (mid + Math.imul(ah9, bl8)) | 0;\n\t    hi = Math.imul(ah9, bh8);\n\t    lo = (lo + Math.imul(al8, bl9)) | 0;\n\t    mid = (mid + Math.imul(al8, bh9)) | 0;\n\t    mid = (mid + Math.imul(ah8, bl9)) | 0;\n\t    hi = (hi + Math.imul(ah8, bh9)) | 0;\n\t    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n\t    w17 &= 0x3ffffff;\n\t    /* k = 18 */\n\t    lo = Math.imul(al9, bl9);\n\t    mid = Math.imul(al9, bh9);\n\t    mid = (mid + Math.imul(ah9, bl9)) | 0;\n\t    hi = Math.imul(ah9, bh9);\n\t    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n\t    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n\t    w18 &= 0x3ffffff;\n\t    o[0] = w0;\n\t    o[1] = w1;\n\t    o[2] = w2;\n\t    o[3] = w3;\n\t    o[4] = w4;\n\t    o[5] = w5;\n\t    o[6] = w6;\n\t    o[7] = w7;\n\t    o[8] = w8;\n\t    o[9] = w9;\n\t    o[10] = w10;\n\t    o[11] = w11;\n\t    o[12] = w12;\n\t    o[13] = w13;\n\t    o[14] = w14;\n\t    o[15] = w15;\n\t    o[16] = w16;\n\t    o[17] = w17;\n\t    o[18] = w18;\n\t    if (c !== 0) {\n\t      o[19] = c;\n\t      out.length++;\n\t    }\n\t    return out;\n\t  };\n\n\t  // Polyfill comb\n\t  if (!Math.imul) {\n\t    comb10MulTo = smallMulTo;\n\t  }\n\n\t  function bigMulTo (self, num, out) {\n\t    out.negative = num.negative ^ self.negative;\n\t    out.length = self.length + num.length;\n\n\t    var carry = 0;\n\t    var hncarry = 0;\n\t    for (var k = 0; k < out.length - 1; k++) {\n\t      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n\t      // note that ncarry could be >= 0x3ffffff\n\t      var ncarry = hncarry;\n\t      hncarry = 0;\n\t      var rword = carry & 0x3ffffff;\n\t      var maxJ = Math.min(k, num.length - 1);\n\t      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n\t        var i = k - j;\n\t        var a = self.words[i] | 0;\n\t        var b = num.words[j] | 0;\n\t        var r = a * b;\n\n\t        var lo = r & 0x3ffffff;\n\t        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n\t        lo = (lo + rword) | 0;\n\t        rword = lo & 0x3ffffff;\n\t        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n\t        hncarry += ncarry >>> 26;\n\t        ncarry &= 0x3ffffff;\n\t      }\n\t      out.words[k] = rword;\n\t      carry = ncarry;\n\t      ncarry = hncarry;\n\t    }\n\t    if (carry !== 0) {\n\t      out.words[k] = carry;\n\t    } else {\n\t      out.length--;\n\t    }\n\n\t    return out.strip();\n\t  }\n\n\t  function jumboMulTo (self, num, out) {\n\t    var fftm = new FFTM();\n\t    return fftm.mulp(self, num, out);\n\t  }\n\n\t  BN.prototype.mulTo = function mulTo (num, out) {\n\t    var res;\n\t    var len = this.length + num.length;\n\t    if (this.length === 10 && num.length === 10) {\n\t      res = comb10MulTo(this, num, out);\n\t    } else if (len < 63) {\n\t      res = smallMulTo(this, num, out);\n\t    } else if (len < 1024) {\n\t      res = bigMulTo(this, num, out);\n\t    } else {\n\t      res = jumboMulTo(this, num, out);\n\t    }\n\n\t    return res;\n\t  };\n\n\t  // Cooley-Tukey algorithm for FFT\n\t  // slightly revisited to rely on looping instead of recursion\n\n\t  function FFTM (x, y) {\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\n\t  FFTM.prototype.makeRBT = function makeRBT (N) {\n\t    var this$1 = this;\n\n\t    var t = new Array(N);\n\t    var l = BN.prototype._countBits(N) - 1;\n\t    for (var i = 0; i < N; i++) {\n\t      t[i] = this$1.revBin(i, l, N);\n\t    }\n\n\t    return t;\n\t  };\n\n\t  // Returns binary-reversed representation of `x`\n\t  FFTM.prototype.revBin = function revBin (x, l, N) {\n\t    if (x === 0 || x === N - 1) { return x; }\n\n\t    var rb = 0;\n\t    for (var i = 0; i < l; i++) {\n\t      rb |= (x & 1) << (l - i - 1);\n\t      x >>= 1;\n\t    }\n\n\t    return rb;\n\t  };\n\n\t  // Performs \"tweedling\" phase, therefore 'emulating'\n\t  // behaviour of the recursive algorithm\n\t  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n\t    for (var i = 0; i < N; i++) {\n\t      rtws[i] = rws[rbt[i]];\n\t      itws[i] = iws[rbt[i]];\n\t    }\n\t  };\n\n\t  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n\t    this.permute(rbt, rws, iws, rtws, itws, N);\n\n\t    for (var s = 1; s < N; s <<= 1) {\n\t      var l = s << 1;\n\n\t      var rtwdf = Math.cos(2 * Math.PI / l);\n\t      var itwdf = Math.sin(2 * Math.PI / l);\n\n\t      for (var p = 0; p < N; p += l) {\n\t        var rtwdf_ = rtwdf;\n\t        var itwdf_ = itwdf;\n\n\t        for (var j = 0; j < s; j++) {\n\t          var re = rtws[p + j];\n\t          var ie = itws[p + j];\n\n\t          var ro = rtws[p + j + s];\n\t          var io = itws[p + j + s];\n\n\t          var rx = rtwdf_ * ro - itwdf_ * io;\n\n\t          io = rtwdf_ * io + itwdf_ * ro;\n\t          ro = rx;\n\n\t          rtws[p + j] = re + ro;\n\t          itws[p + j] = ie + io;\n\n\t          rtws[p + j + s] = re - ro;\n\t          itws[p + j + s] = ie - io;\n\n\t          /* jshint maxdepth : false */\n\t          if (j !== l) {\n\t            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n\t            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n\t            rtwdf_ = rx;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n\t    var N = Math.max(m, n) | 1;\n\t    var odd = N & 1;\n\t    var i = 0;\n\t    for (N = N / 2 | 0; N; N = N >>> 1) {\n\t      i++;\n\t    }\n\n\t    return 1 << i + 1 + odd;\n\t  };\n\n\t  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n\t    if (N <= 1) { return; }\n\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var t = rws[i];\n\n\t      rws[i] = rws[N - i - 1];\n\t      rws[N - i - 1] = t;\n\n\t      t = iws[i];\n\n\t      iws[i] = -iws[N - i - 1];\n\t      iws[N - i - 1] = -t;\n\t    }\n\t  };\n\n\t  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < N / 2; i++) {\n\t      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n\t        Math.round(ws[2 * i] / N) +\n\t        carry;\n\n\t      ws[i] = w & 0x3ffffff;\n\n\t      if (w < 0x4000000) {\n\t        carry = 0;\n\t      } else {\n\t        carry = w / 0x4000000 | 0;\n\t      }\n\t    }\n\n\t    return ws;\n\t  };\n\n\t  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n\t    var carry = 0;\n\t    for (var i = 0; i < len; i++) {\n\t      carry = carry + (ws[i] | 0);\n\n\t      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n\t      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n\t    }\n\n\t    // Pad with zeroes\n\t    for (i = 2 * len; i < N; ++i) {\n\t      rws[i] = 0;\n\t    }\n\n\t    assert(carry === 0);\n\t    assert((carry & ~0x1fff) === 0);\n\t  };\n\n\t  FFTM.prototype.stub = function stub (N) {\n\t    var ph = new Array(N);\n\t    for (var i = 0; i < N; i++) {\n\t      ph[i] = 0;\n\t    }\n\n\t    return ph;\n\t  };\n\n\t  FFTM.prototype.mulp = function mulp (x, y, out) {\n\t    var N = 2 * this.guessLen13b(x.length, y.length);\n\n\t    var rbt = this.makeRBT(N);\n\n\t    var _ = this.stub(N);\n\n\t    var rws = new Array(N);\n\t    var rwst = new Array(N);\n\t    var iwst = new Array(N);\n\n\t    var nrws = new Array(N);\n\t    var nrwst = new Array(N);\n\t    var niwst = new Array(N);\n\n\t    var rmws = out.words;\n\t    rmws.length = N;\n\n\t    this.convert13b(x.words, x.length, rws, N);\n\t    this.convert13b(y.words, y.length, nrws, N);\n\n\t    this.transform(rws, _, rwst, iwst, N, rbt);\n\t    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n\t    for (var i = 0; i < N; i++) {\n\t      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n\t      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n\t      rwst[i] = rx;\n\t    }\n\n\t    this.conjugate(rwst, iwst, N);\n\t    this.transform(rwst, iwst, rmws, _, N, rbt);\n\t    this.conjugate(rmws, _, N);\n\t    this.normalize13b(rmws, N);\n\n\t    out.negative = x.negative ^ y.negative;\n\t    out.length = x.length + y.length;\n\t    return out.strip();\n\t  };\n\n\t  // Multiply `this` by `num`\n\t  BN.prototype.mul = function mul (num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return this.mulTo(num, out);\n\t  };\n\n\t  // Multiply employing FFT\n\t  BN.prototype.mulf = function mulf (num) {\n\t    var out = new BN(null);\n\t    out.words = new Array(this.length + num.length);\n\t    return jumboMulTo(this, num, out);\n\t  };\n\n\t  // In-place Multiplication\n\t  BN.prototype.imul = function imul (num) {\n\t    return this.clone().mulTo(num, this);\n\t  };\n\n\t  BN.prototype.imuln = function imuln (num) {\n\t    var this$1 = this;\n\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\n\t    // Carry\n\t    var carry = 0;\n\t    for (var i = 0; i < this.length; i++) {\n\t      var w = (this$1.words[i] | 0) * num;\n\t      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n\t      carry >>= 26;\n\t      carry += (w / 0x4000000) | 0;\n\t      // NOTE: lo is 27bit maximum\n\t      carry += lo >>> 26;\n\t      this$1.words[i] = lo & 0x3ffffff;\n\t    }\n\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\n\t    return this;\n\t  };\n\n\t  BN.prototype.muln = function muln (num) {\n\t    return this.clone().imuln(num);\n\t  };\n\n\t  // `this` * `this`\n\t  BN.prototype.sqr = function sqr () {\n\t    return this.mul(this);\n\t  };\n\n\t  // `this` * `this` in-place\n\t  BN.prototype.isqr = function isqr () {\n\t    return this.imul(this.clone());\n\t  };\n\n\t  // Math.pow(`this`, `num`)\n\t  BN.prototype.pow = function pow (num) {\n\t    var w = toBitArray(num);\n\t    if (w.length === 0) { return new BN(1); }\n\n\t    // Skip leading zeroes\n\t    var res = this;\n\t    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n\t      if (w[i] !== 0) { break; }\n\t    }\n\n\t    if (++i < w.length) {\n\t      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n\t        if (w[i] === 0) { continue; }\n\n\t        res = res.mul(q);\n\t      }\n\t    }\n\n\t    return res;\n\t  };\n\n\t  // Shift-left in-place\n\t  BN.prototype.iushln = function iushln (bits) {\n\t    var this$1 = this;\n\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\t    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n\t    var i;\n\n\t    if (r !== 0) {\n\t      var carry = 0;\n\n\t      for (i = 0; i < this.length; i++) {\n\t        var newCarry = this$1.words[i] & carryMask;\n\t        var c = ((this$1.words[i] | 0) - newCarry) << r;\n\t        this$1.words[i] = c | carry;\n\t        carry = newCarry >>> (26 - r);\n\t      }\n\n\t      if (carry) {\n\t        this.words[i] = carry;\n\t        this.length++;\n\t      }\n\t    }\n\n\t    if (s !== 0) {\n\t      for (i = this.length - 1; i >= 0; i--) {\n\t        this$1.words[i + s] = this$1.words[i];\n\t      }\n\n\t      for (i = 0; i < s; i++) {\n\t        this$1.words[i] = 0;\n\t      }\n\n\t      this.length += s;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ishln = function ishln (bits) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushln(bits);\n\t  };\n\n\t  // Shift-right in-place\n\t  // NOTE: `hint` is a lowest bit before trailing zeroes\n\t  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\t  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n\t    var this$1 = this;\n\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var h;\n\t    if (hint) {\n\t      h = (hint - (hint % 26)) / 26;\n\t    } else {\n\t      h = 0;\n\t    }\n\n\t    var r = bits % 26;\n\t    var s = Math.min((bits - r) / 26, this.length);\n\t    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n\t    var maskedWords = extended;\n\n\t    h -= s;\n\t    h = Math.max(0, h);\n\n\t    // Extended mode, copy masked part\n\t    if (maskedWords) {\n\t      for (var i = 0; i < s; i++) {\n\t        maskedWords.words[i] = this$1.words[i];\n\t      }\n\t      maskedWords.length = s;\n\t    }\n\n\t    if (s === 0) {\n\t      // No-op, we should not move anything at all\n\t    } else if (this.length > s) {\n\t      this.length -= s;\n\t      for (i = 0; i < this.length; i++) {\n\t        this$1.words[i] = this$1.words[i + s];\n\t      }\n\t    } else {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\n\t    var carry = 0;\n\t    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n\t      var word = this$1.words[i] | 0;\n\t      this$1.words[i] = (carry << (26 - r)) | (word >>> r);\n\t      carry = word & mask;\n\t    }\n\n\t    // Push carried bits as a mask\n\t    if (maskedWords && carry !== 0) {\n\t      maskedWords.words[maskedWords.length++] = carry;\n\t    }\n\n\t    if (this.length === 0) {\n\t      this.words[0] = 0;\n\t      this.length = 1;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n\t    // TODO(indutny): implement me\n\t    assert(this.negative === 0);\n\t    return this.iushrn(bits, hint, extended);\n\t  };\n\n\t  // Shift-left\n\t  BN.prototype.shln = function shln (bits) {\n\t    return this.clone().ishln(bits);\n\t  };\n\n\t  BN.prototype.ushln = function ushln (bits) {\n\t    return this.clone().iushln(bits);\n\t  };\n\n\t  // Shift-right\n\t  BN.prototype.shrn = function shrn (bits) {\n\t    return this.clone().ishrn(bits);\n\t  };\n\n\t  BN.prototype.ushrn = function ushrn (bits) {\n\t    return this.clone().iushrn(bits);\n\t  };\n\n\t  // Test if n bit is set\n\t  BN.prototype.testn = function testn (bit) {\n\t    assert(typeof bit === 'number' && bit >= 0);\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) { return false; }\n\n\t    // Check bit and return\n\t    var w = this.words[s];\n\n\t    return !!(w & q);\n\t  };\n\n\t  // Return only lowers bits of number (in-place)\n\t  BN.prototype.imaskn = function imaskn (bits) {\n\t    assert(typeof bits === 'number' && bits >= 0);\n\t    var r = bits % 26;\n\t    var s = (bits - r) / 26;\n\n\t    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n\t    if (this.length <= s) {\n\t      return this;\n\t    }\n\n\t    if (r !== 0) {\n\t      s++;\n\t    }\n\t    this.length = Math.min(s, this.length);\n\n\t    if (r !== 0) {\n\t      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n\t      this.words[this.length - 1] &= mask;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  // Return only lowers bits of number\n\t  BN.prototype.maskn = function maskn (bits) {\n\t    return this.clone().imaskn(bits);\n\t  };\n\n\t  // Add plain number `num` to `this`\n\t  BN.prototype.iaddn = function iaddn (num) {\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) { return this.isubn(-num); }\n\n\t    // Possible sign change\n\t    if (this.negative !== 0) {\n\t      if (this.length === 1 && (this.words[0] | 0) < num) {\n\t        this.words[0] = num - (this.words[0] | 0);\n\t        this.negative = 0;\n\t        return this;\n\t      }\n\n\t      this.negative = 0;\n\t      this.isubn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\n\t    // Add without checks\n\t    return this._iaddn(num);\n\t  };\n\n\t  BN.prototype._iaddn = function _iaddn (num) {\n\t    var this$1 = this;\n\n\t    this.words[0] += num;\n\n\t    // Carry\n\t    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n\t      this$1.words[i] -= 0x4000000;\n\t      if (i === this$1.length - 1) {\n\t        this$1.words[i + 1] = 1;\n\t      } else {\n\t        this$1.words[i + 1]++;\n\t      }\n\t    }\n\t    this.length = Math.max(this.length, i + 1);\n\n\t    return this;\n\t  };\n\n\t  // Subtract plain number `num` from `this`\n\t  BN.prototype.isubn = function isubn (num) {\n\t    var this$1 = this;\n\n\t    assert(typeof num === 'number');\n\t    assert(num < 0x4000000);\n\t    if (num < 0) { return this.iaddn(-num); }\n\n\t    if (this.negative !== 0) {\n\t      this.negative = 0;\n\t      this.iaddn(num);\n\t      this.negative = 1;\n\t      return this;\n\t    }\n\n\t    this.words[0] -= num;\n\n\t    if (this.length === 1 && this.words[0] < 0) {\n\t      this.words[0] = -this.words[0];\n\t      this.negative = 1;\n\t    } else {\n\t      // Carry\n\t      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n\t        this$1.words[i] += 0x4000000;\n\t        this$1.words[i + 1] -= 1;\n\t      }\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.addn = function addn (num) {\n\t    return this.clone().iaddn(num);\n\t  };\n\n\t  BN.prototype.subn = function subn (num) {\n\t    return this.clone().isubn(num);\n\t  };\n\n\t  BN.prototype.iabs = function iabs () {\n\t    this.negative = 0;\n\n\t    return this;\n\t  };\n\n\t  BN.prototype.abs = function abs () {\n\t    return this.clone().iabs();\n\t  };\n\n\t  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n\t    var this$1 = this;\n\n\t    var len = num.length + shift;\n\t    var i;\n\n\t    this._expand(len);\n\n\t    var w;\n\t    var carry = 0;\n\t    for (i = 0; i < num.length; i++) {\n\t      w = (this$1.words[i + shift] | 0) + carry;\n\t      var right = (num.words[i] | 0) * mul;\n\t      w -= right & 0x3ffffff;\n\t      carry = (w >> 26) - ((right / 0x4000000) | 0);\n\t      this$1.words[i + shift] = w & 0x3ffffff;\n\t    }\n\t    for (; i < this.length - shift; i++) {\n\t      w = (this$1.words[i + shift] | 0) + carry;\n\t      carry = w >> 26;\n\t      this$1.words[i + shift] = w & 0x3ffffff;\n\t    }\n\n\t    if (carry === 0) { return this.strip(); }\n\n\t    // Subtraction overflow\n\t    assert(carry === -1);\n\t    carry = 0;\n\t    for (i = 0; i < this.length; i++) {\n\t      w = -(this$1.words[i] | 0) + carry;\n\t      carry = w >> 26;\n\t      this$1.words[i] = w & 0x3ffffff;\n\t    }\n\t    this.negative = 1;\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n\t    var shift = this.length - num.length;\n\n\t    var a = this.clone();\n\t    var b = num;\n\n\t    // Normalize\n\t    var bhi = b.words[b.length - 1] | 0;\n\t    var bhiBits = this._countBits(bhi);\n\t    shift = 26 - bhiBits;\n\t    if (shift !== 0) {\n\t      b = b.ushln(shift);\n\t      a.iushln(shift);\n\t      bhi = b.words[b.length - 1] | 0;\n\t    }\n\n\t    // Initialize quotient\n\t    var m = a.length - b.length;\n\t    var q;\n\n\t    if (mode !== 'mod') {\n\t      q = new BN(null);\n\t      q.length = m + 1;\n\t      q.words = new Array(q.length);\n\t      for (var i = 0; i < q.length; i++) {\n\t        q.words[i] = 0;\n\t      }\n\t    }\n\n\t    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\t    if (diff.negative === 0) {\n\t      a = diff;\n\t      if (q) {\n\t        q.words[m] = 1;\n\t      }\n\t    }\n\n\t    for (var j = m - 1; j >= 0; j--) {\n\t      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n\t        (a.words[b.length + j - 1] | 0);\n\n\t      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n\t      // (0x7ffffff)\n\t      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n\t      a._ishlnsubmul(b, qj, j);\n\t      while (a.negative !== 0) {\n\t        qj--;\n\t        a.negative = 0;\n\t        a._ishlnsubmul(b, 1, j);\n\t        if (!a.isZero()) {\n\t          a.negative ^= 1;\n\t        }\n\t      }\n\t      if (q) {\n\t        q.words[j] = qj;\n\t      }\n\t    }\n\t    if (q) {\n\t      q.strip();\n\t    }\n\t    a.strip();\n\n\t    // Denormalize\n\t    if (mode !== 'div' && shift !== 0) {\n\t      a.iushrn(shift);\n\t    }\n\n\t    return {\n\t      div: q || null,\n\t      mod: a\n\t    };\n\t  };\n\n\t  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n\t  //       to `div` to request div only, or be absent to\n\t  //       request both div & mod\n\t  //       2) `positive` is true if unsigned mod is requested\n\t  BN.prototype.divmod = function divmod (num, mode, positive) {\n\t    assert(!num.isZero());\n\n\t    if (this.isZero()) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: new BN(0)\n\t      };\n\t    }\n\n\t    var div, mod, res;\n\t    if (this.negative !== 0 && num.negative === 0) {\n\t      res = this.neg().divmod(num, mode);\n\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.iadd(num);\n\t        }\n\t      }\n\n\t      return {\n\t        div: div,\n\t        mod: mod\n\t      };\n\t    }\n\n\t    if (this.negative === 0 && num.negative !== 0) {\n\t      res = this.divmod(num.neg(), mode);\n\n\t      if (mode !== 'mod') {\n\t        div = res.div.neg();\n\t      }\n\n\t      return {\n\t        div: div,\n\t        mod: res.mod\n\t      };\n\t    }\n\n\t    if ((this.negative & num.negative) !== 0) {\n\t      res = this.neg().divmod(num.neg(), mode);\n\n\t      if (mode !== 'div') {\n\t        mod = res.mod.neg();\n\t        if (positive && mod.negative !== 0) {\n\t          mod.isub(num);\n\t        }\n\t      }\n\n\t      return {\n\t        div: res.div,\n\t        mod: mod\n\t      };\n\t    }\n\n\t    // Both numbers are positive at this point\n\n\t    // Strip both numbers to approximate shift value\n\t    if (num.length > this.length || this.cmp(num) < 0) {\n\t      return {\n\t        div: new BN(0),\n\t        mod: this\n\t      };\n\t    }\n\n\t    // Very short reduction\n\t    if (num.length === 1) {\n\t      if (mode === 'div') {\n\t        return {\n\t          div: this.divn(num.words[0]),\n\t          mod: null\n\t        };\n\t      }\n\n\t      if (mode === 'mod') {\n\t        return {\n\t          div: null,\n\t          mod: new BN(this.modn(num.words[0]))\n\t        };\n\t      }\n\n\t      return {\n\t        div: this.divn(num.words[0]),\n\t        mod: new BN(this.modn(num.words[0]))\n\t      };\n\t    }\n\n\t    return this._wordDiv(num, mode);\n\t  };\n\n\t  // Find `this` / `num`\n\t  BN.prototype.div = function div (num) {\n\t    return this.divmod(num, 'div', false).div;\n\t  };\n\n\t  // Find `this` % `num`\n\t  BN.prototype.mod = function mod (num) {\n\t    return this.divmod(num, 'mod', false).mod;\n\t  };\n\n\t  BN.prototype.umod = function umod (num) {\n\t    return this.divmod(num, 'mod', true).mod;\n\t  };\n\n\t  // Find Round(`this` / `num`)\n\t  BN.prototype.divRound = function divRound (num) {\n\t    var dm = this.divmod(num);\n\n\t    // Fast case - exact division\n\t    if (dm.mod.isZero()) { return dm.div; }\n\n\t    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n\t    var half = num.ushrn(1);\n\t    var r2 = num.andln(1);\n\t    var cmp = mod.cmp(half);\n\n\t    // Round down\n\t    if (cmp < 0 || r2 === 1 && cmp === 0) { return dm.div; }\n\n\t    // Round up\n\t    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n\t  };\n\n\t  BN.prototype.modn = function modn (num) {\n\t    var this$1 = this;\n\n\t    assert(num <= 0x3ffffff);\n\t    var p = (1 << 26) % num;\n\n\t    var acc = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      acc = (p * acc + (this$1.words[i] | 0)) % num;\n\t    }\n\n\t    return acc;\n\t  };\n\n\t  // In-place division by number\n\t  BN.prototype.idivn = function idivn (num) {\n\t    var this$1 = this;\n\n\t    assert(num <= 0x3ffffff);\n\n\t    var carry = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var w = (this$1.words[i] | 0) + carry * 0x4000000;\n\t      this$1.words[i] = (w / num) | 0;\n\t      carry = w % num;\n\t    }\n\n\t    return this.strip();\n\t  };\n\n\t  BN.prototype.divn = function divn (num) {\n\t    return this.clone().idivn(num);\n\t  };\n\n\t  BN.prototype.egcd = function egcd (p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\n\t    var x = this;\n\t    var y = p.clone();\n\n\t    if (x.negative !== 0) {\n\t      x = x.umod(p);\n\t    } else {\n\t      x = x.clone();\n\t    }\n\n\t    // A * x + B * y = x\n\t    var A = new BN(1);\n\t    var B = new BN(0);\n\n\t    // C * x + D * y = y\n\t    var C = new BN(0);\n\t    var D = new BN(1);\n\n\t    var g = 0;\n\n\t    while (x.isEven() && y.isEven()) {\n\t      x.iushrn(1);\n\t      y.iushrn(1);\n\t      ++g;\n\t    }\n\n\t    var yp = y.clone();\n\t    var xp = x.clone();\n\n\t    while (!x.isZero()) {\n\t      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1){  }\n\t      if (i > 0) {\n\t        x.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (A.isOdd() || B.isOdd()) {\n\t            A.iadd(yp);\n\t            B.isub(xp);\n\t          }\n\n\t          A.iushrn(1);\n\t          B.iushrn(1);\n\t        }\n\t      }\n\n\t      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1){  }\n\t      if (j > 0) {\n\t        y.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (C.isOdd() || D.isOdd()) {\n\t            C.iadd(yp);\n\t            D.isub(xp);\n\t          }\n\n\t          C.iushrn(1);\n\t          D.iushrn(1);\n\t        }\n\t      }\n\n\t      if (x.cmp(y) >= 0) {\n\t        x.isub(y);\n\t        A.isub(C);\n\t        B.isub(D);\n\t      } else {\n\t        y.isub(x);\n\t        C.isub(A);\n\t        D.isub(B);\n\t      }\n\t    }\n\n\t    return {\n\t      a: C,\n\t      b: D,\n\t      gcd: y.iushln(g)\n\t    };\n\t  };\n\n\t  // This is reduced incarnation of the binary EEA\n\t  // above, designated to invert members of the\n\t  // _prime_ fields F(p) at a maximal speed\n\t  BN.prototype._invmp = function _invmp (p) {\n\t    assert(p.negative === 0);\n\t    assert(!p.isZero());\n\n\t    var a = this;\n\t    var b = p.clone();\n\n\t    if (a.negative !== 0) {\n\t      a = a.umod(p);\n\t    } else {\n\t      a = a.clone();\n\t    }\n\n\t    var x1 = new BN(1);\n\t    var x2 = new BN(0);\n\n\t    var delta = b.clone();\n\n\t    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n\t      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1){  }\n\t      if (i > 0) {\n\t        a.iushrn(i);\n\t        while (i-- > 0) {\n\t          if (x1.isOdd()) {\n\t            x1.iadd(delta);\n\t          }\n\n\t          x1.iushrn(1);\n\t        }\n\t      }\n\n\t      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1){  }\n\t      if (j > 0) {\n\t        b.iushrn(j);\n\t        while (j-- > 0) {\n\t          if (x2.isOdd()) {\n\t            x2.iadd(delta);\n\t          }\n\n\t          x2.iushrn(1);\n\t        }\n\t      }\n\n\t      if (a.cmp(b) >= 0) {\n\t        a.isub(b);\n\t        x1.isub(x2);\n\t      } else {\n\t        b.isub(a);\n\t        x2.isub(x1);\n\t      }\n\t    }\n\n\t    var res;\n\t    if (a.cmpn(1) === 0) {\n\t      res = x1;\n\t    } else {\n\t      res = x2;\n\t    }\n\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(p);\n\t    }\n\n\t    return res;\n\t  };\n\n\t  BN.prototype.gcd = function gcd (num) {\n\t    if (this.isZero()) { return num.abs(); }\n\t    if (num.isZero()) { return this.abs(); }\n\n\t    var a = this.clone();\n\t    var b = num.clone();\n\t    a.negative = 0;\n\t    b.negative = 0;\n\n\t    // Remove common factor of two\n\t    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n\t      a.iushrn(1);\n\t      b.iushrn(1);\n\t    }\n\n\t    do {\n\t      while (a.isEven()) {\n\t        a.iushrn(1);\n\t      }\n\t      while (b.isEven()) {\n\t        b.iushrn(1);\n\t      }\n\n\t      var r = a.cmp(b);\n\t      if (r < 0) {\n\t        // Swap `a` and `b` to make `a` always bigger than `b`\n\t        var t = a;\n\t        a = b;\n\t        b = t;\n\t      } else if (r === 0 || b.cmpn(1) === 0) {\n\t        break;\n\t      }\n\n\t      a.isub(b);\n\t    } while (true);\n\n\t    return b.iushln(shift);\n\t  };\n\n\t  // Invert number in the field F(num)\n\t  BN.prototype.invm = function invm (num) {\n\t    return this.egcd(num).a.umod(num);\n\t  };\n\n\t  BN.prototype.isEven = function isEven () {\n\t    return (this.words[0] & 1) === 0;\n\t  };\n\n\t  BN.prototype.isOdd = function isOdd () {\n\t    return (this.words[0] & 1) === 1;\n\t  };\n\n\t  // And first word and num\n\t  BN.prototype.andln = function andln (num) {\n\t    return this.words[0] & num;\n\t  };\n\n\t  // Increment at the bit position in-line\n\t  BN.prototype.bincn = function bincn (bit) {\n\t    var this$1 = this;\n\n\t    assert(typeof bit === 'number');\n\t    var r = bit % 26;\n\t    var s = (bit - r) / 26;\n\t    var q = 1 << r;\n\n\t    // Fast case: bit is much higher than all existing words\n\t    if (this.length <= s) {\n\t      this._expand(s + 1);\n\t      this.words[s] |= q;\n\t      return this;\n\t    }\n\n\t    // Add bit and propagate, if needed\n\t    var carry = q;\n\t    for (var i = s; carry !== 0 && i < this.length; i++) {\n\t      var w = this$1.words[i] | 0;\n\t      w += carry;\n\t      carry = w >>> 26;\n\t      w &= 0x3ffffff;\n\t      this$1.words[i] = w;\n\t    }\n\t    if (carry !== 0) {\n\t      this.words[i] = carry;\n\t      this.length++;\n\t    }\n\t    return this;\n\t  };\n\n\t  BN.prototype.isZero = function isZero () {\n\t    return this.length === 1 && this.words[0] === 0;\n\t  };\n\n\t  BN.prototype.cmpn = function cmpn (num) {\n\t    var negative = num < 0;\n\n\t    if (this.negative !== 0 && !negative) { return -1; }\n\t    if (this.negative === 0 && negative) { return 1; }\n\n\t    this.strip();\n\n\t    var res;\n\t    if (this.length > 1) {\n\t      res = 1;\n\t    } else {\n\t      if (negative) {\n\t        num = -num;\n\t      }\n\n\t      assert(num <= 0x3ffffff, 'Number is too big');\n\n\t      var w = this.words[0] | 0;\n\t      res = w === num ? 0 : w < num ? -1 : 1;\n\t    }\n\t    if (this.negative !== 0) { return -res | 0; }\n\t    return res;\n\t  };\n\n\t  // Compare two numbers and return:\n\t  // 1 - if `this` > `num`\n\t  // 0 - if `this` == `num`\n\t  // -1 - if `this` < `num`\n\t  BN.prototype.cmp = function cmp (num) {\n\t    if (this.negative !== 0 && num.negative === 0) { return -1; }\n\t    if (this.negative === 0 && num.negative !== 0) { return 1; }\n\n\t    var res = this.ucmp(num);\n\t    if (this.negative !== 0) { return -res | 0; }\n\t    return res;\n\t  };\n\n\t  // Unsigned comparison\n\t  BN.prototype.ucmp = function ucmp (num) {\n\t    var this$1 = this;\n\n\t    // At this point both numbers have the same sign\n\t    if (this.length > num.length) { return 1; }\n\t    if (this.length < num.length) { return -1; }\n\n\t    var res = 0;\n\t    for (var i = this.length - 1; i >= 0; i--) {\n\t      var a = this$1.words[i] | 0;\n\t      var b = num.words[i] | 0;\n\n\t      if (a === b) { continue; }\n\t      if (a < b) {\n\t        res = -1;\n\t      } else if (a > b) {\n\t        res = 1;\n\t      }\n\t      break;\n\t    }\n\t    return res;\n\t  };\n\n\t  BN.prototype.gtn = function gtn (num) {\n\t    return this.cmpn(num) === 1;\n\t  };\n\n\t  BN.prototype.gt = function gt (num) {\n\t    return this.cmp(num) === 1;\n\t  };\n\n\t  BN.prototype.gten = function gten (num) {\n\t    return this.cmpn(num) >= 0;\n\t  };\n\n\t  BN.prototype.gte = function gte (num) {\n\t    return this.cmp(num) >= 0;\n\t  };\n\n\t  BN.prototype.ltn = function ltn (num) {\n\t    return this.cmpn(num) === -1;\n\t  };\n\n\t  BN.prototype.lt = function lt (num) {\n\t    return this.cmp(num) === -1;\n\t  };\n\n\t  BN.prototype.lten = function lten (num) {\n\t    return this.cmpn(num) <= 0;\n\t  };\n\n\t  BN.prototype.lte = function lte (num) {\n\t    return this.cmp(num) <= 0;\n\t  };\n\n\t  BN.prototype.eqn = function eqn (num) {\n\t    return this.cmpn(num) === 0;\n\t  };\n\n\t  BN.prototype.eq = function eq (num) {\n\t    return this.cmp(num) === 0;\n\t  };\n\n\t  //\n\t  // A reduce context, could be using montgomery or something better, depending\n\t  // on the `m` itself.\n\t  //\n\t  BN.red = function red (num) {\n\t    return new Red(num);\n\t  };\n\n\t  BN.prototype.toRed = function toRed (ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    assert(this.negative === 0, 'red works only with positives');\n\t    return ctx.convertTo(this)._forceRed(ctx);\n\t  };\n\n\t  BN.prototype.fromRed = function fromRed () {\n\t    assert(this.red, 'fromRed works only with numbers in reduction context');\n\t    return this.red.convertFrom(this);\n\t  };\n\n\t  BN.prototype._forceRed = function _forceRed (ctx) {\n\t    this.red = ctx;\n\t    return this;\n\t  };\n\n\t  BN.prototype.forceRed = function forceRed (ctx) {\n\t    assert(!this.red, 'Already a number in reduction context');\n\t    return this._forceRed(ctx);\n\t  };\n\n\t  BN.prototype.redAdd = function redAdd (num) {\n\t    assert(this.red, 'redAdd works only with red numbers');\n\t    return this.red.add(this, num);\n\t  };\n\n\t  BN.prototype.redIAdd = function redIAdd (num) {\n\t    assert(this.red, 'redIAdd works only with red numbers');\n\t    return this.red.iadd(this, num);\n\t  };\n\n\t  BN.prototype.redSub = function redSub (num) {\n\t    assert(this.red, 'redSub works only with red numbers');\n\t    return this.red.sub(this, num);\n\t  };\n\n\t  BN.prototype.redISub = function redISub (num) {\n\t    assert(this.red, 'redISub works only with red numbers');\n\t    return this.red.isub(this, num);\n\t  };\n\n\t  BN.prototype.redShl = function redShl (num) {\n\t    assert(this.red, 'redShl works only with red numbers');\n\t    return this.red.shl(this, num);\n\t  };\n\n\t  BN.prototype.redMul = function redMul (num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.mul(this, num);\n\t  };\n\n\t  BN.prototype.redIMul = function redIMul (num) {\n\t    assert(this.red, 'redMul works only with red numbers');\n\t    this.red._verify2(this, num);\n\t    return this.red.imul(this, num);\n\t  };\n\n\t  BN.prototype.redSqr = function redSqr () {\n\t    assert(this.red, 'redSqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqr(this);\n\t  };\n\n\t  BN.prototype.redISqr = function redISqr () {\n\t    assert(this.red, 'redISqr works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.isqr(this);\n\t  };\n\n\t  // Square root over p\n\t  BN.prototype.redSqrt = function redSqrt () {\n\t    assert(this.red, 'redSqrt works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.sqrt(this);\n\t  };\n\n\t  BN.prototype.redInvm = function redInvm () {\n\t    assert(this.red, 'redInvm works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.invm(this);\n\t  };\n\n\t  // Return negative clone of `this` % `red modulo`\n\t  BN.prototype.redNeg = function redNeg () {\n\t    assert(this.red, 'redNeg works only with red numbers');\n\t    this.red._verify1(this);\n\t    return this.red.neg(this);\n\t  };\n\n\t  BN.prototype.redPow = function redPow (num) {\n\t    assert(this.red && !num.red, 'redPow(normalNum)');\n\t    this.red._verify1(this);\n\t    return this.red.pow(this, num);\n\t  };\n\n\t  // Prime numbers with efficient reduction\n\t  var primes = {\n\t    k256: null,\n\t    p224: null,\n\t    p192: null,\n\t    p25519: null\n\t  };\n\n\t  // Pseudo-Mersenne prime\n\t  function MPrime (name, p) {\n\t    // P = 2 ^ N - K\n\t    this.name = name;\n\t    this.p = new BN(p, 16);\n\t    this.n = this.p.bitLength();\n\t    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n\t    this.tmp = this._tmp();\n\t  }\n\n\t  MPrime.prototype._tmp = function _tmp () {\n\t    var tmp = new BN(null);\n\t    tmp.words = new Array(Math.ceil(this.n / 13));\n\t    return tmp;\n\t  };\n\n\t  MPrime.prototype.ireduce = function ireduce (num) {\n\t    var this$1 = this;\n\n\t    // Assumes that `num` is less than `P^2`\n\t    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n\t    var r = num;\n\t    var rlen;\n\n\t    do {\n\t      this$1.split(r, this$1.tmp);\n\t      r = this$1.imulK(r);\n\t      r = r.iadd(this$1.tmp);\n\t      rlen = r.bitLength();\n\t    } while (rlen > this.n);\n\n\t    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\t    if (cmp === 0) {\n\t      r.words[0] = 0;\n\t      r.length = 1;\n\t    } else if (cmp > 0) {\n\t      r.isub(this.p);\n\t    } else {\n\t      r.strip();\n\t    }\n\n\t    return r;\n\t  };\n\n\t  MPrime.prototype.split = function split (input, out) {\n\t    input.iushrn(this.n, 0, out);\n\t  };\n\n\t  MPrime.prototype.imulK = function imulK (num) {\n\t    return num.imul(this.k);\n\t  };\n\n\t  function K256 () {\n\t    MPrime.call(\n\t      this,\n\t      'k256',\n\t      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n\t  }\n\t  inherits(K256, MPrime);\n\n\t  K256.prototype.split = function split (input, output) {\n\t    // 256 = 9 * 26 + 22\n\t    var mask = 0x3fffff;\n\n\t    var outLen = Math.min(input.length, 9);\n\t    for (var i = 0; i < outLen; i++) {\n\t      output.words[i] = input.words[i];\n\t    }\n\t    output.length = outLen;\n\n\t    if (input.length <= 9) {\n\t      input.words[0] = 0;\n\t      input.length = 1;\n\t      return;\n\t    }\n\n\t    // Shift by 9 limbs\n\t    var prev = input.words[9];\n\t    output.words[output.length++] = prev & mask;\n\n\t    for (i = 10; i < input.length; i++) {\n\t      var next = input.words[i] | 0;\n\t      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n\t      prev = next;\n\t    }\n\t    prev >>>= 22;\n\t    input.words[i - 10] = prev;\n\t    if (prev === 0 && input.length > 10) {\n\t      input.length -= 10;\n\t    } else {\n\t      input.length -= 9;\n\t    }\n\t  };\n\n\t  K256.prototype.imulK = function imulK (num) {\n\t    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n\t    num.words[num.length] = 0;\n\t    num.words[num.length + 1] = 0;\n\t    num.length += 2;\n\n\t    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\t    var lo = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var w = num.words[i] | 0;\n\t      lo += w * 0x3d1;\n\t      num.words[i] = lo & 0x3ffffff;\n\t      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n\t    }\n\n\t    // Fast length reduction\n\t    if (num.words[num.length - 1] === 0) {\n\t      num.length--;\n\t      if (num.words[num.length - 1] === 0) {\n\t        num.length--;\n\t      }\n\t    }\n\t    return num;\n\t  };\n\n\t  function P224 () {\n\t    MPrime.call(\n\t      this,\n\t      'p224',\n\t      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n\t  }\n\t  inherits(P224, MPrime);\n\n\t  function P192 () {\n\t    MPrime.call(\n\t      this,\n\t      'p192',\n\t      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n\t  }\n\t  inherits(P192, MPrime);\n\n\t  function P25519 () {\n\t    // 2 ^ 255 - 19\n\t    MPrime.call(\n\t      this,\n\t      '25519',\n\t      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n\t  }\n\t  inherits(P25519, MPrime);\n\n\t  P25519.prototype.imulK = function imulK (num) {\n\t    // K = 0x13\n\t    var carry = 0;\n\t    for (var i = 0; i < num.length; i++) {\n\t      var hi = (num.words[i] | 0) * 0x13 + carry;\n\t      var lo = hi & 0x3ffffff;\n\t      hi >>>= 26;\n\n\t      num.words[i] = lo;\n\t      carry = hi;\n\t    }\n\t    if (carry !== 0) {\n\t      num.words[num.length++] = carry;\n\t    }\n\t    return num;\n\t  };\n\n\t  // Exported mostly for testing purposes, use plain name instead\n\t  BN._prime = function prime (name) {\n\t    // Cached version of prime\n\t    if (primes[name]) { return primes[name]; }\n\n\t    var prime;\n\t    if (name === 'k256') {\n\t      prime = new K256();\n\t    } else if (name === 'p224') {\n\t      prime = new P224();\n\t    } else if (name === 'p192') {\n\t      prime = new P192();\n\t    } else if (name === 'p25519') {\n\t      prime = new P25519();\n\t    } else {\n\t      throw new Error('Unknown prime ' + name);\n\t    }\n\t    primes[name] = prime;\n\n\t    return prime;\n\t  };\n\n\t  //\n\t  // Base reduction engine\n\t  //\n\t  function Red (m) {\n\t    if (typeof m === 'string') {\n\t      var prime = BN._prime(m);\n\t      this.m = prime.p;\n\t      this.prime = prime;\n\t    } else {\n\t      assert(m.gtn(1), 'modulus must be greater than 1');\n\t      this.m = m;\n\t      this.prime = null;\n\t    }\n\t  }\n\n\t  Red.prototype._verify1 = function _verify1 (a) {\n\t    assert(a.negative === 0, 'red works only with positives');\n\t    assert(a.red, 'red works only with red numbers');\n\t  };\n\n\t  Red.prototype._verify2 = function _verify2 (a, b) {\n\t    assert((a.negative | b.negative) === 0, 'red works only with positives');\n\t    assert(a.red && a.red === b.red,\n\t      'red works only with red numbers');\n\t  };\n\n\t  Red.prototype.imod = function imod (a) {\n\t    if (this.prime) { return this.prime.ireduce(a)._forceRed(this); }\n\t    return a.umod(this.m)._forceRed(this);\n\t  };\n\n\t  Red.prototype.neg = function neg (a) {\n\t    if (a.isZero()) {\n\t      return a.clone();\n\t    }\n\n\t    return this.m.sub(a)._forceRed(this);\n\t  };\n\n\t  Red.prototype.add = function add (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.add(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\n\t  Red.prototype.iadd = function iadd (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.iadd(b);\n\t    if (res.cmp(this.m) >= 0) {\n\t      res.isub(this.m);\n\t    }\n\t    return res;\n\t  };\n\n\t  Red.prototype.sub = function sub (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.sub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res._forceRed(this);\n\t  };\n\n\t  Red.prototype.isub = function isub (a, b) {\n\t    this._verify2(a, b);\n\n\t    var res = a.isub(b);\n\t    if (res.cmpn(0) < 0) {\n\t      res.iadd(this.m);\n\t    }\n\t    return res;\n\t  };\n\n\t  Red.prototype.shl = function shl (a, num) {\n\t    this._verify1(a);\n\t    return this.imod(a.ushln(num));\n\t  };\n\n\t  Red.prototype.imul = function imul (a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.imul(b));\n\t  };\n\n\t  Red.prototype.mul = function mul (a, b) {\n\t    this._verify2(a, b);\n\t    return this.imod(a.mul(b));\n\t  };\n\n\t  Red.prototype.isqr = function isqr (a) {\n\t    return this.imul(a, a.clone());\n\t  };\n\n\t  Red.prototype.sqr = function sqr (a) {\n\t    return this.mul(a, a);\n\t  };\n\n\t  Red.prototype.sqrt = function sqrt (a) {\n\t    var this$1 = this;\n\n\t    if (a.isZero()) { return a.clone(); }\n\n\t    var mod3 = this.m.andln(3);\n\t    assert(mod3 % 2 === 1);\n\n\t    // Fast case\n\t    if (mod3 === 3) {\n\t      var pow = this.m.add(new BN(1)).iushrn(2);\n\t      return this.pow(a, pow);\n\t    }\n\n\t    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n\t    //\n\t    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\t    var q = this.m.subn(1);\n\t    var s = 0;\n\t    while (!q.isZero() && q.andln(1) === 0) {\n\t      s++;\n\t      q.iushrn(1);\n\t    }\n\t    assert(!q.isZero());\n\n\t    var one = new BN(1).toRed(this);\n\t    var nOne = one.redNeg();\n\n\t    // Find quadratic non-residue\n\t    // NOTE: Max is such because of generalized Riemann hypothesis.\n\t    var lpow = this.m.subn(1).iushrn(1);\n\t    var z = this.m.bitLength();\n\t    z = new BN(2 * z * z).toRed(this);\n\n\t    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n\t      z.redIAdd(nOne);\n\t    }\n\n\t    var c = this.pow(z, q);\n\t    var r = this.pow(a, q.addn(1).iushrn(1));\n\t    var t = this.pow(a, q);\n\t    var m = s;\n\t    while (t.cmp(one) !== 0) {\n\t      var tmp = t;\n\t      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n\t        tmp = tmp.redSqr();\n\t      }\n\t      assert(i < m);\n\t      var b = this$1.pow(c, new BN(1).iushln(m - i - 1));\n\n\t      r = r.redMul(b);\n\t      c = b.redSqr();\n\t      t = t.redMul(c);\n\t      m = i;\n\t    }\n\n\t    return r;\n\t  };\n\n\t  Red.prototype.invm = function invm (a) {\n\t    var inv = a._invmp(this.m);\n\t    if (inv.negative !== 0) {\n\t      inv.negative = 0;\n\t      return this.imod(inv).redNeg();\n\t    } else {\n\t      return this.imod(inv);\n\t    }\n\t  };\n\n\t  Red.prototype.pow = function pow (a, num) {\n\t    var this$1 = this;\n\n\t    if (num.isZero()) { return new BN(1).toRed(this); }\n\t    if (num.cmpn(1) === 0) { return a.clone(); }\n\n\t    var windowSize = 4;\n\t    var wnd = new Array(1 << windowSize);\n\t    wnd[0] = new BN(1).toRed(this);\n\t    wnd[1] = a;\n\t    for (var i = 2; i < wnd.length; i++) {\n\t      wnd[i] = this$1.mul(wnd[i - 1], a);\n\t    }\n\n\t    var res = wnd[0];\n\t    var current = 0;\n\t    var currentLen = 0;\n\t    var start = num.bitLength() % 26;\n\t    if (start === 0) {\n\t      start = 26;\n\t    }\n\n\t    for (i = num.length - 1; i >= 0; i--) {\n\t      var word = num.words[i];\n\t      for (var j = start - 1; j >= 0; j--) {\n\t        var bit = (word >> j) & 1;\n\t        if (res !== wnd[0]) {\n\t          res = this$1.sqr(res);\n\t        }\n\n\t        if (bit === 0 && current === 0) {\n\t          currentLen = 0;\n\t          continue;\n\t        }\n\n\t        current <<= 1;\n\t        current |= bit;\n\t        currentLen++;\n\t        if (currentLen !== windowSize && (i !== 0 || j !== 0)) { continue; }\n\n\t        res = this$1.mul(res, wnd[current]);\n\t        currentLen = 0;\n\t        current = 0;\n\t      }\n\t      start = 26;\n\t    }\n\n\t    return res;\n\t  };\n\n\t  Red.prototype.convertTo = function convertTo (num) {\n\t    var r = num.umod(this.m);\n\n\t    return r === num ? r.clone() : r;\n\t  };\n\n\t  Red.prototype.convertFrom = function convertFrom (num) {\n\t    var res = num.clone();\n\t    res.red = null;\n\t    return res;\n\t  };\n\n\t  //\n\t  // Montgomery method engine\n\t  //\n\n\t  BN.mont = function mont (num) {\n\t    return new Mont(num);\n\t  };\n\n\t  function Mont (m) {\n\t    Red.call(this, m);\n\n\t    this.shift = this.m.bitLength();\n\t    if (this.shift % 26 !== 0) {\n\t      this.shift += 26 - (this.shift % 26);\n\t    }\n\n\t    this.r = new BN(1).iushln(this.shift);\n\t    this.r2 = this.imod(this.r.sqr());\n\t    this.rinv = this.r._invmp(this.m);\n\n\t    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n\t    this.minv = this.minv.umod(this.r);\n\t    this.minv = this.r.sub(this.minv);\n\t  }\n\t  inherits(Mont, Red);\n\n\t  Mont.prototype.convertTo = function convertTo (num) {\n\t    return this.imod(num.ushln(this.shift));\n\t  };\n\n\t  Mont.prototype.convertFrom = function convertFrom (num) {\n\t    var r = this.imod(num.mul(this.rinv));\n\t    r.red = null;\n\t    return r;\n\t  };\n\n\t  Mont.prototype.imul = function imul (a, b) {\n\t    if (a.isZero() || b.isZero()) {\n\t      a.words[0] = 0;\n\t      a.length = 1;\n\t      return a;\n\t    }\n\n\t    var t = a.imul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\n\t    return res._forceRed(this);\n\t  };\n\n\t  Mont.prototype.mul = function mul (a, b) {\n\t    if (a.isZero() || b.isZero()) { return new BN(0)._forceRed(this); }\n\n\t    var t = a.mul(b);\n\t    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n\t    var u = t.isub(c).iushrn(this.shift);\n\t    var res = u;\n\t    if (u.cmp(this.m) >= 0) {\n\t      res = u.isub(this.m);\n\t    } else if (u.cmpn(0) < 0) {\n\t      res = u.iadd(this.m);\n\t    }\n\n\t    return res._forceRed(this);\n\t  };\n\n\t  Mont.prototype.invm = function invm (a) {\n\t    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n\t    var res = this.imod(a._invmp(this.m).mul(this.r2));\n\t    return res._forceRed(this);\n\t  };\n\t})(typeof module === 'undefined' || module, this);\n\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)));\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t// We resolve `buffer` to this file, eliminating it from our builds.\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = assert;\n\n\tfunction assert(val, msg) {\n\t  if (!val)\n\t    { throw new Error(msg || 'Assertion failed'); }\n\t}\n\n\tassert.equal = function assertEqual(l, r, msg) {\n\t  if (l != r)\n\t    { throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r)); }\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tvar utils = exports;\n\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg))\n\t    { return msg.slice(); }\n\t  if (!msg)\n\t    { return []; }\n\t  var res = [];\n\t  if (typeof msg !== 'string') {\n\t    for (var i = 0; i < msg.length; i++)\n\t      { res[i] = msg[i] | 0; }\n\t    return res;\n\t  }\n\t  if (enc === 'hex') {\n\t    msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t    if (msg.length % 2 !== 0)\n\t      { msg = '0' + msg; }\n\t    for (var i = 0; i < msg.length; i += 2)\n\t      { res.push(parseInt(msg[i] + msg[i + 1], 16)); }\n\t  } else {\n\t    for (var i = 0; i < msg.length; i++) {\n\t      var c = msg.charCodeAt(i);\n\t      var hi = c >> 8;\n\t      var lo = c & 0xff;\n\t      if (hi)\n\t        { res.push(hi, lo); }\n\t      else\n\t        { res.push(lo); }\n\t    }\n\t  }\n\t  return res;\n\t}\n\tutils.toArray = toArray;\n\n\tfunction zero2(word) {\n\t  if (word.length === 1)\n\t    { return '0' + word; }\n\t  else\n\t    { return word; }\n\t}\n\tutils.zero2 = zero2;\n\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++)\n\t    { res += zero2(msg[i].toString(16)); }\n\t  return res;\n\t}\n\tutils.toHex = toHex;\n\n\tutils.encode = function encode(arr, enc) {\n\t  if (enc === 'hex')\n\t    { return toHex(arr); }\n\t  else\n\t    { return arr; }\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar r;\n\n\tmodule.exports = function rand(len) {\n\t  if (!r)\n\t    { r = new Rand(null); }\n\n\t  return r.generate(len);\n\t};\n\n\tfunction Rand(rand) {\n\t  this.rand = rand;\n\t}\n\tmodule.exports.Rand = Rand;\n\n\tRand.prototype.generate = function generate(len) {\n\t  return this._rand(len);\n\t};\n\n\t// Emulate crypto API using randy\n\tRand.prototype._rand = function _rand(n) {\n\t  var this$1 = this;\n\n\t  if (this.rand.getBytes)\n\t    { return this.rand.getBytes(n); }\n\n\t  var res = new Uint8Array(n);\n\t  for (var i = 0; i < res.length; i++)\n\t    { res[i] = this$1.rand.getByte(); }\n\t  return res;\n\t};\n\n\tif (typeof self === 'object') {\n\t  if (self.crypto && self.crypto.getRandomValues) {\n\t    // Modern browsers\n\t    Rand.prototype._rand = function _rand(n) {\n\t      var arr = new Uint8Array(n);\n\t      self.crypto.getRandomValues(arr);\n\t      return arr;\n\t    };\n\t  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n\t    // IE\n\t    Rand.prototype._rand = function _rand(n) {\n\t      var arr = new Uint8Array(n);\n\t      self.msCrypto.getRandomValues(arr);\n\t      return arr;\n\t    };\n\n\t  // Safari's WebWorkers do not have `crypto`\n\t  } else if (typeof window === 'object') {\n\t    // Old junk\n\t    Rand.prototype._rand = function() {\n\t      throw new Error('Not implemented yet');\n\t    };\n\t  }\n\t} else {\n\t  // Node.js or Web worker with no crypto support\n\t  try {\n\t    var crypto = __webpack_require__(10);\n\t    if (typeof crypto.randomBytes !== 'function')\n\t      { throw new Error('Not supported'); }\n\n\t    Rand.prototype._rand = function _rand(n) {\n\t      return crypto.randomBytes(n);\n\t    };\n\t  } catch (e) {\n\t  }\n\t}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = exports;\n\n\tcurve.base = __webpack_require__(12);\n\tcurve.short = __webpack_require__(13);\n\tcurve.mont = __webpack_require__(15);\n\tcurve.edwards = __webpack_require__(16);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar getNAF = utils.getNAF;\n\tvar getJSF = utils.getJSF;\n\tvar assert = utils.assert;\n\n\tfunction BaseCurve(type, conf) {\n\t  this.type = type;\n\t  this.p = new BN(conf.p, 16);\n\n\t  // Use Montgomery, when there is no fast reduction for the prime\n\t  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n\t  // Useful for many curves\n\t  this.zero = new BN(0).toRed(this.red);\n\t  this.one = new BN(1).toRed(this.red);\n\t  this.two = new BN(2).toRed(this.red);\n\n\t  // Curve configuration, optional\n\t  this.n = conf.n && new BN(conf.n, 16);\n\t  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n\t  // Temporary arrays\n\t  this._wnafT1 = new Array(4);\n\t  this._wnafT2 = new Array(4);\n\t  this._wnafT3 = new Array(4);\n\t  this._wnafT4 = new Array(4);\n\n\t  // Generalized Greg Maxwell's trick\n\t  var adjustCount = this.n && this.p.div(this.n);\n\t  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n\t    this.redN = null;\n\t  } else {\n\t    this._maxwellTrick = true;\n\t    this.redN = this.n.toRed(this.red);\n\t  }\n\t}\n\tmodule.exports = BaseCurve;\n\n\tBaseCurve.prototype.point = function point() {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBaseCurve.prototype.validate = function validate() {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n\t  assert(p.precomputed);\n\t  var doubles = p._getDoubles();\n\n\t  var naf = getNAF(k, 1);\n\t  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n\t  I /= 3;\n\n\t  // Translate into more windowed form\n\t  var repr = [];\n\t  for (var j = 0; j < naf.length; j += doubles.step) {\n\t    var nafW = 0;\n\t    for (var k = j + doubles.step - 1; k >= j; k--)\n\t      { nafW = (nafW << 1) + naf[k]; }\n\t    repr.push(nafW);\n\t  }\n\n\t  var a = this.jpoint(null, null, null);\n\t  var b = this.jpoint(null, null, null);\n\t  for (var i = I; i > 0; i--) {\n\t    for (var j = 0; j < repr.length; j++) {\n\t      var nafW = repr[j];\n\t      if (nafW === i)\n\t        { b = b.mixedAdd(doubles.points[j]); }\n\t      else if (nafW === -i)\n\t        { b = b.mixedAdd(doubles.points[j].neg()); }\n\t    }\n\t    a = a.add(b);\n\t  }\n\t  return a.toP();\n\t};\n\n\tBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n\t  var w = 4;\n\n\t  // Precompute window\n\t  var nafPoints = p._getNAFPoints(w);\n\t  w = nafPoints.wnd;\n\t  var wnd = nafPoints.points;\n\n\t  // Get NAF form\n\t  var naf = getNAF(k, w);\n\n\t  // Add `this`*(N+1) for every w-NAF index\n\t  var acc = this.jpoint(null, null, null);\n\t  for (var i = naf.length - 1; i >= 0; i--) {\n\t    // Count zeroes\n\t    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n\t      { k++; }\n\t    if (i >= 0)\n\t      { k++; }\n\t    acc = acc.dblp(k);\n\n\t    if (i < 0)\n\t      { break; }\n\t    var z = naf[i];\n\t    assert(z !== 0);\n\t    if (p.type === 'affine') {\n\t      // J +- P\n\t      if (z > 0)\n\t        { acc = acc.mixedAdd(wnd[(z - 1) >> 1]); }\n\t      else\n\t        { acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg()); }\n\t    } else {\n\t      // J +- J\n\t      if (z > 0)\n\t        { acc = acc.add(wnd[(z - 1) >> 1]); }\n\t      else\n\t        { acc = acc.add(wnd[(-z - 1) >> 1].neg()); }\n\t    }\n\t  }\n\t  return p.type === 'affine' ? acc.toP() : acc;\n\t};\n\n\tBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n\t                                                       points,\n\t                                                       coeffs,\n\t                                                       len,\n\t                                                       jacobianResult) {\n\t  var wndWidth = this._wnafT1;\n\t  var wnd = this._wnafT2;\n\t  var naf = this._wnafT3;\n\n\t  // Fill all arrays\n\t  var max = 0;\n\t  for (var i = 0; i < len; i++) {\n\t    var p = points[i];\n\t    var nafPoints = p._getNAFPoints(defW);\n\t    wndWidth[i] = nafPoints.wnd;\n\t    wnd[i] = nafPoints.points;\n\t  }\n\n\t  // Comb small window NAFs\n\t  for (var i = len - 1; i >= 1; i -= 2) {\n\t    var a = i - 1;\n\t    var b = i;\n\t    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n\t      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n\t      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n\t      max = Math.max(naf[a].length, max);\n\t      max = Math.max(naf[b].length, max);\n\t      continue;\n\t    }\n\n\t    var comb = [\n\t      points[a], /* 1 */\n\t      null, /* 3 */\n\t      null, /* 5 */\n\t      points[b] /* 7 */\n\t    ];\n\n\t    // Try to avoid Projective points, if possible\n\t    if (points[a].y.cmp(points[b].y) === 0) {\n\t      comb[1] = points[a].add(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].add(points[b].neg());\n\t    } else {\n\t      comb[1] = points[a].toJ().mixedAdd(points[b]);\n\t      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n\t    }\n\n\t    var index = [\n\t      -3, /* -1 -1 */\n\t      -1, /* -1 0 */\n\t      -5, /* -1 1 */\n\t      -7, /* 0 -1 */\n\t      0, /* 0 0 */\n\t      7, /* 0 1 */\n\t      5, /* 1 -1 */\n\t      1, /* 1 0 */\n\t      3  /* 1 1 */\n\t    ];\n\n\t    var jsf = getJSF(coeffs[a], coeffs[b]);\n\t    max = Math.max(jsf[0].length, max);\n\t    naf[a] = new Array(max);\n\t    naf[b] = new Array(max);\n\t    for (var j = 0; j < max; j++) {\n\t      var ja = jsf[0][j] | 0;\n\t      var jb = jsf[1][j] | 0;\n\n\t      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n\t      naf[b][j] = 0;\n\t      wnd[a] = comb;\n\t    }\n\t  }\n\n\t  var acc = this.jpoint(null, null, null);\n\t  var tmp = this._wnafT4;\n\t  for (var i = max; i >= 0; i--) {\n\t    var k = 0;\n\n\t    while (i >= 0) {\n\t      var zero = true;\n\t      for (var j = 0; j < len; j++) {\n\t        tmp[j] = naf[j][i] | 0;\n\t        if (tmp[j] !== 0)\n\t          { zero = false; }\n\t      }\n\t      if (!zero)\n\t        { break; }\n\t      k++;\n\t      i--;\n\t    }\n\t    if (i >= 0)\n\t      { k++; }\n\t    acc = acc.dblp(k);\n\t    if (i < 0)\n\t      { break; }\n\n\t    for (var j = 0; j < len; j++) {\n\t      var z = tmp[j];\n\t      var p;\n\t      if (z === 0)\n\t        { continue; }\n\t      else if (z > 0)\n\t        { p = wnd[j][(z - 1) >> 1]; }\n\t      else if (z < 0)\n\t        { p = wnd[j][(-z - 1) >> 1].neg(); }\n\n\t      if (p.type === 'affine')\n\t        { acc = acc.mixedAdd(p); }\n\t      else\n\t        { acc = acc.add(p); }\n\t    }\n\t  }\n\t  // Zeroify references\n\t  for (var i = 0; i < len; i++)\n\t    { wnd[i] = null; }\n\n\t  if (jacobianResult)\n\t    { return acc; }\n\t  else\n\t    { return acc.toP(); }\n\t};\n\n\tfunction BasePoint(curve, type) {\n\t  this.curve = curve;\n\t  this.type = type;\n\t  this.precomputed = null;\n\t}\n\tBaseCurve.BasePoint = BasePoint;\n\n\tBasePoint.prototype.eq = function eq(/*other*/) {\n\t  throw new Error('Not implemented');\n\t};\n\n\tBasePoint.prototype.validate = function validate() {\n\t  return this.curve.validate(this);\n\t};\n\n\tBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  bytes = utils.toArray(bytes, enc);\n\n\t  var len = this.p.byteLength();\n\n\t  // uncompressed, hybrid-odd, hybrid-even\n\t  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n\t      bytes.length - 1 === 2 * len) {\n\t    if (bytes[0] === 0x06)\n\t      { assert(bytes[bytes.length - 1] % 2 === 0); }\n\t    else if (bytes[0] === 0x07)\n\t      { assert(bytes[bytes.length - 1] % 2 === 1); }\n\n\t    var res =  this.point(bytes.slice(1, 1 + len),\n\t                          bytes.slice(1 + len, 1 + 2 * len));\n\n\t    return res;\n\t  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n\t              bytes.length - 1 === len) {\n\t    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n\t  }\n\t  throw new Error('Unknown point format');\n\t};\n\n\tBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n\t  return this.encode(enc, true);\n\t};\n\n\tBasePoint.prototype._encode = function _encode(compact) {\n\t  var len = this.curve.p.byteLength();\n\t  var x = this.getX().toArray('be', len);\n\n\t  if (compact)\n\t    { return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x); }\n\n\t  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n\t};\n\n\tBasePoint.prototype.encode = function encode(enc, compact) {\n\t  return utils.encode(this._encode(compact), enc);\n\t};\n\n\tBasePoint.prototype.precompute = function precompute(power) {\n\t  if (this.precomputed)\n\t    { return this; }\n\n\t  var precomputed = {\n\t    doubles: null,\n\t    naf: null,\n\t    beta: null\n\t  };\n\t  precomputed.naf = this._getNAFPoints(8);\n\t  precomputed.doubles = this._getDoubles(4, power);\n\t  precomputed.beta = this._getBeta();\n\t  this.precomputed = precomputed;\n\n\t  return this;\n\t};\n\n\tBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n\t  if (!this.precomputed)\n\t    { return false; }\n\n\t  var doubles = this.precomputed.doubles;\n\t  if (!doubles)\n\t    { return false; }\n\n\t  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n\t};\n\n\tBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n\t  if (this.precomputed && this.precomputed.doubles)\n\t    { return this.precomputed.doubles; }\n\n\t  var doubles = [ this ];\n\t  var acc = this;\n\t  for (var i = 0; i < power; i += step) {\n\t    for (var j = 0; j < step; j++)\n\t      { acc = acc.dbl(); }\n\t    doubles.push(acc);\n\t  }\n\t  return {\n\t    step: step,\n\t    points: doubles\n\t  };\n\t};\n\n\tBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n\t  if (this.precomputed && this.precomputed.naf)\n\t    { return this.precomputed.naf; }\n\n\t  var res = [ this ];\n\t  var max = (1 << wnd) - 1;\n\t  var dbl = max === 1 ? null : this.dbl();\n\t  for (var i = 1; i < max; i++)\n\t    { res[i] = res[i - 1].add(dbl); }\n\t  return {\n\t    wnd: wnd,\n\t    points: res\n\t  };\n\t};\n\n\tBasePoint.prototype._getBeta = function _getBeta() {\n\t  return null;\n\t};\n\n\tBasePoint.prototype.dblp = function dblp(k) {\n\t  var r = this;\n\t  for (var i = 0; i < k; i++)\n\t    { r = r.dbl(); }\n\t  return r;\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar elliptic = __webpack_require__(1);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction ShortCurve(conf) {\n\t  Base.call(this, 'short', conf);\n\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.tinv = this.two.redInvm();\n\n\t  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n\t  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n\t  // If the curve is endomorphic, precalculate beta and lambda\n\t  this.endo = this._getEndomorphism(conf);\n\t  this._endoWnafT1 = new Array(4);\n\t  this._endoWnafT2 = new Array(4);\n\t}\n\tinherits(ShortCurve, Base);\n\tmodule.exports = ShortCurve;\n\n\tShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n\t  // No efficient endomorphism\n\t  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n\t    { return; }\n\n\t  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n\t  var beta;\n\t  var lambda;\n\t  if (conf.beta) {\n\t    beta = new BN(conf.beta, 16).toRed(this.red);\n\t  } else {\n\t    var betas = this._getEndoRoots(this.p);\n\t    // Choose the smallest beta\n\t    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n\t    beta = beta.toRed(this.red);\n\t  }\n\t  if (conf.lambda) {\n\t    lambda = new BN(conf.lambda, 16);\n\t  } else {\n\t    // Choose the lambda that is matching selected beta\n\t    var lambdas = this._getEndoRoots(this.n);\n\t    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n\t      lambda = lambdas[0];\n\t    } else {\n\t      lambda = lambdas[1];\n\t      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n\t    }\n\t  }\n\n\t  // Get basis vectors, used for balanced length-two representation\n\t  var basis;\n\t  if (conf.basis) {\n\t    basis = conf.basis.map(function(vec) {\n\t      return {\n\t        a: new BN(vec.a, 16),\n\t        b: new BN(vec.b, 16)\n\t      };\n\t    });\n\t  } else {\n\t    basis = this._getEndoBasis(lambda);\n\t  }\n\n\t  return {\n\t    beta: beta,\n\t    lambda: lambda,\n\t    basis: basis\n\t  };\n\t};\n\n\tShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n\t  // Find roots of for x^2 + x + 1 in F\n\t  // Root = (-1 +- Sqrt(-3)) / 2\n\t  //\n\t  var red = num === this.p ? this.red : BN.mont(num);\n\t  var tinv = new BN(2).toRed(red).redInvm();\n\t  var ntinv = tinv.redNeg();\n\n\t  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n\t  var l1 = ntinv.redAdd(s).fromRed();\n\t  var l2 = ntinv.redSub(s).fromRed();\n\t  return [ l1, l2 ];\n\t};\n\n\tShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n\t  // aprxSqrt >= sqrt(this.n)\n\t  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n\t  // 3.74\n\t  // Run EGCD, until r(L + 1) < aprxSqrt\n\t  var u = lambda;\n\t  var v = this.n.clone();\n\t  var x1 = new BN(1);\n\t  var y1 = new BN(0);\n\t  var x2 = new BN(0);\n\t  var y2 = new BN(1);\n\n\t  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n\t  var a0;\n\t  var b0;\n\t  // First vector\n\t  var a1;\n\t  var b1;\n\t  // Second vector\n\t  var a2;\n\t  var b2;\n\n\t  var prevR;\n\t  var i = 0;\n\t  var r;\n\t  var x;\n\t  while (u.cmpn(0) !== 0) {\n\t    var q = v.div(u);\n\t    r = v.sub(q.mul(u));\n\t    x = x2.sub(q.mul(x1));\n\t    var y = y2.sub(q.mul(y1));\n\n\t    if (!a1 && r.cmp(aprxSqrt) < 0) {\n\t      a0 = prevR.neg();\n\t      b0 = x1;\n\t      a1 = r.neg();\n\t      b1 = x;\n\t    } else if (a1 && ++i === 2) {\n\t      break;\n\t    }\n\t    prevR = r;\n\n\t    v = u;\n\t    u = r;\n\t    x2 = x1;\n\t    x1 = x;\n\t    y2 = y1;\n\t    y1 = y;\n\t  }\n\t  a2 = r.neg();\n\t  b2 = x;\n\n\t  var len1 = a1.sqr().add(b1.sqr());\n\t  var len2 = a2.sqr().add(b2.sqr());\n\t  if (len2.cmp(len1) >= 0) {\n\t    a2 = a0;\n\t    b2 = b0;\n\t  }\n\n\t  // Normalize signs\n\t  if (a1.negative) {\n\t    a1 = a1.neg();\n\t    b1 = b1.neg();\n\t  }\n\t  if (a2.negative) {\n\t    a2 = a2.neg();\n\t    b2 = b2.neg();\n\t  }\n\n\t  return [\n\t    { a: a1, b: b1 },\n\t    { a: a2, b: b2 }\n\t  ];\n\t};\n\n\tShortCurve.prototype._endoSplit = function _endoSplit(k) {\n\t  var basis = this.endo.basis;\n\t  var v1 = basis[0];\n\t  var v2 = basis[1];\n\n\t  var c1 = v2.b.mul(k).divRound(this.n);\n\t  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n\t  var p1 = c1.mul(v1.a);\n\t  var p2 = c2.mul(v2.a);\n\t  var q1 = c1.mul(v1.b);\n\t  var q2 = c2.mul(v2.b);\n\n\t  // Calculate answer\n\t  var k1 = k.sub(p1).sub(p2);\n\t  var k2 = q1.add(q2).neg();\n\t  return { k1: k1, k2: k2 };\n\t};\n\n\tShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red)\n\t    { x = x.toRed(this.red); }\n\n\t  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  // XXX Is there any way to tell if the number is odd without converting it\n\t  // to non-red form?\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd)\n\t    { y = y.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tShortCurve.prototype.validate = function validate(point) {\n\t  if (point.inf)\n\t    { return true; }\n\n\t  var x = point.x;\n\t  var y = point.y;\n\n\t  var ax = this.a.redMul(x);\n\t  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n\t  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n\t};\n\n\tShortCurve.prototype._endoWnafMulAdd =\n\t    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n\t  var this$1 = this;\n\n\t  var npoints = this._endoWnafT1;\n\t  var ncoeffs = this._endoWnafT2;\n\t  for (var i = 0; i < points.length; i++) {\n\t    var split = this$1._endoSplit(coeffs[i]);\n\t    var p = points[i];\n\t    var beta = p._getBeta();\n\n\t    if (split.k1.negative) {\n\t      split.k1.ineg();\n\t      p = p.neg(true);\n\t    }\n\t    if (split.k2.negative) {\n\t      split.k2.ineg();\n\t      beta = beta.neg(true);\n\t    }\n\n\t    npoints[i * 2] = p;\n\t    npoints[i * 2 + 1] = beta;\n\t    ncoeffs[i * 2] = split.k1;\n\t    ncoeffs[i * 2 + 1] = split.k2;\n\t  }\n\t  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n\t  // Clean-up references to points and coefficients\n\t  for (var j = 0; j < i * 2; j++) {\n\t    npoints[j] = null;\n\t    ncoeffs[j] = null;\n\t  }\n\t  return res;\n\t};\n\n\tfunction Point(curve, x, y, isRed) {\n\t  Base.BasePoint.call(this, curve, 'affine');\n\t  if (x === null && y === null) {\n\t    this.x = null;\n\t    this.y = null;\n\t    this.inf = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    // Force redgomery representation when loading from JSON\n\t    if (isRed) {\n\t      this.x.forceRed(this.curve.red);\n\t      this.y.forceRed(this.curve.red);\n\t    }\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.y.red)\n\t      { this.y = this.y.toRed(this.curve.red); }\n\t    this.inf = false;\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tShortCurve.prototype.point = function point(x, y, isRed) {\n\t  return new Point(this, x, y, isRed);\n\t};\n\n\tShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n\t  return Point.fromJSON(this, obj, red);\n\t};\n\n\tPoint.prototype._getBeta = function _getBeta() {\n\t  if (!this.curve.endo)\n\t    { return; }\n\n\t  var pre = this.precomputed;\n\t  if (pre && pre.beta)\n\t    { return pre.beta; }\n\n\t  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n\t  if (pre) {\n\t    var curve = this.curve;\n\t    var endoMul = function(p) {\n\t      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n\t    };\n\t    pre.beta = beta;\n\t    beta.precomputed = {\n\t      beta: null,\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(endoMul)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(endoMul)\n\t      }\n\t    };\n\t  }\n\t  return beta;\n\t};\n\n\tPoint.prototype.toJSON = function toJSON() {\n\t  if (!this.precomputed)\n\t    { return [ this.x, this.y ]; }\n\n\t  return [ this.x, this.y, this.precomputed && {\n\t    doubles: this.precomputed.doubles && {\n\t      step: this.precomputed.doubles.step,\n\t      points: this.precomputed.doubles.points.slice(1)\n\t    },\n\t    naf: this.precomputed.naf && {\n\t      wnd: this.precomputed.naf.wnd,\n\t      points: this.precomputed.naf.points.slice(1)\n\t    }\n\t  } ];\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj, red) {\n\t  if (typeof obj === 'string')\n\t    { obj = JSON.parse(obj); }\n\t  var res = curve.point(obj[0], obj[1], red);\n\t  if (!obj[2])\n\t    { return res; }\n\n\t  function obj2point(obj) {\n\t    return curve.point(obj[0], obj[1], red);\n\t  }\n\n\t  var pre = obj[2];\n\t  res.precomputed = {\n\t    beta: null,\n\t    doubles: pre.doubles && {\n\t      step: pre.doubles.step,\n\t      points: [ res ].concat(pre.doubles.points.map(obj2point))\n\t    },\n\t    naf: pre.naf && {\n\t      wnd: pre.naf.wnd,\n\t      points: [ res ].concat(pre.naf.points.map(obj2point))\n\t    }\n\t  };\n\t  return res;\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  return this.inf;\n\t};\n\n\tPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.inf)\n\t    { return p; }\n\n\t  // P + O = P\n\t  if (p.inf)\n\t    { return this; }\n\n\t  // P + P = 2P\n\t  if (this.eq(p))\n\t    { return this.dbl(); }\n\n\t  // P + (-P) = O\n\t  if (this.neg().eq(p))\n\t    { return this.curve.point(null, null); }\n\n\t  // P + Q = O\n\t  if (this.x.cmp(p.x) === 0)\n\t    { return this.curve.point(null, null); }\n\n\t  var c = this.y.redSub(p.y);\n\t  if (c.cmpn(0) !== 0)\n\t    { c = c.redMul(this.x.redSub(p.x).redInvm()); }\n\t  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.inf)\n\t    { return this; }\n\n\t  // 2P = O\n\t  var ys1 = this.y.redAdd(this.y);\n\t  if (ys1.cmpn(0) === 0)\n\t    { return this.curve.point(null, null); }\n\n\t  var a = this.curve.a;\n\n\t  var x2 = this.x.redSqr();\n\t  var dyinv = ys1.redInvm();\n\t  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n\t  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n\t  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n\t  return this.curve.point(nx, ny);\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  return this.x.fromRed();\n\t};\n\n\tPoint.prototype.getY = function getY() {\n\t  return this.y.fromRed();\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  k = new BN(k, 16);\n\n\t  if (this._hasDoubles(k))\n\t    { return this.curve._fixedNafMul(this, k); }\n\t  else if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd([ this ], [ k ]); }\n\t  else\n\t    { return this.curve._wnafMul(this, k); }\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n\t  var points = [ this, p2 ];\n\t  var coeffs = [ k1, k2 ];\n\t  if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd(points, coeffs); }\n\t  else\n\t    { return this.curve._wnafMulAdd(1, points, coeffs, 2); }\n\t};\n\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n\t  var points = [ this, p2 ];\n\t  var coeffs = [ k1, k2 ];\n\t  if (this.curve.endo)\n\t    { return this.curve._endoWnafMulAdd(points, coeffs, true); }\n\t  else\n\t    { return this.curve._wnafMulAdd(1, points, coeffs, 2, true); }\n\t};\n\n\tPoint.prototype.eq = function eq(p) {\n\t  return this === p ||\n\t         this.inf === p.inf &&\n\t             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n\t};\n\n\tPoint.prototype.neg = function neg(_precompute) {\n\t  if (this.inf)\n\t    { return this; }\n\n\t  var res = this.curve.point(this.x, this.y.redNeg());\n\t  if (_precompute && this.precomputed) {\n\t    var pre = this.precomputed;\n\t    var negate = function(p) {\n\t      return p.neg();\n\t    };\n\t    res.precomputed = {\n\t      naf: pre.naf && {\n\t        wnd: pre.naf.wnd,\n\t        points: pre.naf.points.map(negate)\n\t      },\n\t      doubles: pre.doubles && {\n\t        step: pre.doubles.step,\n\t        points: pre.doubles.points.map(negate)\n\t      }\n\t    };\n\t  }\n\t  return res;\n\t};\n\n\tPoint.prototype.toJ = function toJ() {\n\t  if (this.inf)\n\t    { return this.curve.jpoint(null, null, null); }\n\n\t  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n\t  return res;\n\t};\n\n\tfunction JPoint(curve, x, y, z) {\n\t  Base.BasePoint.call(this, curve, 'jacobian');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.y = this.curve.one;\n\t    this.z = new BN(0);\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = new BN(z, 16);\n\t  }\n\t  if (!this.x.red)\n\t    { this.x = this.x.toRed(this.curve.red); }\n\t  if (!this.y.red)\n\t    { this.y = this.y.toRed(this.curve.red); }\n\t  if (!this.z.red)\n\t    { this.z = this.z.toRed(this.curve.red); }\n\n\t  this.zOne = this.z === this.curve.one;\n\t}\n\tinherits(JPoint, Base.BasePoint);\n\n\tShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n\t  return new JPoint(this, x, y, z);\n\t};\n\n\tJPoint.prototype.toP = function toP() {\n\t  if (this.isInfinity())\n\t    { return this.curve.point(null, null); }\n\n\t  var zinv = this.z.redInvm();\n\t  var zinv2 = zinv.redSqr();\n\t  var ax = this.x.redMul(zinv2);\n\t  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n\t  return this.curve.point(ax, ay);\n\t};\n\n\tJPoint.prototype.neg = function neg() {\n\t  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n\t};\n\n\tJPoint.prototype.add = function add(p) {\n\t  // O + P = P\n\t  if (this.isInfinity())\n\t    { return p; }\n\n\t  // P + O = P\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  // 12M + 4S + 7A\n\t  var pz2 = p.z.redSqr();\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x.redMul(pz2);\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y.redMul(pz2.redMul(p.z));\n\t  var s2 = p.y.redMul(z2.redMul(this.z));\n\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0)\n\t      { return this.curve.jpoint(null, null, null); }\n\t    else\n\t      { return this.dbl(); }\n\t  }\n\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(p.z).redMul(h);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.mixedAdd = function mixedAdd(p) {\n\t  // O + P = P\n\t  if (this.isInfinity())\n\t    { return p.toJ(); }\n\n\t  // P + O = P\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  // 8M + 3S + 7A\n\t  var z2 = this.z.redSqr();\n\t  var u1 = this.x;\n\t  var u2 = p.x.redMul(z2);\n\t  var s1 = this.y;\n\t  var s2 = p.y.redMul(z2).redMul(this.z);\n\n\t  var h = u1.redSub(u2);\n\t  var r = s1.redSub(s2);\n\t  if (h.cmpn(0) === 0) {\n\t    if (r.cmpn(0) !== 0)\n\t      { return this.curve.jpoint(null, null, null); }\n\t    else\n\t      { return this.dbl(); }\n\t  }\n\n\t  var h2 = h.redSqr();\n\t  var h3 = h2.redMul(h);\n\t  var v = u1.redMul(h2);\n\n\t  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n\t  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n\t  var nz = this.z.redMul(h);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.dblp = function dblp(pow) {\n\t  if (pow === 0)\n\t    { return this; }\n\t  if (this.isInfinity())\n\t    { return this; }\n\t  if (!pow)\n\t    { return this.dbl(); }\n\n\t  if (this.curve.zeroA || this.curve.threeA) {\n\t    var r = this;\n\t    for (var i = 0; i < pow; i++)\n\t      { r = r.dbl(); }\n\t    return r;\n\t  }\n\n\t  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n\t  // N = 1 => 6M + 6S + 9A\n\t  var a = this.curve.a;\n\t  var tinv = this.curve.tinv;\n\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\n\t  // Reuse results\n\t  var jyd = jy.redAdd(jy);\n\t  for (var i = 0; i < pow; i++) {\n\t    var jx2 = jx.redSqr();\n\t    var jyd2 = jyd.redSqr();\n\t    var jyd4 = jyd2.redSqr();\n\t    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n\t    var t1 = jx.redMul(jyd2);\n\t    var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t    var t2 = t1.redISub(nx);\n\t    var dny = c.redMul(t2);\n\t    dny = dny.redIAdd(dny).redISub(jyd4);\n\t    var nz = jyd.redMul(jz);\n\t    if (i + 1 < pow)\n\t      { jz4 = jz4.redMul(jyd4); }\n\n\t    jx = nx;\n\t    jz = nz;\n\t    jyd = dny;\n\t  }\n\n\t  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n\t};\n\n\tJPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity())\n\t    { return this; }\n\n\t  if (this.curve.zeroA)\n\t    { return this._zeroDbl(); }\n\t  else if (this.curve.threeA)\n\t    { return this._threeDbl(); }\n\t  else\n\t    { return this._dbl(); }\n\t};\n\n\tJPoint.prototype._zeroDbl = function _zeroDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 14A\n\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a; a = 0\n\t    var m = xx.redAdd(xx).redIAdd(xx);\n\t    // T = M ^ 2 - 2*S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\n\t    // 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2*Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n\t    //     #doubling-dbl-2009-l\n\t    // 2M + 5S + 13A\n\n\t    // A = X1^2\n\t    var a = this.x.redSqr();\n\t    // B = Y1^2\n\t    var b = this.y.redSqr();\n\t    // C = B^2\n\t    var c = b.redSqr();\n\t    // D = 2 * ((X1 + B)^2 - A - C)\n\t    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n\t    d = d.redIAdd(d);\n\t    // E = 3 * A\n\t    var e = a.redAdd(a).redIAdd(a);\n\t    // F = E^2\n\t    var f = e.redSqr();\n\n\t    // 8 * C\n\t    var c8 = c.redIAdd(c);\n\t    c8 = c8.redIAdd(c8);\n\t    c8 = c8.redIAdd(c8);\n\n\t    // X3 = F - 2 * D\n\t    nx = f.redISub(d).redISub(d);\n\t    // Y3 = E * (D - X3) - 8 * C\n\t    ny = e.redMul(d.redISub(nx)).redISub(c8);\n\t    // Z3 = 2 * Y1 * Z1\n\t    nz = this.y.redMul(this.z);\n\t    nz = nz.redIAdd(nz);\n\t  }\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype._threeDbl = function _threeDbl() {\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  // Z = 1\n\t  if (this.zOne) {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n\t    //     #doubling-mdbl-2007-bl\n\t    // 1M + 5S + 15A\n\n\t    // XX = X1^2\n\t    var xx = this.x.redSqr();\n\t    // YY = Y1^2\n\t    var yy = this.y.redSqr();\n\t    // YYYY = YY^2\n\t    var yyyy = yy.redSqr();\n\t    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n\t    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t    s = s.redIAdd(s);\n\t    // M = 3 * XX + a\n\t    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n\t    // T = M^2 - 2 * S\n\t    var t = m.redSqr().redISub(s).redISub(s);\n\t    // X3 = T\n\t    nx = t;\n\t    // Y3 = M * (S - T) - 8 * YYYY\n\t    var yyyy8 = yyyy.redIAdd(yyyy);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    yyyy8 = yyyy8.redIAdd(yyyy8);\n\t    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n\t    // Z3 = 2 * Y1\n\t    nz = this.y.redAdd(this.y);\n\t  } else {\n\t    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n\t    // 3M + 5S\n\n\t    // delta = Z1^2\n\t    var delta = this.z.redSqr();\n\t    // gamma = Y1^2\n\t    var gamma = this.y.redSqr();\n\t    // beta = X1 * gamma\n\t    var beta = this.x.redMul(gamma);\n\t    // alpha = 3 * (X1 - delta) * (X1 + delta)\n\t    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n\t    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n\t    // X3 = alpha^2 - 8 * beta\n\t    var beta4 = beta.redIAdd(beta);\n\t    beta4 = beta4.redIAdd(beta4);\n\t    var beta8 = beta4.redAdd(beta4);\n\t    nx = alpha.redSqr().redISub(beta8);\n\t    // Z3 = (Y1 + Z1)^2 - gamma - delta\n\t    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n\t    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n\t    var ggamma8 = gamma.redSqr();\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ggamma8 = ggamma8.redIAdd(ggamma8);\n\t    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n\t  }\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype._dbl = function _dbl() {\n\t  var a = this.curve.a;\n\n\t  // 4M + 6S + 10A\n\t  var jx = this.x;\n\t  var jy = this.y;\n\t  var jz = this.z;\n\t  var jz4 = jz.redSqr().redSqr();\n\n\t  var jx2 = jx.redSqr();\n\t  var jy2 = jy.redSqr();\n\n\t  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n\t  var jxd4 = jx.redAdd(jx);\n\t  jxd4 = jxd4.redIAdd(jxd4);\n\t  var t1 = jxd4.redMul(jy2);\n\t  var nx = c.redSqr().redISub(t1.redAdd(t1));\n\t  var t2 = t1.redISub(nx);\n\n\t  var jyd8 = jy2.redSqr();\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  jyd8 = jyd8.redIAdd(jyd8);\n\t  var ny = c.redMul(t2).redISub(jyd8);\n\t  var nz = jy.redAdd(jy).redMul(jz);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.trpl = function trpl() {\n\t  if (!this.curve.zeroA)\n\t    { return this.dbl().add(this); }\n\n\t  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n\t  // 5M + 10S + ...\n\n\t  // XX = X1^2\n\t  var xx = this.x.redSqr();\n\t  // YY = Y1^2\n\t  var yy = this.y.redSqr();\n\t  // ZZ = Z1^2\n\t  var zz = this.z.redSqr();\n\t  // YYYY = YY^2\n\t  var yyyy = yy.redSqr();\n\t  // M = 3 * XX + a * ZZ2; a = 0\n\t  var m = xx.redAdd(xx).redIAdd(xx);\n\t  // MM = M^2\n\t  var mm = m.redSqr();\n\t  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n\t  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n\t  e = e.redIAdd(e);\n\t  e = e.redAdd(e).redIAdd(e);\n\t  e = e.redISub(mm);\n\t  // EE = E^2\n\t  var ee = e.redSqr();\n\t  // T = 16*YYYY\n\t  var t = yyyy.redIAdd(yyyy);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  t = t.redIAdd(t);\n\t  // U = (M + E)^2 - MM - EE - T\n\t  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n\t  // X3 = 4 * (X1 * EE - 4 * YY * U)\n\t  var yyu4 = yy.redMul(u);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  yyu4 = yyu4.redIAdd(yyu4);\n\t  var nx = this.x.redMul(ee).redISub(yyu4);\n\t  nx = nx.redIAdd(nx);\n\t  nx = nx.redIAdd(nx);\n\t  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n\t  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  ny = ny.redIAdd(ny);\n\t  // Z3 = (Z1 + E)^2 - ZZ - EE\n\t  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n\t  return this.curve.jpoint(nx, ny, nz);\n\t};\n\n\tJPoint.prototype.mul = function mul(k, kbase) {\n\t  k = new BN(k, kbase);\n\n\t  return this.curve._wnafMul(this, k);\n\t};\n\n\tJPoint.prototype.eq = function eq(p) {\n\t  if (p.type === 'affine')\n\t    { return this.eq(p.toJ()); }\n\n\t  if (this === p)\n\t    { return true; }\n\n\t  // x1 * z2^2 == x2 * z1^2\n\t  var z2 = this.z.redSqr();\n\t  var pz2 = p.z.redSqr();\n\t  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n\t    { return false; }\n\n\t  // y1 * z2^3 == y2 * z1^3\n\t  var z3 = z2.redMul(this.z);\n\t  var pz3 = pz2.redMul(p.z);\n\t  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n\t};\n\n\tJPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var this$1 = this;\n\n\t  var zs = this.z.redSqr();\n\t  var rx = x.toRed(this.curve.red).redMul(zs);\n\t  if (this.x.cmp(rx) === 0)\n\t    { return true; }\n\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(zs);\n\t  for (;;) {\n\t    xc.iadd(this$1.curve.n);\n\t    if (xc.cmp(this$1.curve.p) >= 0)\n\t      { return false; }\n\n\t    rx.redIAdd(t);\n\t    if (this$1.x.cmp(rx) === 0)\n\t      { return true; }\n\t  }\n\t  return false;\n\t};\n\n\tJPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC JPoint Infinity>'; }\n\t  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n\t      ' y: ' + this.y.toString(16, 2) +\n\t      ' z: ' + this.z.toString(16, 2) + '>';\n\t};\n\n\tJPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  };\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\n\tfunction MontCurve(conf) {\n\t  Base.call(this, 'mont', conf);\n\n\t  this.a = new BN(conf.a, 16).toRed(this.red);\n\t  this.b = new BN(conf.b, 16).toRed(this.red);\n\t  this.i4 = new BN(4).toRed(this.red).redInvm();\n\t  this.two = new BN(2).toRed(this.red);\n\t  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n\t}\n\tinherits(MontCurve, Base);\n\tmodule.exports = MontCurve;\n\n\tMontCurve.prototype.validate = function validate(point) {\n\t  var x = point.normalize().x;\n\t  var x2 = x.redSqr();\n\t  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n\t  var y = rhs.redSqrt();\n\n\t  return y.redSqr().cmp(rhs) === 0;\n\t};\n\n\tfunction Point(curve, x, z) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && z === null) {\n\t    this.x = this.curve.one;\n\t    this.z = this.curve.zero;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.z = new BN(z, 16);\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.z.red)\n\t      { this.z = this.z.toRed(this.curve.red); }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n\t  return this.point(utils.toArray(bytes, enc), 1);\n\t};\n\n\tMontCurve.prototype.point = function point(x, z) {\n\t  return new Point(this, x, z);\n\t};\n\n\tMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\n\tPoint.prototype.precompute = function precompute() {\n\t  // No-op\n\t};\n\n\tPoint.prototype._encode = function _encode() {\n\t  return this.getX().toArray('be', this.curve.p.byteLength());\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1] || curve.one);\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.z.cmpn(0) === 0;\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n\t  // 2M + 2S + 4A\n\n\t  // A = X1 + Z1\n\t  var a = this.x.redAdd(this.z);\n\t  // AA = A^2\n\t  var aa = a.redSqr();\n\t  // B = X1 - Z1\n\t  var b = this.x.redSub(this.z);\n\t  // BB = B^2\n\t  var bb = b.redSqr();\n\t  // C = AA - BB\n\t  var c = aa.redSub(bb);\n\t  // X3 = AA * BB\n\t  var nx = aa.redMul(bb);\n\t  // Z3 = C * (BB + A24 * C)\n\t  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n\t  return this.curve.point(nx, nz);\n\t};\n\n\tPoint.prototype.add = function add() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.diffAdd = function diffAdd(p, diff) {\n\t  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n\t  // 4M + 2S + 6A\n\n\t  // A = X2 + Z2\n\t  var a = this.x.redAdd(this.z);\n\t  // B = X2 - Z2\n\t  var b = this.x.redSub(this.z);\n\t  // C = X3 + Z3\n\t  var c = p.x.redAdd(p.z);\n\t  // D = X3 - Z3\n\t  var d = p.x.redSub(p.z);\n\t  // DA = D * A\n\t  var da = d.redMul(a);\n\t  // CB = C * B\n\t  var cb = c.redMul(b);\n\t  // X5 = Z1 * (DA + CB)^2\n\t  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n\t  // Z5 = X1 * (DA - CB)^2\n\t  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n\t  return this.curve.point(nx, nz);\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  var t = k.clone();\n\t  var a = this; // (N / 2) * Q + Q\n\t  var b = this.curve.point(null, null); // (N / 2) * Q\n\t  var c = this; // Q\n\n\t  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n\t    { bits.push(t.andln(1)); }\n\n\t  for (var i = bits.length - 1; i >= 0; i--) {\n\t    if (bits[i] === 0) {\n\t      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n\t      a = a.diffAdd(b, c);\n\t      // N * Q = 2 * ((N / 2) * Q + Q))\n\t      b = b.dbl();\n\t    } else {\n\t      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n\t      b = a.diffAdd(b, c);\n\t      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n\t      a = a.dbl();\n\t    }\n\t  }\n\t  return b;\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.jumlAdd = function jumlAdd() {\n\t  throw new Error('Not supported on Montgomery curve');\n\t};\n\n\tPoint.prototype.eq = function eq(other) {\n\t  return this.getX().cmp(other.getX()) === 0;\n\t};\n\n\tPoint.prototype.normalize = function normalize() {\n\t  this.x = this.x.redMul(this.z.redInvm());\n\t  this.z = this.curve.one;\n\t  return this;\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  // Normalize coordinates\n\t  this.normalize();\n\n\t  return this.x.fromRed();\n\t};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curve = __webpack_require__(11);\n\tvar elliptic = __webpack_require__(1);\n\tvar BN = __webpack_require__(4);\n\tvar inherits = __webpack_require__(14);\n\tvar Base = curve.base;\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction EdwardsCurve(conf) {\n\t  // NOTE: Important as we are creating point in Base.call()\n\t  this.twisted = (conf.a | 0) !== 1;\n\t  this.mOneA = this.twisted && (conf.a | 0) === -1;\n\t  this.extended = this.mOneA;\n\n\t  Base.call(this, 'edwards', conf);\n\n\t  this.a = new BN(conf.a, 16).umod(this.red.m);\n\t  this.a = this.a.toRed(this.red);\n\t  this.c = new BN(conf.c, 16).toRed(this.red);\n\t  this.c2 = this.c.redSqr();\n\t  this.d = new BN(conf.d, 16).toRed(this.red);\n\t  this.dd = this.d.redAdd(this.d);\n\n\t  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n\t  this.oneC = (conf.c | 0) === 1;\n\t}\n\tinherits(EdwardsCurve, Base);\n\tmodule.exports = EdwardsCurve;\n\n\tEdwardsCurve.prototype._mulA = function _mulA(num) {\n\t  if (this.mOneA)\n\t    { return num.redNeg(); }\n\t  else\n\t    { return this.a.redMul(num); }\n\t};\n\n\tEdwardsCurve.prototype._mulC = function _mulC(num) {\n\t  if (this.oneC)\n\t    { return num; }\n\t  else\n\t    { return this.c.redMul(num); }\n\t};\n\n\t// Just for compatibility with Short curve\n\tEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n\t  return this.point(x, y, z, t);\n\t};\n\n\tEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n\t  x = new BN(x, 16);\n\t  if (!x.red)\n\t    { x = x.toRed(this.red); }\n\n\t  var x2 = x.redSqr();\n\t  var rhs = this.c2.redSub(this.a.redMul(x2));\n\t  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n\t  var y2 = rhs.redMul(lhs.redInvm());\n\t  var y = y2.redSqrt();\n\t  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  var isOdd = y.fromRed().isOdd();\n\t  if (odd && !isOdd || !odd && isOdd)\n\t    { y = y.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n\t  y = new BN(y, 16);\n\t  if (!y.red)\n\t    { y = y.toRed(this.red); }\n\n\t  // x^2 = (y^2 - 1) / (d y^2 + 1)\n\t  var y2 = y.redSqr();\n\t  var lhs = y2.redSub(this.one);\n\t  var rhs = y2.redMul(this.d).redAdd(this.one);\n\t  var x2 = lhs.redMul(rhs.redInvm());\n\n\t  if (x2.cmp(this.zero) === 0) {\n\t    if (odd)\n\t      { throw new Error('invalid point'); }\n\t    else\n\t      { return this.point(this.zero, y); }\n\t  }\n\n\t  var x = x2.redSqrt();\n\t  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n\t    { throw new Error('invalid point'); }\n\n\t  if (x.isOdd() !== odd)\n\t    { x = x.redNeg(); }\n\n\t  return this.point(x, y);\n\t};\n\n\tEdwardsCurve.prototype.validate = function validate(point) {\n\t  if (point.isInfinity())\n\t    { return true; }\n\n\t  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n\t  point.normalize();\n\n\t  var x2 = point.x.redSqr();\n\t  var y2 = point.y.redSqr();\n\t  var lhs = x2.redMul(this.a).redAdd(y2);\n\t  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n\t  return lhs.cmp(rhs) === 0;\n\t};\n\n\tfunction Point(curve, x, y, z, t) {\n\t  Base.BasePoint.call(this, curve, 'projective');\n\t  if (x === null && y === null && z === null) {\n\t    this.x = this.curve.zero;\n\t    this.y = this.curve.one;\n\t    this.z = this.curve.one;\n\t    this.t = this.curve.zero;\n\t    this.zOne = true;\n\t  } else {\n\t    this.x = new BN(x, 16);\n\t    this.y = new BN(y, 16);\n\t    this.z = z ? new BN(z, 16) : this.curve.one;\n\t    this.t = t && new BN(t, 16);\n\t    if (!this.x.red)\n\t      { this.x = this.x.toRed(this.curve.red); }\n\t    if (!this.y.red)\n\t      { this.y = this.y.toRed(this.curve.red); }\n\t    if (!this.z.red)\n\t      { this.z = this.z.toRed(this.curve.red); }\n\t    if (this.t && !this.t.red)\n\t      { this.t = this.t.toRed(this.curve.red); }\n\t    this.zOne = this.z === this.curve.one;\n\n\t    // Use extended coordinates\n\t    if (this.curve.extended && !this.t) {\n\t      this.t = this.x.redMul(this.y);\n\t      if (!this.zOne)\n\t        { this.t = this.t.redMul(this.z.redInvm()); }\n\t    }\n\t  }\n\t}\n\tinherits(Point, Base.BasePoint);\n\n\tEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n\t  return Point.fromJSON(this, obj);\n\t};\n\n\tEdwardsCurve.prototype.point = function point(x, y, z, t) {\n\t  return new Point(this, x, y, z, t);\n\t};\n\n\tPoint.fromJSON = function fromJSON(curve, obj) {\n\t  return new Point(curve, obj[0], obj[1], obj[2]);\n\t};\n\n\tPoint.prototype.inspect = function inspect() {\n\t  if (this.isInfinity())\n\t    { return '<EC Point Infinity>'; }\n\t  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n\t      ' y: ' + this.y.fromRed().toString(16, 2) +\n\t      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n\t};\n\n\tPoint.prototype.isInfinity = function isInfinity() {\n\t  // XXX This code assumes that zero is always zero in red\n\t  return this.x.cmpn(0) === 0 &&\n\t         this.y.cmp(this.z) === 0;\n\t};\n\n\tPoint.prototype._extDbl = function _extDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #doubling-dbl-2008-hwcd\n\t  // 4M + 4S\n\n\t  // A = X1^2\n\t  var a = this.x.redSqr();\n\t  // B = Y1^2\n\t  var b = this.y.redSqr();\n\t  // C = 2 * Z1^2\n\t  var c = this.z.redSqr();\n\t  c = c.redIAdd(c);\n\t  // D = a * A\n\t  var d = this.curve._mulA(a);\n\t  // E = (X1 + Y1)^2 - A - B\n\t  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n\t  // G = D + B\n\t  var g = d.redAdd(b);\n\t  // F = G - C\n\t  var f = g.redSub(c);\n\t  // H = D - B\n\t  var h = d.redSub(b);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\n\tPoint.prototype._projDbl = function _projDbl() {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #doubling-dbl-2008-bbjlp\n\t  //     #doubling-dbl-2007-bl\n\t  // and others\n\t  // Generally 3M + 4S or 2M + 4S\n\n\t  // B = (X1 + Y1)^2\n\t  var b = this.x.redAdd(this.y).redSqr();\n\t  // C = X1^2\n\t  var c = this.x.redSqr();\n\t  // D = Y1^2\n\t  var d = this.y.redSqr();\n\n\t  var nx;\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // E = a * C\n\t    var e = this.curve._mulA(c);\n\t    // F = E + D\n\t    var f = e.redAdd(d);\n\t    if (this.zOne) {\n\t      // X3 = (B - C - D) * (F - 2)\n\t      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F^2 - 2 * F\n\t      nz = f.redSqr().redSub(f).redSub(f);\n\t    } else {\n\t      // H = Z1^2\n\t      var h = this.z.redSqr();\n\t      // J = F - 2 * H\n\t      var j = f.redSub(h).redISub(h);\n\t      // X3 = (B-C-D)*J\n\t      nx = b.redSub(c).redISub(d).redMul(j);\n\t      // Y3 = F * (E - D)\n\t      ny = f.redMul(e.redSub(d));\n\t      // Z3 = F * J\n\t      nz = f.redMul(j);\n\t    }\n\t  } else {\n\t    // E = C + D\n\t    var e = c.redAdd(d);\n\t    // H = (c * Z1)^2\n\t    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n\t    // J = E - 2 * H\n\t    var j = e.redSub(h).redSub(h);\n\t    // X3 = c * (B - E) * J\n\t    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n\t    // Y3 = c * E * (C - D)\n\t    ny = this.curve._mulC(e).redMul(c.redISub(d));\n\t    // Z3 = E * J\n\t    nz = e.redMul(j);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\n\tPoint.prototype.dbl = function dbl() {\n\t  if (this.isInfinity())\n\t    { return this; }\n\n\t  // Double in extended coordinates\n\t  if (this.curve.extended)\n\t    { return this._extDbl(); }\n\t  else\n\t    { return this._projDbl(); }\n\t};\n\n\tPoint.prototype._extAdd = function _extAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n\t  //     #addition-add-2008-hwcd-3\n\t  // 8M\n\n\t  // A = (Y1 - X1) * (Y2 - X2)\n\t  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n\t  // B = (Y1 + X1) * (Y2 + X2)\n\t  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n\t  // C = T1 * k * T2\n\t  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n\t  // D = Z1 * 2 * Z2\n\t  var d = this.z.redMul(p.z.redAdd(p.z));\n\t  // E = B - A\n\t  var e = b.redSub(a);\n\t  // F = D - C\n\t  var f = d.redSub(c);\n\t  // G = D + C\n\t  var g = d.redAdd(c);\n\t  // H = B + A\n\t  var h = b.redAdd(a);\n\t  // X3 = E * F\n\t  var nx = e.redMul(f);\n\t  // Y3 = G * H\n\t  var ny = g.redMul(h);\n\t  // T3 = E * H\n\t  var nt = e.redMul(h);\n\t  // Z3 = F * G\n\t  var nz = f.redMul(g);\n\t  return this.curve.point(nx, ny, nz, nt);\n\t};\n\n\tPoint.prototype._projAdd = function _projAdd(p) {\n\t  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n\t  //     #addition-add-2008-bbjlp\n\t  //     #addition-add-2007-bl\n\t  // 10M + 1S\n\n\t  // A = Z1 * Z2\n\t  var a = this.z.redMul(p.z);\n\t  // B = A^2\n\t  var b = a.redSqr();\n\t  // C = X1 * X2\n\t  var c = this.x.redMul(p.x);\n\t  // D = Y1 * Y2\n\t  var d = this.y.redMul(p.y);\n\t  // E = d * C * D\n\t  var e = this.curve.d.redMul(c).redMul(d);\n\t  // F = B - E\n\t  var f = b.redSub(e);\n\t  // G = B + E\n\t  var g = b.redAdd(e);\n\t  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n\t  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n\t  var nx = a.redMul(f).redMul(tmp);\n\t  var ny;\n\t  var nz;\n\t  if (this.curve.twisted) {\n\t    // Y3 = A * G * (D - a * C)\n\t    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n\t    // Z3 = F * G\n\t    nz = f.redMul(g);\n\t  } else {\n\t    // Y3 = A * G * (D - C)\n\t    ny = a.redMul(g).redMul(d.redSub(c));\n\t    // Z3 = c * F * G\n\t    nz = this.curve._mulC(f).redMul(g);\n\t  }\n\t  return this.curve.point(nx, ny, nz);\n\t};\n\n\tPoint.prototype.add = function add(p) {\n\t  if (this.isInfinity())\n\t    { return p; }\n\t  if (p.isInfinity())\n\t    { return this; }\n\n\t  if (this.curve.extended)\n\t    { return this._extAdd(p); }\n\t  else\n\t    { return this._projAdd(p); }\n\t};\n\n\tPoint.prototype.mul = function mul(k) {\n\t  if (this._hasDoubles(k))\n\t    { return this.curve._fixedNafMul(this, k); }\n\t  else\n\t    { return this.curve._wnafMul(this, k); }\n\t};\n\n\tPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n\t};\n\n\tPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n\t  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n\t};\n\n\tPoint.prototype.normalize = function normalize() {\n\t  if (this.zOne)\n\t    { return this; }\n\n\t  // Normalize coordinates\n\t  var zi = this.z.redInvm();\n\t  this.x = this.x.redMul(zi);\n\t  this.y = this.y.redMul(zi);\n\t  if (this.t)\n\t    { this.t = this.t.redMul(zi); }\n\t  this.z = this.curve.one;\n\t  this.zOne = true;\n\t  return this;\n\t};\n\n\tPoint.prototype.neg = function neg() {\n\t  return this.curve.point(this.x.redNeg(),\n\t                          this.y,\n\t                          this.z,\n\t                          this.t && this.t.redNeg());\n\t};\n\n\tPoint.prototype.getX = function getX() {\n\t  this.normalize();\n\t  return this.x.fromRed();\n\t};\n\n\tPoint.prototype.getY = function getY() {\n\t  this.normalize();\n\t  return this.y.fromRed();\n\t};\n\n\tPoint.prototype.eq = function eq(other) {\n\t  return this === other ||\n\t         this.getX().cmp(other.getX()) === 0 &&\n\t         this.getY().cmp(other.getY()) === 0;\n\t};\n\n\tPoint.prototype.eqXToP = function eqXToP(x) {\n\t  var this$1 = this;\n\n\t  var rx = x.toRed(this.curve.red).redMul(this.z);\n\t  if (this.x.cmp(rx) === 0)\n\t    { return true; }\n\n\t  var xc = x.clone();\n\t  var t = this.curve.redN.redMul(this.z);\n\t  for (;;) {\n\t    xc.iadd(this$1.curve.n);\n\t    if (xc.cmp(this$1.curve.p) >= 0)\n\t      { return false; }\n\n\t    rx.redIAdd(t);\n\t    if (this$1.x.cmp(rx) === 0)\n\t      { return true; }\n\t  }\n\t  return false;\n\t};\n\n\t// Compatibility with BaseCurve\n\tPoint.prototype.toP = Point.prototype.normalize;\n\tPoint.prototype.mixedAdd = Point.prototype.add;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar curves = exports;\n\n\tvar hash = __webpack_require__(18);\n\tvar elliptic = __webpack_require__(1);\n\n\tvar assert = elliptic.utils.assert;\n\n\tfunction PresetCurve(options) {\n\t  if (options.type === 'short')\n\t    { this.curve = new elliptic.curve.short(options); }\n\t  else if (options.type === 'edwards')\n\t    { this.curve = new elliptic.curve.edwards(options); }\n\t  else\n\t    { this.curve = new elliptic.curve.mont(options); }\n\t  this.g = this.curve.g;\n\t  this.n = this.curve.n;\n\t  this.hash = options.hash;\n\n\t  assert(this.g.validate(), 'Invalid curve');\n\t  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n\t}\n\tcurves.PresetCurve = PresetCurve;\n\n\tfunction defineCurve(name, options) {\n\t  Object.defineProperty(curves, name, {\n\t    configurable: true,\n\t    enumerable: true,\n\t    get: function() {\n\t      var curve = new PresetCurve(options);\n\t      Object.defineProperty(curves, name, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        value: curve\n\t      });\n\t      return curve;\n\t    }\n\t  });\n\t}\n\n\tdefineCurve('p192', {\n\t  type: 'short',\n\t  prime: 'p192',\n\t  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n\t  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n\t  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n\t    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n\t  ]\n\t});\n\n\tdefineCurve('p224', {\n\t  type: 'short',\n\t  prime: 'p224',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n\t  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n\t  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n\t  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n\t    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n\t  ]\n\t});\n\n\tdefineCurve('p256', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n\t  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n\t  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n\t  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n\t    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n\t  ]\n\t});\n\n\tdefineCurve('p384', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'fffffffe ffffffff 00000000 00000000 ffffffff',\n\t  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'fffffffe ffffffff 00000000 00000000 fffffffc',\n\t  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n\t     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n\t  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n\t     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n\t  hash: hash.sha384,\n\t  gRed: false,\n\t  g: [\n\t    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n\t    '5502f25d bf55296c 3a545e38 72760ab7',\n\t    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n\t    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n\t  ]\n\t});\n\n\tdefineCurve('p521', {\n\t  type: 'short',\n\t  prime: null,\n\t  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n\t  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n\t  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n\t     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n\t     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n\t  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n\t     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n\t     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n\t  hash: hash.sha512,\n\t  gRed: false,\n\t  g: [\n\t    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n\t    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n\t    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n\t    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n\t    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n\t    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n\t  ]\n\t});\n\n\tdefineCurve('curve25519', {\n\t  type: 'mont',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '76d06',\n\t  b: '1',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '9'\n\t  ]\n\t});\n\n\tdefineCurve('ed25519', {\n\t  type: 'edwards',\n\t  prime: 'p25519',\n\t  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n\t  a: '-1',\n\t  c: '1',\n\t  // -121665 * (121666^(-1)) (mod P)\n\t  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n\t  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n\t  hash: hash.sha256,\n\t  gRed: false,\n\t  g: [\n\t    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n\t    // 4/5\n\t    '6666666666666666666666666666666666666666666666666666666666666658'\n\t  ]\n\t});\n\n\tvar pre;\n\ttry {\n\t  pre = __webpack_require__(30);\n\t} catch (e) {\n\t  pre = undefined;\n\t}\n\n\tdefineCurve('secp256k1', {\n\t  type: 'short',\n\t  prime: 'k256',\n\t  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n\t  a: '0',\n\t  b: '7',\n\t  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n\t  h: '1',\n\t  hash: hash.sha256,\n\n\t  // Precomputed endomorphism\n\t  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n\t  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n\t  basis: [\n\t    {\n\t      a: '3086d221a7d46bcde86c90e49284eb15',\n\t      b: '-e4437ed6010e88286f547fa90abfe4c3'\n\t    },\n\t    {\n\t      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n\t      b: '3086d221a7d46bcde86c90e49284eb15'\n\t    }\n\t  ],\n\n\t  gRed: false,\n\t  g: [\n\t    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n\t    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n\t    pre\n\t  ]\n\t});\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar hash = exports;\n\n\thash.utils = __webpack_require__(19);\n\thash.common = __webpack_require__(20);\n\thash.sha = __webpack_require__(21);\n\thash.ripemd = __webpack_require__(28);\n\thash.hmac = __webpack_require__(29);\n\n\t// Proxy hash functions to the main object\n\thash.sha1 = hash.sha.sha1;\n\thash.sha256 = hash.sha.sha256;\n\thash.sha224 = hash.sha.sha224;\n\thash.sha384 = hash.sha.sha384;\n\thash.sha512 = hash.sha.sha512;\n\thash.ripemd160 = hash.ripemd.ripemd160;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar assert = __webpack_require__(7);\n\tvar inherits = __webpack_require__(14);\n\n\texports.inherits = inherits;\n\n\tfunction toArray(msg, enc) {\n\t  if (Array.isArray(msg))\n\t    { return msg.slice(); }\n\t  if (!msg)\n\t    { return []; }\n\t  var res = [];\n\t  if (typeof msg === 'string') {\n\t    if (!enc) {\n\t      for (var i = 0; i < msg.length; i++) {\n\t        var c = msg.charCodeAt(i);\n\t        var hi = c >> 8;\n\t        var lo = c & 0xff;\n\t        if (hi)\n\t          { res.push(hi, lo); }\n\t        else\n\t          { res.push(lo); }\n\t      }\n\t    } else if (enc === 'hex') {\n\t      msg = msg.replace(/[^a-z0-9]+/ig, '');\n\t      if (msg.length % 2 !== 0)\n\t        { msg = '0' + msg; }\n\t      for (i = 0; i < msg.length; i += 2)\n\t        { res.push(parseInt(msg[i] + msg[i + 1], 16)); }\n\t    }\n\t  } else {\n\t    for (i = 0; i < msg.length; i++)\n\t      { res[i] = msg[i] | 0; }\n\t  }\n\t  return res;\n\t}\n\texports.toArray = toArray;\n\n\tfunction toHex(msg) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++)\n\t    { res += zero2(msg[i].toString(16)); }\n\t  return res;\n\t}\n\texports.toHex = toHex;\n\n\tfunction htonl(w) {\n\t  var res = (w >>> 24) |\n\t            ((w >>> 8) & 0xff00) |\n\t            ((w << 8) & 0xff0000) |\n\t            ((w & 0xff) << 24);\n\t  return res >>> 0;\n\t}\n\texports.htonl = htonl;\n\n\tfunction toHex32(msg, endian) {\n\t  var res = '';\n\t  for (var i = 0; i < msg.length; i++) {\n\t    var w = msg[i];\n\t    if (endian === 'little')\n\t      { w = htonl(w); }\n\t    res += zero8(w.toString(16));\n\t  }\n\t  return res;\n\t}\n\texports.toHex32 = toHex32;\n\n\tfunction zero2(word) {\n\t  if (word.length === 1)\n\t    { return '0' + word; }\n\t  else\n\t    { return word; }\n\t}\n\texports.zero2 = zero2;\n\n\tfunction zero8(word) {\n\t  if (word.length === 7)\n\t    { return '0' + word; }\n\t  else if (word.length === 6)\n\t    { return '00' + word; }\n\t  else if (word.length === 5)\n\t    { return '000' + word; }\n\t  else if (word.length === 4)\n\t    { return '0000' + word; }\n\t  else if (word.length === 3)\n\t    { return '00000' + word; }\n\t  else if (word.length === 2)\n\t    { return '000000' + word; }\n\t  else if (word.length === 1)\n\t    { return '0000000' + word; }\n\t  else\n\t    { return word; }\n\t}\n\texports.zero8 = zero8;\n\n\tfunction join32(msg, start, end, endian) {\n\t  var len = end - start;\n\t  assert(len % 4 === 0);\n\t  var res = new Array(len / 4);\n\t  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n\t    var w;\n\t    if (endian === 'big')\n\t      { w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3]; }\n\t    else\n\t      { w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k]; }\n\t    res[i] = w >>> 0;\n\t  }\n\t  return res;\n\t}\n\texports.join32 = join32;\n\n\tfunction split32(msg, endian) {\n\t  var res = new Array(msg.length * 4);\n\t  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n\t    var m = msg[i];\n\t    if (endian === 'big') {\n\t      res[k] = m >>> 24;\n\t      res[k + 1] = (m >>> 16) & 0xff;\n\t      res[k + 2] = (m >>> 8) & 0xff;\n\t      res[k + 3] = m & 0xff;\n\t    } else {\n\t      res[k + 3] = m >>> 24;\n\t      res[k + 2] = (m >>> 16) & 0xff;\n\t      res[k + 1] = (m >>> 8) & 0xff;\n\t      res[k] = m & 0xff;\n\t    }\n\t  }\n\t  return res;\n\t}\n\texports.split32 = split32;\n\n\tfunction rotr32(w, b) {\n\t  return (w >>> b) | (w << (32 - b));\n\t}\n\texports.rotr32 = rotr32;\n\n\tfunction rotl32(w, b) {\n\t  return (w << b) | (w >>> (32 - b));\n\t}\n\texports.rotl32 = rotl32;\n\n\tfunction sum32(a, b) {\n\t  return (a + b) >>> 0;\n\t}\n\texports.sum32 = sum32;\n\n\tfunction sum32_3(a, b, c) {\n\t  return (a + b + c) >>> 0;\n\t}\n\texports.sum32_3 = sum32_3;\n\n\tfunction sum32_4(a, b, c, d) {\n\t  return (a + b + c + d) >>> 0;\n\t}\n\texports.sum32_4 = sum32_4;\n\n\tfunction sum32_5(a, b, c, d, e) {\n\t  return (a + b + c + d + e) >>> 0;\n\t}\n\texports.sum32_5 = sum32_5;\n\n\tfunction sum64(buf, pos, ah, al) {\n\t  var bh = buf[pos];\n\t  var bl = buf[pos + 1];\n\n\t  var lo = (al + bl) >>> 0;\n\t  var hi = (lo < al ? 1 : 0) + ah + bh;\n\t  buf[pos] = hi >>> 0;\n\t  buf[pos + 1] = lo;\n\t}\n\texports.sum64 = sum64;\n\n\tfunction sum64_hi(ah, al, bh, bl) {\n\t  var lo = (al + bl) >>> 0;\n\t  var hi = (lo < al ? 1 : 0) + ah + bh;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_hi = sum64_hi;\n\n\tfunction sum64_lo(ah, al, bh, bl) {\n\t  var lo = al + bl;\n\t  return lo >>> 0;\n\t}\n\texports.sum64_lo = sum64_lo;\n\n\tfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n\t  var carry = 0;\n\t  var lo = al;\n\t  lo = (lo + bl) >>> 0;\n\t  carry += lo < al ? 1 : 0;\n\t  lo = (lo + cl) >>> 0;\n\t  carry += lo < cl ? 1 : 0;\n\t  lo = (lo + dl) >>> 0;\n\t  carry += lo < dl ? 1 : 0;\n\n\t  var hi = ah + bh + ch + dh + carry;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_4_hi = sum64_4_hi;\n\n\tfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n\t  var lo = al + bl + cl + dl;\n\t  return lo >>> 0;\n\t}\n\texports.sum64_4_lo = sum64_4_lo;\n\n\tfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n\t  var carry = 0;\n\t  var lo = al;\n\t  lo = (lo + bl) >>> 0;\n\t  carry += lo < al ? 1 : 0;\n\t  lo = (lo + cl) >>> 0;\n\t  carry += lo < cl ? 1 : 0;\n\t  lo = (lo + dl) >>> 0;\n\t  carry += lo < dl ? 1 : 0;\n\t  lo = (lo + el) >>> 0;\n\t  carry += lo < el ? 1 : 0;\n\n\t  var hi = ah + bh + ch + dh + eh + carry;\n\t  return hi >>> 0;\n\t}\n\texports.sum64_5_hi = sum64_5_hi;\n\n\tfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n\t  var lo = al + bl + cl + dl + el;\n\n\t  return lo >>> 0;\n\t}\n\texports.sum64_5_lo = sum64_5_lo;\n\n\tfunction rotr64_hi(ah, al, num) {\n\t  var r = (al << (32 - num)) | (ah >>> num);\n\t  return r >>> 0;\n\t}\n\texports.rotr64_hi = rotr64_hi;\n\n\tfunction rotr64_lo(ah, al, num) {\n\t  var r = (ah << (32 - num)) | (al >>> num);\n\t  return r >>> 0;\n\t}\n\texports.rotr64_lo = rotr64_lo;\n\n\tfunction shr64_hi(ah, al, num) {\n\t  return ah >>> num;\n\t}\n\texports.shr64_hi = shr64_hi;\n\n\tfunction shr64_lo(ah, al, num) {\n\t  var r = (ah << (32 - num)) | (al >>> num);\n\t  return r >>> 0;\n\t}\n\texports.shr64_lo = shr64_lo;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar assert = __webpack_require__(7);\n\n\tfunction BlockHash() {\n\t  this.pending = null;\n\t  this.pendingTotal = 0;\n\t  this.blockSize = this.constructor.blockSize;\n\t  this.outSize = this.constructor.outSize;\n\t  this.hmacStrength = this.constructor.hmacStrength;\n\t  this.padLength = this.constructor.padLength / 8;\n\t  this.endian = 'big';\n\n\t  this._delta8 = this.blockSize / 8;\n\t  this._delta32 = this.blockSize / 32;\n\t}\n\texports.BlockHash = BlockHash;\n\n\tBlockHash.prototype.update = function update(msg, enc) {\n\t  var this$1 = this;\n\n\t  // Convert message to array, pad it, and join into 32bit blocks\n\t  msg = utils.toArray(msg, enc);\n\t  if (!this.pending)\n\t    { this.pending = msg; }\n\t  else\n\t    { this.pending = this.pending.concat(msg); }\n\t  this.pendingTotal += msg.length;\n\n\t  // Enough data, try updating\n\t  if (this.pending.length >= this._delta8) {\n\t    msg = this.pending;\n\n\t    // Process pending data in blocks\n\t    var r = msg.length % this._delta8;\n\t    this.pending = msg.slice(msg.length - r, msg.length);\n\t    if (this.pending.length === 0)\n\t      { this.pending = null; }\n\n\t    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\t    for (var i = 0; i < msg.length; i += this._delta32)\n\t      { this$1._update(msg, i, i + this$1._delta32); }\n\t  }\n\n\t  return this;\n\t};\n\n\tBlockHash.prototype.digest = function digest(enc) {\n\t  this.update(this._pad());\n\t  assert(this.pending === null);\n\n\t  return this._digest(enc);\n\t};\n\n\tBlockHash.prototype._pad = function pad() {\n\t  var len = this.pendingTotal;\n\t  var bytes = this._delta8;\n\t  var k = bytes - ((len + this.padLength) % bytes);\n\t  var res = new Array(k + this.padLength);\n\t  res[0] = 0x80;\n\t  for (var i = 1; i < k; i++)\n\t    { res[i] = 0; }\n\n\t  // Append length\n\t  len <<= 3;\n\t  if (this.endian === 'big') {\n\t    for (var t = 8; t < this.padLength; t++)\n\t      { res[i++] = 0; }\n\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = (len >>> 24) & 0xff;\n\t    res[i++] = (len >>> 16) & 0xff;\n\t    res[i++] = (len >>> 8) & 0xff;\n\t    res[i++] = len & 0xff;\n\t  } else {\n\t    res[i++] = len & 0xff;\n\t    res[i++] = (len >>> 8) & 0xff;\n\t    res[i++] = (len >>> 16) & 0xff;\n\t    res[i++] = (len >>> 24) & 0xff;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\t    res[i++] = 0;\n\n\t    for (t = 8; t < this.padLength; t++)\n\t      { res[i++] = 0; }\n\t  }\n\n\t  return res;\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\texports.sha1 = __webpack_require__(22);\n\texports.sha224 = __webpack_require__(24);\n\texports.sha256 = __webpack_require__(25);\n\texports.sha384 = __webpack_require__(26);\n\texports.sha512 = __webpack_require__(27);\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar common = __webpack_require__(20);\n\tvar shaCommon = __webpack_require__(23);\n\n\tvar rotl32 = utils.rotl32;\n\tvar sum32 = utils.sum32;\n\tvar sum32_5 = utils.sum32_5;\n\tvar ft_1 = shaCommon.ft_1;\n\tvar BlockHash = common.BlockHash;\n\n\tvar sha1_K = [\n\t  0x5A827999, 0x6ED9EBA1,\n\t  0x8F1BBCDC, 0xCA62C1D6\n\t];\n\n\tfunction SHA1() {\n\t  if (!(this instanceof SHA1))\n\t    { return new SHA1(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [\n\t    0x67452301, 0xefcdab89, 0x98badcfe,\n\t    0x10325476, 0xc3d2e1f0 ];\n\t  this.W = new Array(80);\n\t}\n\n\tutils.inherits(SHA1, BlockHash);\n\tmodule.exports = SHA1;\n\n\tSHA1.blockSize = 512;\n\tSHA1.outSize = 160;\n\tSHA1.hmacStrength = 80;\n\tSHA1.padLength = 64;\n\n\tSHA1.prototype._update = function _update(msg, start) {\n\t  var W = this.W;\n\n\t  for (var i = 0; i < 16; i++)\n\t    { W[i] = msg[start + i]; }\n\n\t  for(; i < W.length; i++)\n\t    { W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1); }\n\n\t  var a = this.h[0];\n\t  var b = this.h[1];\n\t  var c = this.h[2];\n\t  var d = this.h[3];\n\t  var e = this.h[4];\n\n\t  for (i = 0; i < W.length; i++) {\n\t    var s = ~~(i / 20);\n\t    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n\t    e = d;\n\t    d = c;\n\t    c = rotl32(b, 30);\n\t    b = a;\n\t    a = t;\n\t  }\n\n\t  this.h[0] = sum32(this.h[0], a);\n\t  this.h[1] = sum32(this.h[1], b);\n\t  this.h[2] = sum32(this.h[2], c);\n\t  this.h[3] = sum32(this.h[3], d);\n\t  this.h[4] = sum32(this.h[4], e);\n\t};\n\n\tSHA1.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar rotr32 = utils.rotr32;\n\n\tfunction ft_1(s, x, y, z) {\n\t  if (s === 0)\n\t    { return ch32(x, y, z); }\n\t  if (s === 1 || s === 3)\n\t    { return p32(x, y, z); }\n\t  if (s === 2)\n\t    { return maj32(x, y, z); }\n\t}\n\texports.ft_1 = ft_1;\n\n\tfunction ch32(x, y, z) {\n\t  return (x & y) ^ ((~x) & z);\n\t}\n\texports.ch32 = ch32;\n\n\tfunction maj32(x, y, z) {\n\t  return (x & y) ^ (x & z) ^ (y & z);\n\t}\n\texports.maj32 = maj32;\n\n\tfunction p32(x, y, z) {\n\t  return x ^ y ^ z;\n\t}\n\texports.p32 = p32;\n\n\tfunction s0_256(x) {\n\t  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n\t}\n\texports.s0_256 = s0_256;\n\n\tfunction s1_256(x) {\n\t  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n\t}\n\texports.s1_256 = s1_256;\n\n\tfunction g0_256(x) {\n\t  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n\t}\n\texports.g0_256 = g0_256;\n\n\tfunction g1_256(x) {\n\t  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n\t}\n\texports.g1_256 = g1_256;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar SHA256 = __webpack_require__(25);\n\n\tfunction SHA224() {\n\t  if (!(this instanceof SHA224))\n\t    { return new SHA224(); }\n\n\t  SHA256.call(this);\n\t  this.h = [\n\t    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n\t}\n\tutils.inherits(SHA224, SHA256);\n\tmodule.exports = SHA224;\n\n\tSHA224.blockSize = 512;\n\tSHA224.outSize = 224;\n\tSHA224.hmacStrength = 192;\n\tSHA224.padLength = 64;\n\n\tSHA224.prototype._digest = function digest(enc) {\n\t  // Just truncate output\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h.slice(0, 7), 'big'); }\n\t  else\n\t    { return utils.split32(this.h.slice(0, 7), 'big'); }\n\t};\n\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar common = __webpack_require__(20);\n\tvar shaCommon = __webpack_require__(23);\n\tvar assert = __webpack_require__(7);\n\n\tvar sum32 = utils.sum32;\n\tvar sum32_4 = utils.sum32_4;\n\tvar sum32_5 = utils.sum32_5;\n\tvar ch32 = shaCommon.ch32;\n\tvar maj32 = shaCommon.maj32;\n\tvar s0_256 = shaCommon.s0_256;\n\tvar s1_256 = shaCommon.s1_256;\n\tvar g0_256 = shaCommon.g0_256;\n\tvar g1_256 = shaCommon.g1_256;\n\n\tvar BlockHash = common.BlockHash;\n\n\tvar sha256_K = [\n\t  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n\t  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n\t  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n\t  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n\t  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n\t  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n\t  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n\t  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n\t  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n\t  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n\t  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n\t  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n\t  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n\t  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n\t  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n\t  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n\t];\n\n\tfunction SHA256() {\n\t  if (!(this instanceof SHA256))\n\t    { return new SHA256(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [\n\t    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n\t    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n\t  ];\n\t  this.k = sha256_K;\n\t  this.W = new Array(64);\n\t}\n\tutils.inherits(SHA256, BlockHash);\n\tmodule.exports = SHA256;\n\n\tSHA256.blockSize = 512;\n\tSHA256.outSize = 256;\n\tSHA256.hmacStrength = 192;\n\tSHA256.padLength = 64;\n\n\tSHA256.prototype._update = function _update(msg, start) {\n\t  var this$1 = this;\n\n\t  var W = this.W;\n\n\t  for (var i = 0; i < 16; i++)\n\t    { W[i] = msg[start + i]; }\n\t  for (; i < W.length; i++)\n\t    { W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]); }\n\n\t  var a = this.h[0];\n\t  var b = this.h[1];\n\t  var c = this.h[2];\n\t  var d = this.h[3];\n\t  var e = this.h[4];\n\t  var f = this.h[5];\n\t  var g = this.h[6];\n\t  var h = this.h[7];\n\n\t  assert(this.k.length === W.length);\n\t  for (i = 0; i < W.length; i++) {\n\t    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this$1.k[i], W[i]);\n\t    var T2 = sum32(s0_256(a), maj32(a, b, c));\n\t    h = g;\n\t    g = f;\n\t    f = e;\n\t    e = sum32(d, T1);\n\t    d = c;\n\t    c = b;\n\t    b = a;\n\t    a = sum32(T1, T2);\n\t  }\n\n\t  this.h[0] = sum32(this.h[0], a);\n\t  this.h[1] = sum32(this.h[1], b);\n\t  this.h[2] = sum32(this.h[2], c);\n\t  this.h[3] = sum32(this.h[3], d);\n\t  this.h[4] = sum32(this.h[4], e);\n\t  this.h[5] = sum32(this.h[5], f);\n\t  this.h[6] = sum32(this.h[6], g);\n\t  this.h[7] = sum32(this.h[7], h);\n\t};\n\n\tSHA256.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\n\tvar SHA512 = __webpack_require__(27);\n\n\tfunction SHA384() {\n\t  if (!(this instanceof SHA384))\n\t    { return new SHA384(); }\n\n\t  SHA512.call(this);\n\t  this.h = [\n\t    0xcbbb9d5d, 0xc1059ed8,\n\t    0x629a292a, 0x367cd507,\n\t    0x9159015a, 0x3070dd17,\n\t    0x152fecd8, 0xf70e5939,\n\t    0x67332667, 0xffc00b31,\n\t    0x8eb44a87, 0x68581511,\n\t    0xdb0c2e0d, 0x64f98fa7,\n\t    0x47b5481d, 0xbefa4fa4 ];\n\t}\n\tutils.inherits(SHA384, SHA512);\n\tmodule.exports = SHA384;\n\n\tSHA384.blockSize = 1024;\n\tSHA384.outSize = 384;\n\tSHA384.hmacStrength = 192;\n\tSHA384.padLength = 128;\n\n\tSHA384.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h.slice(0, 12), 'big'); }\n\t  else\n\t    { return utils.split32(this.h.slice(0, 12), 'big'); }\n\t};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar common = __webpack_require__(20);\n\tvar assert = __webpack_require__(7);\n\n\tvar rotr64_hi = utils.rotr64_hi;\n\tvar rotr64_lo = utils.rotr64_lo;\n\tvar shr64_hi = utils.shr64_hi;\n\tvar shr64_lo = utils.shr64_lo;\n\tvar sum64 = utils.sum64;\n\tvar sum64_hi = utils.sum64_hi;\n\tvar sum64_lo = utils.sum64_lo;\n\tvar sum64_4_hi = utils.sum64_4_hi;\n\tvar sum64_4_lo = utils.sum64_4_lo;\n\tvar sum64_5_hi = utils.sum64_5_hi;\n\tvar sum64_5_lo = utils.sum64_5_lo;\n\n\tvar BlockHash = common.BlockHash;\n\n\tvar sha512_K = [\n\t  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n\t  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n\t  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n\t  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n\t  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n\t  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n\t  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n\t  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n\t  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n\t  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n\t  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n\t  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n\t  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n\t  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n\t  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n\t  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n\t  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n\t  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n\t  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n\t  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n\t  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n\t  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n\t  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n\t  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n\t  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n\t  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n\t  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n\t  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n\t  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n\t  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n\t  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n\t  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n\t  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n\t  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n\t  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n\t  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n\t  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n\t  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n\t  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n\t  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n\t];\n\n\tfunction SHA512() {\n\t  if (!(this instanceof SHA512))\n\t    { return new SHA512(); }\n\n\t  BlockHash.call(this);\n\t  this.h = [\n\t    0x6a09e667, 0xf3bcc908,\n\t    0xbb67ae85, 0x84caa73b,\n\t    0x3c6ef372, 0xfe94f82b,\n\t    0xa54ff53a, 0x5f1d36f1,\n\t    0x510e527f, 0xade682d1,\n\t    0x9b05688c, 0x2b3e6c1f,\n\t    0x1f83d9ab, 0xfb41bd6b,\n\t    0x5be0cd19, 0x137e2179 ];\n\t  this.k = sha512_K;\n\t  this.W = new Array(160);\n\t}\n\tutils.inherits(SHA512, BlockHash);\n\tmodule.exports = SHA512;\n\n\tSHA512.blockSize = 1024;\n\tSHA512.outSize = 512;\n\tSHA512.hmacStrength = 192;\n\tSHA512.padLength = 128;\n\n\tSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n\t  var W = this.W;\n\n\t  // 32 x 32bit words\n\t  for (var i = 0; i < 32; i++)\n\t    { W[i] = msg[start + i]; }\n\t  for (; i < W.length; i += 2) {\n\t    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n\t    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n\t    var c1_hi = W[i - 14];  // i - 7\n\t    var c1_lo = W[i - 13];\n\t    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n\t    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n\t    var c3_hi = W[i - 32];  // i - 16\n\t    var c3_lo = W[i - 31];\n\n\t    W[i] = sum64_4_hi(\n\t      c0_hi, c0_lo,\n\t      c1_hi, c1_lo,\n\t      c2_hi, c2_lo,\n\t      c3_hi, c3_lo);\n\t    W[i + 1] = sum64_4_lo(\n\t      c0_hi, c0_lo,\n\t      c1_hi, c1_lo,\n\t      c2_hi, c2_lo,\n\t      c3_hi, c3_lo);\n\t  }\n\t};\n\n\tSHA512.prototype._update = function _update(msg, start) {\n\t  var this$1 = this;\n\n\t  this._prepareBlock(msg, start);\n\n\t  var W = this.W;\n\n\t  var ah = this.h[0];\n\t  var al = this.h[1];\n\t  var bh = this.h[2];\n\t  var bl = this.h[3];\n\t  var ch = this.h[4];\n\t  var cl = this.h[5];\n\t  var dh = this.h[6];\n\t  var dl = this.h[7];\n\t  var eh = this.h[8];\n\t  var el = this.h[9];\n\t  var fh = this.h[10];\n\t  var fl = this.h[11];\n\t  var gh = this.h[12];\n\t  var gl = this.h[13];\n\t  var hh = this.h[14];\n\t  var hl = this.h[15];\n\n\t  assert(this.k.length === W.length);\n\t  for (var i = 0; i < W.length; i += 2) {\n\t    var c0_hi = hh;\n\t    var c0_lo = hl;\n\t    var c1_hi = s1_512_hi(eh, el);\n\t    var c1_lo = s1_512_lo(eh, el);\n\t    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n\t    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n\t    var c3_hi = this$1.k[i];\n\t    var c3_lo = this$1.k[i + 1];\n\t    var c4_hi = W[i];\n\t    var c4_lo = W[i + 1];\n\n\t    var T1_hi = sum64_5_hi(\n\t      c0_hi, c0_lo,\n\t      c1_hi, c1_lo,\n\t      c2_hi, c2_lo,\n\t      c3_hi, c3_lo,\n\t      c4_hi, c4_lo);\n\t    var T1_lo = sum64_5_lo(\n\t      c0_hi, c0_lo,\n\t      c1_hi, c1_lo,\n\t      c2_hi, c2_lo,\n\t      c3_hi, c3_lo,\n\t      c4_hi, c4_lo);\n\n\t    c0_hi = s0_512_hi(ah, al);\n\t    c0_lo = s0_512_lo(ah, al);\n\t    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n\t    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n\t    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n\t    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n\t    hh = gh;\n\t    hl = gl;\n\n\t    gh = fh;\n\t    gl = fl;\n\n\t    fh = eh;\n\t    fl = el;\n\n\t    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n\t    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n\t    dh = ch;\n\t    dl = cl;\n\n\t    ch = bh;\n\t    cl = bl;\n\n\t    bh = ah;\n\t    bl = al;\n\n\t    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n\t    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n\t  }\n\n\t  sum64(this.h, 0, ah, al);\n\t  sum64(this.h, 2, bh, bl);\n\t  sum64(this.h, 4, ch, cl);\n\t  sum64(this.h, 6, dh, dl);\n\t  sum64(this.h, 8, eh, el);\n\t  sum64(this.h, 10, fh, fl);\n\t  sum64(this.h, 12, gh, gl);\n\t  sum64(this.h, 14, hh, hl);\n\t};\n\n\tSHA512.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'big'); }\n\t  else\n\t    { return utils.split32(this.h, 'big'); }\n\t};\n\n\tfunction ch64_hi(xh, xl, yh, yl, zh) {\n\t  var r = (xh & yh) ^ ((~xh) & zh);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xl & yl) ^ ((~xl) & zl);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction maj64_hi(xh, xl, yh, yl, zh) {\n\t  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n\t  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s0_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 28);\n\t  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n\t  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s0_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 28);\n\t  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n\t  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s1_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 14);\n\t  var c1_hi = rotr64_hi(xh, xl, 18);\n\t  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction s1_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 14);\n\t  var c1_lo = rotr64_lo(xh, xl, 18);\n\t  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g0_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 1);\n\t  var c1_hi = rotr64_hi(xh, xl, 8);\n\t  var c2_hi = shr64_hi(xh, xl, 7);\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g0_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 1);\n\t  var c1_lo = rotr64_lo(xh, xl, 8);\n\t  var c2_lo = shr64_lo(xh, xl, 7);\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g1_512_hi(xh, xl) {\n\t  var c0_hi = rotr64_hi(xh, xl, 19);\n\t  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n\t  var c2_hi = shr64_hi(xh, xl, 6);\n\n\t  var r = c0_hi ^ c1_hi ^ c2_hi;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\tfunction g1_512_lo(xh, xl) {\n\t  var c0_lo = rotr64_lo(xh, xl, 19);\n\t  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n\t  var c2_lo = shr64_lo(xh, xl, 6);\n\n\t  var r = c0_lo ^ c1_lo ^ c2_lo;\n\t  if (r < 0)\n\t    { r += 0x100000000; }\n\t  return r;\n\t}\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar common = __webpack_require__(20);\n\n\tvar rotl32 = utils.rotl32;\n\tvar sum32 = utils.sum32;\n\tvar sum32_3 = utils.sum32_3;\n\tvar sum32_4 = utils.sum32_4;\n\tvar BlockHash = common.BlockHash;\n\n\tfunction RIPEMD160() {\n\t  if (!(this instanceof RIPEMD160))\n\t    { return new RIPEMD160(); }\n\n\t  BlockHash.call(this);\n\n\t  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n\t  this.endian = 'little';\n\t}\n\tutils.inherits(RIPEMD160, BlockHash);\n\texports.ripemd160 = RIPEMD160;\n\n\tRIPEMD160.blockSize = 512;\n\tRIPEMD160.outSize = 160;\n\tRIPEMD160.hmacStrength = 192;\n\tRIPEMD160.padLength = 64;\n\n\tRIPEMD160.prototype._update = function update(msg, start) {\n\t  var A = this.h[0];\n\t  var B = this.h[1];\n\t  var C = this.h[2];\n\t  var D = this.h[3];\n\t  var E = this.h[4];\n\t  var Ah = A;\n\t  var Bh = B;\n\t  var Ch = C;\n\t  var Dh = D;\n\t  var Eh = E;\n\t  for (var j = 0; j < 80; j++) {\n\t    var T = sum32(\n\t      rotl32(\n\t        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n\t        s[j]),\n\t      E);\n\t    A = E;\n\t    E = D;\n\t    D = rotl32(C, 10);\n\t    C = B;\n\t    B = T;\n\t    T = sum32(\n\t      rotl32(\n\t        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n\t        sh[j]),\n\t      Eh);\n\t    Ah = Eh;\n\t    Eh = Dh;\n\t    Dh = rotl32(Ch, 10);\n\t    Ch = Bh;\n\t    Bh = T;\n\t  }\n\t  T = sum32_3(this.h[1], C, Dh);\n\t  this.h[1] = sum32_3(this.h[2], D, Eh);\n\t  this.h[2] = sum32_3(this.h[3], E, Ah);\n\t  this.h[3] = sum32_3(this.h[4], A, Bh);\n\t  this.h[4] = sum32_3(this.h[0], B, Ch);\n\t  this.h[0] = T;\n\t};\n\n\tRIPEMD160.prototype._digest = function digest(enc) {\n\t  if (enc === 'hex')\n\t    { return utils.toHex32(this.h, 'little'); }\n\t  else\n\t    { return utils.split32(this.h, 'little'); }\n\t};\n\n\tfunction f(j, x, y, z) {\n\t  if (j <= 15)\n\t    { return x ^ y ^ z; }\n\t  else if (j <= 31)\n\t    { return (x & y) | ((~x) & z); }\n\t  else if (j <= 47)\n\t    { return (x | (~y)) ^ z; }\n\t  else if (j <= 63)\n\t    { return (x & z) | (y & (~z)); }\n\t  else\n\t    { return x ^ (y | (~z)); }\n\t}\n\n\tfunction K(j) {\n\t  if (j <= 15)\n\t    { return 0x00000000; }\n\t  else if (j <= 31)\n\t    { return 0x5a827999; }\n\t  else if (j <= 47)\n\t    { return 0x6ed9eba1; }\n\t  else if (j <= 63)\n\t    { return 0x8f1bbcdc; }\n\t  else\n\t    { return 0xa953fd4e; }\n\t}\n\n\tfunction Kh(j) {\n\t  if (j <= 15)\n\t    { return 0x50a28be6; }\n\t  else if (j <= 31)\n\t    { return 0x5c4dd124; }\n\t  else if (j <= 47)\n\t    { return 0x6d703ef3; }\n\t  else if (j <= 63)\n\t    { return 0x7a6d76e9; }\n\t  else\n\t    { return 0x00000000; }\n\t}\n\n\tvar r = [\n\t  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n\t  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n\t  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n\t  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n\t  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n\t];\n\n\tvar rh = [\n\t  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n\t  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n\t  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n\t  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n\t  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n\t];\n\n\tvar s = [\n\t  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n\t  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n\t  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n\t  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n\t  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n\t];\n\n\tvar sh = [\n\t  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n\t  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n\t  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n\t  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n\t  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n\t];\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar utils = __webpack_require__(19);\n\tvar assert = __webpack_require__(7);\n\n\tfunction Hmac(hash, key, enc) {\n\t  if (!(this instanceof Hmac))\n\t    { return new Hmac(hash, key, enc); }\n\t  this.Hash = hash;\n\t  this.blockSize = hash.blockSize / 8;\n\t  this.outSize = hash.outSize / 8;\n\t  this.inner = null;\n\t  this.outer = null;\n\n\t  this._init(utils.toArray(key, enc));\n\t}\n\tmodule.exports = Hmac;\n\n\tHmac.prototype._init = function init(key) {\n\t  // Shorten key, if needed\n\t  if (key.length > this.blockSize)\n\t    { key = new this.Hash().update(key).digest(); }\n\t  assert(key.length <= this.blockSize);\n\n\t  // Add padding to key\n\t  for (var i = key.length; i < this.blockSize; i++)\n\t    { key.push(0); }\n\n\t  for (i = 0; i < key.length; i++)\n\t    { key[i] ^= 0x36; }\n\t  this.inner = new this.Hash().update(key);\n\n\t  // 0x36 ^ 0x5c = 0x6a\n\t  for (i = 0; i < key.length; i++)\n\t    { key[i] ^= 0x6a; }\n\t  this.outer = new this.Hash().update(key);\n\t};\n\n\tHmac.prototype.update = function update(msg, enc) {\n\t  this.inner.update(msg, enc);\n\t  return this;\n\t};\n\n\tHmac.prototype.digest = function digest(enc) {\n\t  this.outer.update(this.inner.digest());\n\t  return this.outer.digest(enc);\n\t};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t  doubles: {\n\t    step: 4,\n\t    points: [\n\t      [\n\t        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n\t        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n\t      ],\n\t      [\n\t        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n\t        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n\t      ],\n\t      [\n\t        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n\t        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n\t      ],\n\t      [\n\t        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n\t        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n\t      ],\n\t      [\n\t        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n\t        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n\t      ],\n\t      [\n\t        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n\t        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n\t      ],\n\t      [\n\t        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n\t        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n\t      ],\n\t      [\n\t        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n\t        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n\t      ],\n\t      [\n\t        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n\t        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n\t      ],\n\t      [\n\t        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n\t        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n\t      ],\n\t      [\n\t        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n\t        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n\t      ],\n\t      [\n\t        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n\t        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n\t      ],\n\t      [\n\t        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n\t        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n\t      ],\n\t      [\n\t        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n\t        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n\t      ],\n\t      [\n\t        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n\t        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n\t      ],\n\t      [\n\t        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n\t        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n\t      ],\n\t      [\n\t        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n\t        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n\t      ],\n\t      [\n\t        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n\t        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n\t      ],\n\t      [\n\t        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n\t        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n\t      ],\n\t      [\n\t        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n\t        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n\t      ],\n\t      [\n\t        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n\t        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n\t      ],\n\t      [\n\t        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n\t        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n\t      ],\n\t      [\n\t        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n\t        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n\t      ],\n\t      [\n\t        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n\t        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n\t      ],\n\t      [\n\t        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n\t        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n\t      ],\n\t      [\n\t        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n\t        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n\t      ],\n\t      [\n\t        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n\t        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n\t      ],\n\t      [\n\t        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n\t        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n\t      ],\n\t      [\n\t        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n\t        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n\t      ],\n\t      [\n\t        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n\t        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n\t      ],\n\t      [\n\t        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n\t        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n\t      ],\n\t      [\n\t        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n\t        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n\t      ],\n\t      [\n\t        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n\t        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n\t      ],\n\t      [\n\t        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n\t        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n\t      ],\n\t      [\n\t        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n\t        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n\t      ],\n\t      [\n\t        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n\t        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n\t      ],\n\t      [\n\t        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n\t        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n\t      ],\n\t      [\n\t        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n\t        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n\t      ],\n\t      [\n\t        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n\t        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n\t      ],\n\t      [\n\t        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n\t        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n\t      ],\n\t      [\n\t        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n\t        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n\t      ],\n\t      [\n\t        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n\t        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n\t      ],\n\t      [\n\t        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n\t        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n\t      ],\n\t      [\n\t        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n\t        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n\t      ],\n\t      [\n\t        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n\t        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n\t      ],\n\t      [\n\t        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n\t        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n\t      ],\n\t      [\n\t        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n\t        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n\t      ],\n\t      [\n\t        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n\t        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n\t      ],\n\t      [\n\t        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n\t        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n\t      ],\n\t      [\n\t        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n\t        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n\t      ],\n\t      [\n\t        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n\t        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n\t      ],\n\t      [\n\t        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n\t        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n\t      ],\n\t      [\n\t        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n\t        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n\t      ],\n\t      [\n\t        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n\t        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n\t      ],\n\t      [\n\t        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n\t        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n\t      ],\n\t      [\n\t        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n\t        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n\t      ],\n\t      [\n\t        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n\t        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n\t      ],\n\t      [\n\t        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n\t        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n\t      ],\n\t      [\n\t        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n\t        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n\t      ],\n\t      [\n\t        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n\t        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n\t      ],\n\t      [\n\t        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n\t        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n\t      ],\n\t      [\n\t        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n\t        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n\t      ],\n\t      [\n\t        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n\t        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n\t      ],\n\t      [\n\t        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n\t        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n\t      ],\n\t      [\n\t        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n\t        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n\t      ]\n\t    ]\n\t  },\n\t  naf: {\n\t    wnd: 7,\n\t    points: [\n\t      [\n\t        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n\t        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n\t      ],\n\t      [\n\t        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n\t        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n\t      ],\n\t      [\n\t        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n\t        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n\t      ],\n\t      [\n\t        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n\t        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n\t      ],\n\t      [\n\t        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n\t        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n\t      ],\n\t      [\n\t        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n\t        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n\t      ],\n\t      [\n\t        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n\t        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n\t      ],\n\t      [\n\t        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n\t        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n\t      ],\n\t      [\n\t        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n\t        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n\t      ],\n\t      [\n\t        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n\t        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n\t      ],\n\t      [\n\t        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n\t        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n\t      ],\n\t      [\n\t        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n\t        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n\t      ],\n\t      [\n\t        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n\t        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n\t      ],\n\t      [\n\t        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n\t        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n\t      ],\n\t      [\n\t        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n\t        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n\t      ],\n\t      [\n\t        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n\t        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n\t      ],\n\t      [\n\t        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n\t        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n\t      ],\n\t      [\n\t        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n\t        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n\t      ],\n\t      [\n\t        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n\t        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n\t      ],\n\t      [\n\t        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n\t        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n\t      ],\n\t      [\n\t        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n\t        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n\t      ],\n\t      [\n\t        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n\t        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n\t      ],\n\t      [\n\t        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n\t        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n\t      ],\n\t      [\n\t        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n\t        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n\t      ],\n\t      [\n\t        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n\t        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n\t      ],\n\t      [\n\t        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n\t        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n\t      ],\n\t      [\n\t        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n\t        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n\t      ],\n\t      [\n\t        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n\t        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n\t      ],\n\t      [\n\t        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n\t        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n\t      ],\n\t      [\n\t        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n\t        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n\t      ],\n\t      [\n\t        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n\t        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n\t      ],\n\t      [\n\t        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n\t        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n\t      ],\n\t      [\n\t        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n\t        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n\t      ],\n\t      [\n\t        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n\t        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n\t      ],\n\t      [\n\t        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n\t        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n\t      ],\n\t      [\n\t        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n\t        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n\t      ],\n\t      [\n\t        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n\t        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n\t      ],\n\t      [\n\t        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n\t        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n\t      ],\n\t      [\n\t        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n\t        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n\t      ],\n\t      [\n\t        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n\t        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n\t      ],\n\t      [\n\t        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n\t        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n\t      ],\n\t      [\n\t        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n\t        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n\t      ],\n\t      [\n\t        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n\t        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n\t      ],\n\t      [\n\t        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n\t        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n\t      ],\n\t      [\n\t        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n\t        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n\t      ],\n\t      [\n\t        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n\t        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n\t      ],\n\t      [\n\t        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n\t        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n\t      ],\n\t      [\n\t        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n\t        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n\t      ],\n\t      [\n\t        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n\t        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n\t      ],\n\t      [\n\t        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n\t        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n\t      ],\n\t      [\n\t        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n\t        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n\t      ],\n\t      [\n\t        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n\t        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n\t      ],\n\t      [\n\t        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n\t        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n\t      ],\n\t      [\n\t        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n\t        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n\t      ],\n\t      [\n\t        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n\t        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n\t      ],\n\t      [\n\t        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n\t        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n\t      ],\n\t      [\n\t        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n\t        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n\t      ],\n\t      [\n\t        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n\t        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n\t      ],\n\t      [\n\t        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n\t        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n\t      ],\n\t      [\n\t        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n\t        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n\t      ],\n\t      [\n\t        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n\t        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n\t      ],\n\t      [\n\t        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n\t        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n\t      ],\n\t      [\n\t        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n\t        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n\t      ],\n\t      [\n\t        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n\t        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n\t      ],\n\t      [\n\t        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n\t        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n\t      ],\n\t      [\n\t        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n\t        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n\t      ],\n\t      [\n\t        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n\t        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n\t      ],\n\t      [\n\t        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n\t        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n\t      ],\n\t      [\n\t        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n\t        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n\t      ],\n\t      [\n\t        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n\t        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n\t      ],\n\t      [\n\t        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n\t        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n\t      ],\n\t      [\n\t        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n\t        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n\t      ],\n\t      [\n\t        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n\t        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n\t      ],\n\t      [\n\t        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n\t        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n\t      ],\n\t      [\n\t        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n\t        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n\t      ],\n\t      [\n\t        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n\t        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n\t      ],\n\t      [\n\t        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n\t        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n\t      ],\n\t      [\n\t        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n\t        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n\t      ],\n\t      [\n\t        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n\t        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n\t      ],\n\t      [\n\t        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n\t        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n\t      ],\n\t      [\n\t        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n\t        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n\t      ],\n\t      [\n\t        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n\t        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n\t      ],\n\t      [\n\t        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n\t        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n\t      ],\n\t      [\n\t        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n\t        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n\t      ],\n\t      [\n\t        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n\t        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n\t      ],\n\t      [\n\t        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n\t        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n\t      ],\n\t      [\n\t        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n\t        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n\t      ],\n\t      [\n\t        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n\t        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n\t      ],\n\t      [\n\t        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n\t        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n\t      ],\n\t      [\n\t        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n\t        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n\t      ],\n\t      [\n\t        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n\t        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n\t      ],\n\t      [\n\t        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n\t        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n\t      ],\n\t      [\n\t        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n\t        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n\t      ],\n\t      [\n\t        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n\t        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n\t      ],\n\t      [\n\t        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n\t        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n\t      ],\n\t      [\n\t        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n\t        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n\t      ],\n\t      [\n\t        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n\t        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n\t      ],\n\t      [\n\t        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n\t        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n\t      ],\n\t      [\n\t        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n\t        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n\t      ],\n\t      [\n\t        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n\t        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n\t      ],\n\t      [\n\t        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n\t        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n\t      ],\n\t      [\n\t        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n\t        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n\t      ],\n\t      [\n\t        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n\t        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n\t      ],\n\t      [\n\t        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n\t        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n\t      ],\n\t      [\n\t        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n\t        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n\t      ],\n\t      [\n\t        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n\t        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n\t      ],\n\t      [\n\t        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n\t        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n\t      ],\n\t      [\n\t        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n\t        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n\t      ],\n\t      [\n\t        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n\t        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n\t      ],\n\t      [\n\t        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n\t        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n\t      ],\n\t      [\n\t        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n\t        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n\t      ],\n\t      [\n\t        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n\t        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n\t      ],\n\t      [\n\t        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n\t        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n\t      ],\n\t      [\n\t        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n\t        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n\t      ],\n\t      [\n\t        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n\t        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n\t      ],\n\t      [\n\t        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n\t        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n\t      ],\n\t      [\n\t        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n\t        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n\t      ],\n\t      [\n\t        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n\t        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n\t      ],\n\t      [\n\t        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n\t        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n\t      ],\n\t      [\n\t        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n\t        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n\t      ],\n\t      [\n\t        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n\t        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n\t      ],\n\t      [\n\t        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n\t        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n\t      ],\n\t      [\n\t        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n\t        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n\t      ],\n\t      [\n\t        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n\t        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n\t      ],\n\t      [\n\t        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n\t        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n\t      ],\n\t      [\n\t        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n\t        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n\t      ],\n\t      [\n\t        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n\t        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n\t      ]\n\t    ]\n\t  }\n\t};\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar HmacDRBG = __webpack_require__(32);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tvar KeyPair = __webpack_require__(33);\n\tvar Signature = __webpack_require__(34);\n\n\tfunction EC(options) {\n\t  if (!(this instanceof EC))\n\t    { return new EC(options); }\n\n\t  // Shortcut `elliptic.ec(curve-name)`\n\t  if (typeof options === 'string') {\n\t    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n\t    options = elliptic.curves[options];\n\t  }\n\n\t  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n\t  if (options instanceof elliptic.curves.PresetCurve)\n\t    { options = { curve: options }; }\n\n\t  this.curve = options.curve.curve;\n\t  this.n = this.curve.n;\n\t  this.nh = this.n.ushrn(1);\n\t  this.g = this.curve.g;\n\n\t  // Point on curve\n\t  this.g = options.curve.g;\n\t  this.g.precompute(options.curve.n.bitLength() + 1);\n\n\t  // Hash for function for DRBG\n\t  this.hash = options.hash || options.curve.hash;\n\t}\n\tmodule.exports = EC;\n\n\tEC.prototype.keyPair = function keyPair(options) {\n\t  return new KeyPair(this, options);\n\t};\n\n\tEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n\t  return KeyPair.fromPrivate(this, priv, enc);\n\t};\n\n\tEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n\t  return KeyPair.fromPublic(this, pub, enc);\n\t};\n\n\tEC.prototype.genKeyPair = function genKeyPair(options) {\n\t  var this$1 = this;\n\n\t  if (!options)\n\t    { options = {}; }\n\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new HmacDRBG({\n\t    hash: this.hash,\n\t    pers: options.pers,\n\t    persEnc: options.persEnc || 'utf8',\n\t    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n\t    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n\t    nonce: this.n.toArray()\n\t  });\n\n\t  var bytes = this.n.byteLength();\n\t  var ns2 = this.n.sub(new BN(2));\n\t  do {\n\t    var priv = new BN(drbg.generate(bytes));\n\t    if (priv.cmp(ns2) > 0)\n\t      { continue; }\n\n\t    priv.iaddn(1);\n\t    return this$1.keyFromPrivate(priv);\n\t  } while (true);\n\t};\n\n\tEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n\t  var delta = msg.byteLength() * 8 - this.n.bitLength();\n\t  if (delta > 0)\n\t    { msg = msg.ushrn(delta); }\n\t  if (!truncOnly && msg.cmp(this.n) >= 0)\n\t    { return msg.sub(this.n); }\n\t  else\n\t    { return msg; }\n\t};\n\n\tEC.prototype.sign = function sign(msg, key, enc, options) {\n\t  var this$1 = this;\n\n\t  if (typeof enc === 'object') {\n\t    options = enc;\n\t    enc = null;\n\t  }\n\t  if (!options)\n\t    { options = {}; }\n\n\t  key = this.keyFromPrivate(key, enc);\n\t  msg = this._truncateToN(new BN(msg, 16));\n\n\t  // Zero-extend key to provide enough entropy\n\t  var bytes = this.n.byteLength();\n\t  var bkey = key.getPrivate().toArray('be', bytes);\n\n\t  // Zero-extend nonce to have the same byte size as N\n\t  var nonce = msg.toArray('be', bytes);\n\n\t  // Instantiate Hmac_DRBG\n\t  var drbg = new HmacDRBG({\n\t    hash: this.hash,\n\t    entropy: bkey,\n\t    nonce: nonce,\n\t    pers: options.pers,\n\t    persEnc: options.persEnc || 'utf8'\n\t  });\n\n\t  // Number of bytes to generate\n\t  var ns1 = this.n.sub(new BN(1));\n\n\t  for (var iter = 0; true; iter++) {\n\t    var k = options.k ?\n\t        options.k(iter) :\n\t        new BN(drbg.generate(this$1.n.byteLength()));\n\t    k = this$1._truncateToN(k, true);\n\t    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n\t      { continue; }\n\n\t    var kp = this$1.g.mul(k);\n\t    if (kp.isInfinity())\n\t      { continue; }\n\n\t    var kpX = kp.getX();\n\t    var r = kpX.umod(this$1.n);\n\t    if (r.cmpn(0) === 0)\n\t      { continue; }\n\n\t    var s = k.invm(this$1.n).mul(r.mul(key.getPrivate()).iadd(msg));\n\t    s = s.umod(this$1.n);\n\t    if (s.cmpn(0) === 0)\n\t      { continue; }\n\n\t    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n\t                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n\t    // Use complement of `s`, if it is > `n / 2`\n\t    if (options.canonical && s.cmp(this$1.nh) > 0) {\n\t      s = this$1.n.sub(s);\n\t      recoveryParam ^= 1;\n\t    }\n\n\t    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n\t  }\n\t};\n\n\tEC.prototype.verify = function verify(msg, signature, key, enc) {\n\t  msg = this._truncateToN(new BN(msg, 16));\n\t  key = this.keyFromPublic(key, enc);\n\t  signature = new Signature(signature, 'hex');\n\n\t  // Perform primitive values validation\n\t  var r = signature.r;\n\t  var s = signature.s;\n\t  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n\t    { return false; }\n\t  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n\t    { return false; }\n\n\t  // Validate signature\n\t  var sinv = s.invm(this.n);\n\t  var u1 = sinv.mul(msg).umod(this.n);\n\t  var u2 = sinv.mul(r).umod(this.n);\n\n\t  if (!this.curve._maxwellTrick) {\n\t    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n\t    if (p.isInfinity())\n\t      { return false; }\n\n\t    return p.getX().umod(this.n).cmp(r) === 0;\n\t  }\n\n\t  // NOTE: Greg Maxwell's trick, inspired by:\n\t  // https://git.io/vad3K\n\n\t  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n\t  if (p.isInfinity())\n\t    { return false; }\n\n\t  // Compare `p.x` of Jacobian point with `r`,\n\t  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n\t  // inverse of `p.z^2`\n\t  return p.eqXToP(r);\n\t};\n\n\tEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n\t  assert((3 & j) === j, 'The recovery param is more than two bits');\n\t  signature = new Signature(signature, enc);\n\n\t  var n = this.n;\n\t  var e = new BN(msg);\n\t  var r = signature.r;\n\t  var s = signature.s;\n\n\t  // A set LSB signifies that the y-coordinate is odd\n\t  var isYOdd = j & 1;\n\t  var isSecondKey = j >> 1;\n\t  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n\t    { throw new Error('Unable to find sencond key candinate'); }\n\n\t  // 1.1. Let x = r + jn.\n\t  if (isSecondKey)\n\t    { r = this.curve.pointFromX(r.add(this.curve.n), isYOdd); }\n\t  else\n\t    { r = this.curve.pointFromX(r, isYOdd); }\n\n\t  var rInv = signature.r.invm(n);\n\t  var s1 = n.sub(e).mul(rInv).umod(n);\n\t  var s2 = s.mul(rInv).umod(n);\n\n\t  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n\t  //               Q = r^-1 (sR + -eG)\n\t  return this.g.mulAdd(s1, r, s2);\n\t};\n\n\tEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n\t  var this$1 = this;\n\n\t  signature = new Signature(signature, enc);\n\t  if (signature.recoveryParam !== null)\n\t    { return signature.recoveryParam; }\n\n\t  for (var i = 0; i < 4; i++) {\n\t    var Qprime;\n\t    try {\n\t      Qprime = this$1.recoverPubKey(e, signature, i);\n\t    } catch (e) {\n\t      continue;\n\t    }\n\n\t    if (Qprime.eq(Q))\n\t      { return i; }\n\t  }\n\t  throw new Error('Unable to find valid recovery factor');\n\t};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar hash = __webpack_require__(18);\n\tvar utils = __webpack_require__(8);\n\tvar assert = __webpack_require__(7);\n\n\tfunction HmacDRBG(options) {\n\t  if (!(this instanceof HmacDRBG))\n\t    { return new HmacDRBG(options); }\n\t  this.hash = options.hash;\n\t  this.predResist = !!options.predResist;\n\n\t  this.outLen = this.hash.outSize;\n\t  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n\t  this._reseed = null;\n\t  this.reseedInterval = null;\n\t  this.K = null;\n\t  this.V = null;\n\n\t  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n\t  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n\t  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n\t  assert(entropy.length >= (this.minEntropy / 8),\n\t         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\t  this._init(entropy, nonce, pers);\n\t}\n\tmodule.exports = HmacDRBG;\n\n\tHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n\t  var this$1 = this;\n\n\t  var seed = entropy.concat(nonce).concat(pers);\n\n\t  this.K = new Array(this.outLen / 8);\n\t  this.V = new Array(this.outLen / 8);\n\t  for (var i = 0; i < this.V.length; i++) {\n\t    this$1.K[i] = 0x00;\n\t    this$1.V[i] = 0x01;\n\t  }\n\n\t  this._update(seed);\n\t  this._reseed = 1;\n\t  this.reseedInterval = 0x1000000000000;  // 2^48\n\t};\n\n\tHmacDRBG.prototype._hmac = function hmac() {\n\t  return new hash.hmac(this.hash, this.K);\n\t};\n\n\tHmacDRBG.prototype._update = function update(seed) {\n\t  var kmac = this._hmac()\n\t                 .update(this.V)\n\t                 .update([ 0x00 ]);\n\t  if (seed)\n\t    { kmac = kmac.update(seed); }\n\t  this.K = kmac.digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t  if (!seed)\n\t    { return; }\n\n\t  this.K = this._hmac()\n\t               .update(this.V)\n\t               .update([ 0x01 ])\n\t               .update(seed)\n\t               .digest();\n\t  this.V = this._hmac().update(this.V).digest();\n\t};\n\n\tHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n\t  // Optional entropy enc\n\t  if (typeof entropyEnc !== 'string') {\n\t    addEnc = add;\n\t    add = entropyEnc;\n\t    entropyEnc = null;\n\t  }\n\n\t  entropy = utils.toArray(entropy, entropyEnc);\n\t  add = utils.toArray(add, addEnc);\n\n\t  assert(entropy.length >= (this.minEntropy / 8),\n\t         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n\t  this._update(entropy.concat(add || []));\n\t  this._reseed = 1;\n\t};\n\n\tHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n\t  var this$1 = this;\n\n\t  if (this._reseed > this.reseedInterval)\n\t    { throw new Error('Reseed is required'); }\n\n\t  // Optional encoding\n\t  if (typeof enc !== 'string') {\n\t    addEnc = add;\n\t    add = enc;\n\t    enc = null;\n\t  }\n\n\t  // Optional additional data\n\t  if (add) {\n\t    add = utils.toArray(add, addEnc || 'hex');\n\t    this._update(add);\n\t  }\n\n\t  var temp = [];\n\t  while (temp.length < len) {\n\t    this$1.V = this$1._hmac().update(this$1.V).digest();\n\t    temp = temp.concat(this$1.V);\n\t  }\n\n\t  var res = temp.slice(0, len);\n\t  this._update(add);\n\t  this._reseed++;\n\t  return utils.encode(res, enc);\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tfunction KeyPair(ec, options) {\n\t  this.ec = ec;\n\t  this.priv = null;\n\t  this.pub = null;\n\n\t  // KeyPair(ec, { priv: ..., pub: ... })\n\t  if (options.priv)\n\t    { this._importPrivate(options.priv, options.privEnc); }\n\t  if (options.pub)\n\t    { this._importPublic(options.pub, options.pubEnc); }\n\t}\n\tmodule.exports = KeyPair;\n\n\tKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n\t  if (pub instanceof KeyPair)\n\t    { return pub; }\n\n\t  return new KeyPair(ec, {\n\t    pub: pub,\n\t    pubEnc: enc\n\t  });\n\t};\n\n\tKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n\t  if (priv instanceof KeyPair)\n\t    { return priv; }\n\n\t  return new KeyPair(ec, {\n\t    priv: priv,\n\t    privEnc: enc\n\t  });\n\t};\n\n\tKeyPair.prototype.validate = function validate() {\n\t  var pub = this.getPublic();\n\n\t  if (pub.isInfinity())\n\t    { return { result: false, reason: 'Invalid public key' }; }\n\t  if (!pub.validate())\n\t    { return { result: false, reason: 'Public key is not a point' }; }\n\t  if (!pub.mul(this.ec.curve.n).isInfinity())\n\t    { return { result: false, reason: 'Public key * N != O' }; }\n\n\t  return { result: true, reason: null };\n\t};\n\n\tKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n\t  // compact is optional argument\n\t  if (typeof compact === 'string') {\n\t    enc = compact;\n\t    compact = null;\n\t  }\n\n\t  if (!this.pub)\n\t    { this.pub = this.ec.g.mul(this.priv); }\n\n\t  if (!enc)\n\t    { return this.pub; }\n\n\t  return this.pub.encode(enc, compact);\n\t};\n\n\tKeyPair.prototype.getPrivate = function getPrivate(enc) {\n\t  if (enc === 'hex')\n\t    { return this.priv.toString(16, 2); }\n\t  else\n\t    { return this.priv; }\n\t};\n\n\tKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n\t  this.priv = new BN(key, enc || 16);\n\n\t  // Ensure that the priv won't be bigger than n, otherwise we may fail\n\t  // in fixed multiplication method\n\t  this.priv = this.priv.umod(this.ec.curve.n);\n\t};\n\n\tKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n\t  if (key.x || key.y) {\n\t    // Montgomery points only have an `x` coordinate.\n\t    // Weierstrass/Edwards points on the other hand have both `x` and\n\t    // `y` coordinates.\n\t    if (this.ec.curve.type === 'mont') {\n\t      assert(key.x, 'Need x coordinate');\n\t    } else if (this.ec.curve.type === 'short' ||\n\t               this.ec.curve.type === 'edwards') {\n\t      assert(key.x && key.y, 'Need both x and y coordinate');\n\t    }\n\t    this.pub = this.ec.curve.point(key.x, key.y);\n\t    return;\n\t  }\n\t  this.pub = this.ec.curve.decodePoint(key, enc);\n\t};\n\n\t// ECDH\n\tKeyPair.prototype.derive = function derive(pub) {\n\t  return pub.mul(this.priv).getX();\n\t};\n\n\t// ECDSA\n\tKeyPair.prototype.sign = function sign(msg, enc, options) {\n\t  return this.ec.sign(msg, this, enc, options);\n\t};\n\n\tKeyPair.prototype.verify = function verify(msg, signature) {\n\t  return this.ec.verify(msg, signature, this);\n\t};\n\n\tKeyPair.prototype.inspect = function inspect() {\n\t  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n\t         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n\t};\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\n\tfunction Signature(options, enc) {\n\t  if (options instanceof Signature)\n\t    { return options; }\n\n\t  if (this._importDER(options, enc))\n\t    { return; }\n\n\t  assert(options.r && options.s, 'Signature without r or s');\n\t  this.r = new BN(options.r, 16);\n\t  this.s = new BN(options.s, 16);\n\t  if (options.recoveryParam === undefined)\n\t    { this.recoveryParam = null; }\n\t  else\n\t    { this.recoveryParam = options.recoveryParam; }\n\t}\n\tmodule.exports = Signature;\n\n\tfunction Position() {\n\t  this.place = 0;\n\t}\n\n\tfunction getLength(buf, p) {\n\t  var initial = buf[p.place++];\n\t  if (!(initial & 0x80)) {\n\t    return initial;\n\t  }\n\t  var octetLen = initial & 0xf;\n\t  var val = 0;\n\t  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n\t    val <<= 8;\n\t    val |= buf[off];\n\t  }\n\t  p.place = off;\n\t  return val;\n\t}\n\n\tfunction rmPadding(buf) {\n\t  var i = 0;\n\t  var len = buf.length - 1;\n\t  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n\t    i++;\n\t  }\n\t  if (i === 0) {\n\t    return buf;\n\t  }\n\t  return buf.slice(i);\n\t}\n\n\tSignature.prototype._importDER = function _importDER(data, enc) {\n\t  data = utils.toArray(data, enc);\n\t  var p = new Position();\n\t  if (data[p.place++] !== 0x30) {\n\t    return false;\n\t  }\n\t  var len = getLength(data, p);\n\t  if ((len + p.place) !== data.length) {\n\t    return false;\n\t  }\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var rlen = getLength(data, p);\n\t  var r = data.slice(p.place, rlen + p.place);\n\t  p.place += rlen;\n\t  if (data[p.place++] !== 0x02) {\n\t    return false;\n\t  }\n\t  var slen = getLength(data, p);\n\t  if (data.length !== slen + p.place) {\n\t    return false;\n\t  }\n\t  var s = data.slice(p.place, slen + p.place);\n\t  if (r[0] === 0 && (r[1] & 0x80)) {\n\t    r = r.slice(1);\n\t  }\n\t  if (s[0] === 0 && (s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\n\t  this.r = new BN(r);\n\t  this.s = new BN(s);\n\t  this.recoveryParam = null;\n\n\t  return true;\n\t};\n\n\tfunction constructLength(arr, len) {\n\t  if (len < 0x80) {\n\t    arr.push(len);\n\t    return;\n\t  }\n\t  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n\t  arr.push(octets | 0x80);\n\t  while (--octets) {\n\t    arr.push((len >>> (octets << 3)) & 0xff);\n\t  }\n\t  arr.push(len);\n\t}\n\n\tSignature.prototype.toDER = function toDER(enc) {\n\t  var r = this.r.toArray();\n\t  var s = this.s.toArray();\n\n\t  // Pad values\n\t  if (r[0] & 0x80)\n\t    { r = [ 0 ].concat(r); }\n\t  // Pad values\n\t  if (s[0] & 0x80)\n\t    { s = [ 0 ].concat(s); }\n\n\t  r = rmPadding(r);\n\t  s = rmPadding(s);\n\n\t  while (!s[0] && !(s[1] & 0x80)) {\n\t    s = s.slice(1);\n\t  }\n\t  var arr = [ 0x02 ];\n\t  constructLength(arr, r.length);\n\t  arr = arr.concat(r);\n\t  arr.push(0x02);\n\t  constructLength(arr, s.length);\n\t  var backHalf = arr.concat(s);\n\t  var res = [ 0x30 ];\n\t  constructLength(res, backHalf.length);\n\t  res = res.concat(backHalf);\n\t  return utils.encode(res, enc);\n\t};\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar hash = __webpack_require__(18);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar KeyPair = __webpack_require__(36);\n\tvar Signature = __webpack_require__(37);\n\n\tfunction EDDSA(curve) {\n\t  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n\t  if (!(this instanceof EDDSA))\n\t    { return new EDDSA(curve); }\n\n\t  var curve = elliptic.curves[curve].curve;\n\t  this.curve = curve;\n\t  this.g = curve.g;\n\t  this.g.precompute(curve.n.bitLength() + 1);\n\n\t  this.pointClass = curve.point().constructor;\n\t  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n\t  this.hash = hash.sha512;\n\t}\n\n\tmodule.exports = EDDSA;\n\n\t/**\n\t* @param {Array|String} message - message bytes\n\t* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n\t* @returns {Signature} - signature\n\t*/\n\tEDDSA.prototype.sign = function sign(message, secret) {\n\t  message = parseBytes(message);\n\t  var key = this.keyFromSecret(secret);\n\t  var r = this.hashInt(key.messagePrefix(), message);\n\t  var R = this.g.mul(r);\n\t  var Rencoded = this.encodePoint(R);\n\t  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n\t               .mul(key.priv());\n\t  var S = r.add(s_).umod(this.curve.n);\n\t  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n\t};\n\n\t/**\n\t* @param {Array} message - message bytes\n\t* @param {Array|String|Signature} sig - sig bytes\n\t* @param {Array|String|Point|KeyPair} pub - public key\n\t* @returns {Boolean} - true if public key matches sig of message\n\t*/\n\tEDDSA.prototype.verify = function verify(message, sig, pub) {\n\t  message = parseBytes(message);\n\t  sig = this.makeSignature(sig);\n\t  var key = this.keyFromPublic(pub);\n\t  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n\t  var SG = this.g.mul(sig.S());\n\t  var RplusAh = sig.R().add(key.pub().mul(h));\n\t  return RplusAh.eq(SG);\n\t};\n\n\tEDDSA.prototype.hashInt = function hashInt() {\n\t  var arguments$1 = arguments;\n\n\t  var hash = this.hash();\n\t  for (var i = 0; i < arguments.length; i++)\n\t    { hash.update(arguments$1[i]); }\n\t  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n\t};\n\n\tEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n\t  return KeyPair.fromPublic(this, pub);\n\t};\n\n\tEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n\t  return KeyPair.fromSecret(this, secret);\n\t};\n\n\tEDDSA.prototype.makeSignature = function makeSignature(sig) {\n\t  if (sig instanceof Signature)\n\t    { return sig; }\n\t  return new Signature(this, sig);\n\t};\n\n\t/**\n\t* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n\t*\n\t* EDDSA defines methods for encoding and decoding points and integers. These are\n\t* helper convenience methods, that pass along to utility functions implied\n\t* parameters.\n\t*\n\t*/\n\tEDDSA.prototype.encodePoint = function encodePoint(point) {\n\t  var enc = point.getY().toArray('le', this.encodingLength);\n\t  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n\t  return enc;\n\t};\n\n\tEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n\t  bytes = utils.parseBytes(bytes);\n\n\t  var lastIx = bytes.length - 1;\n\t  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n\t  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n\t  var y = utils.intFromLE(normed);\n\t  return this.curve.pointFromY(y, xIsOdd);\n\t};\n\n\tEDDSA.prototype.encodeInt = function encodeInt(num) {\n\t  return num.toArray('le', this.encodingLength);\n\t};\n\n\tEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n\t  return utils.intFromLE(bytes);\n\t};\n\n\tEDDSA.prototype.isPoint = function isPoint(val) {\n\t  return val instanceof this.pointClass;\n\t};\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar parseBytes = utils.parseBytes;\n\tvar cachedProperty = utils.cachedProperty;\n\n\t/**\n\t* @param {EDDSA} eddsa - instance\n\t* @param {Object} params - public/private key parameters\n\t*\n\t* @param {Array<Byte>} [params.secret] - secret seed bytes\n\t* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n\t* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n\t*\n\t*/\n\tfunction KeyPair(eddsa, params) {\n\t  this.eddsa = eddsa;\n\t  this._secret = parseBytes(params.secret);\n\t  if (eddsa.isPoint(params.pub))\n\t    { this._pub = params.pub; }\n\t  else\n\t    { this._pubBytes = parseBytes(params.pub); }\n\t}\n\n\tKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n\t  if (pub instanceof KeyPair)\n\t    { return pub; }\n\t  return new KeyPair(eddsa, { pub: pub });\n\t};\n\n\tKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n\t  if (secret instanceof KeyPair)\n\t    { return secret; }\n\t  return new KeyPair(eddsa, { secret: secret });\n\t};\n\n\tKeyPair.prototype.secret = function secret() {\n\t  return this._secret;\n\t};\n\n\tcachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n\t  return this.eddsa.encodePoint(this.pub());\n\t});\n\n\tcachedProperty(KeyPair, 'pub', function pub() {\n\t  if (this._pubBytes)\n\t    { return this.eddsa.decodePoint(this._pubBytes); }\n\t  return this.eddsa.g.mul(this.priv());\n\t});\n\n\tcachedProperty(KeyPair, 'privBytes', function privBytes() {\n\t  var eddsa = this.eddsa;\n\t  var hash = this.hash();\n\t  var lastIx = eddsa.encodingLength - 1;\n\n\t  var a = hash.slice(0, eddsa.encodingLength);\n\t  a[0] &= 248;\n\t  a[lastIx] &= 127;\n\t  a[lastIx] |= 64;\n\n\t  return a;\n\t});\n\n\tcachedProperty(KeyPair, 'priv', function priv() {\n\t  return this.eddsa.decodeInt(this.privBytes());\n\t});\n\n\tcachedProperty(KeyPair, 'hash', function hash() {\n\t  return this.eddsa.hash().update(this.secret()).digest();\n\t});\n\n\tcachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n\t  return this.hash().slice(this.eddsa.encodingLength);\n\t});\n\n\tKeyPair.prototype.sign = function sign(message) {\n\t  assert(this._secret, 'KeyPair can only verify');\n\t  return this.eddsa.sign(message, this);\n\t};\n\n\tKeyPair.prototype.verify = function verify(message, sig) {\n\t  return this.eddsa.verify(message, sig, this);\n\t};\n\n\tKeyPair.prototype.getSecret = function getSecret(enc) {\n\t  assert(this._secret, 'KeyPair is public only');\n\t  return utils.encode(this.secret(), enc);\n\t};\n\n\tKeyPair.prototype.getPublic = function getPublic(enc) {\n\t  return utils.encode(this.pubBytes(), enc);\n\t};\n\n\tmodule.exports = KeyPair;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\n\tvar BN = __webpack_require__(4);\n\tvar elliptic = __webpack_require__(1);\n\tvar utils = elliptic.utils;\n\tvar assert = utils.assert;\n\tvar cachedProperty = utils.cachedProperty;\n\tvar parseBytes = utils.parseBytes;\n\n\t/**\n\t* @param {EDDSA} eddsa - eddsa instance\n\t* @param {Array<Bytes>|Object} sig -\n\t* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n\t* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n\t* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n\t* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n\t*/\n\tfunction Signature(eddsa, sig) {\n\t  this.eddsa = eddsa;\n\n\t  if (typeof sig !== 'object')\n\t    { sig = parseBytes(sig); }\n\n\t  if (Array.isArray(sig)) {\n\t    sig = {\n\t      R: sig.slice(0, eddsa.encodingLength),\n\t      S: sig.slice(eddsa.encodingLength)\n\t    };\n\t  }\n\n\t  assert(sig.R && sig.S, 'Signature without R or S');\n\n\t  if (eddsa.isPoint(sig.R))\n\t    { this._R = sig.R; }\n\t  if (sig.S instanceof BN)\n\t    { this._S = sig.S; }\n\n\t  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n\t  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n\t}\n\n\tcachedProperty(Signature, 'S', function S() {\n\t  return this.eddsa.decodeInt(this.Sencoded());\n\t});\n\n\tcachedProperty(Signature, 'R', function R() {\n\t  return this.eddsa.decodePoint(this.Rencoded());\n\t});\n\n\tcachedProperty(Signature, 'Rencoded', function Rencoded() {\n\t  return this.eddsa.encodePoint(this.R());\n\t});\n\n\tcachedProperty(Signature, 'Sencoded', function Sencoded() {\n\t  return this.eddsa.encodeInt(this.S());\n\t});\n\n\tSignature.prototype.toBytes = function toBytes() {\n\t  return this.Rencoded().concat(this.Sencoded());\n\t};\n\n\tSignature.prototype.toHex = function toHex() {\n\t  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n\t};\n\n\tmodule.exports = Signature;\n\n\n/***/ })\n/******/ ])));\n});\n\nvar elliptic = cryptoBundle.elliptic;\nvar hashjs = cryptoBundle.hashjs;\n\nvar AesCbc = __WEBPACK_IMPORTED_MODULE_3_aes_js___default.a.ModeOfOperation.cbc;\n\n/**\n * @param box an Airbitz JSON encryption box\n * @param key a key, as an ArrayBuffer\n */\nfunction decrypt (box, key) {\n  // Check JSON:\n  if (box.encryptionType !== 0) {\n    throw new Error('Unknown encryption type')\n  }\n  var iv = base16$1.parse(box.iv_hex);\n  var ciphertext = base64$1.parse(box.data_base64);\n\n  // Decrypt:\n  var cipher = new AesCbc(key, iv);\n  var raw = cipher.decrypt(ciphertext);\n  // Alternative using node.js crypto:\n  // const decipher = crypto.createDecipheriv('AES-256-CBC', key, iv);\n  // let x = decipher.update(box.data_base64, 'base64', 'hex')\n  // x += decipher.final('hex')\n  // const data = base16.parse(x)\n\n  // Calculate field locations:\n  var headerSize = raw[0];\n  var dataSize =\n    (raw[1 + headerSize] << 24) |\n    (raw[2 + headerSize] << 16) |\n    (raw[3 + headerSize] << 8) |\n    raw[4 + headerSize];\n  var dataStart = 1 + headerSize + 4;\n  var footerSize = raw[dataStart + dataSize];\n  var hashStart = dataStart + dataSize + 1 + footerSize;\n\n  // Verify SHA-256 checksum:\n  var hash = hashjs.sha256().update(raw.slice(0, hashStart)).digest();\n  var hashSize = hash.length;\n  for (var i = 0; i < hashSize; ++i) {\n    if (raw[hashStart + i] !== hash[i]) {\n      throw new Error('Invalid checksum')\n    }\n  }\n\n  // Verify pkcs7 padding:\n  var paddingStart = hashStart + hashSize;\n  var paddingSize = raw.length - paddingStart;\n  if (paddingSize <= 0) {\n    throw new Error('Mising PKCS7 padding')\n  }\n  for (var i$1 = paddingStart; i$1 < raw.length; ++i$1) {\n    if (raw[i$1] !== paddingSize) {\n      throw new Error('Invalid PKCS7 padding')\n    }\n  }\n\n  // Return the payload:\n  return raw.slice(dataStart, dataStart + dataSize)\n}\n\n/**\n * @param payload an ArrayBuffer of data\n * @param key a key, as an ArrayBuffer\n */\nfunction encrypt (io, data, key) {\n  // Calculate sizes and locations:\n  var headerSize = io.random(1)[0] & 0x1f;\n  var dataStart = 1 + headerSize + 4;\n  var dataSize = data.length;\n  var footerStart = dataStart + dataSize + 1;\n  var footerSize = io.random(1)[0] & 0x1f;\n  var hashStart = footerStart + footerSize;\n  var hashSize = 32;\n  var paddingStart = hashStart + hashSize;\n  var paddingSize = 16 - (paddingStart & 0xf);\n  var raw = new Uint8Array(paddingStart + paddingSize);\n\n  // Random header:\n  var header = io.random(headerSize);\n  raw[0] = headerSize;\n  for (var i = 0; i < headerSize; ++i) {\n    raw[1 + i] = header[i];\n  }\n\n  // Payload data:\n  raw[1 + headerSize] = (dataSize >> 24) & 0xff;\n  raw[2 + headerSize] = (dataSize >> 16) & 0xff;\n  raw[3 + headerSize] = (dataSize >> 8) & 0xff;\n  raw[4 + headerSize] = dataSize & 0xff;\n  for (var i$1 = 0; i$1 < dataSize; ++i$1) {\n    raw[dataStart + i$1] = data[i$1];\n  }\n\n  // Random footer:\n  var footer = io.random(footerSize);\n  raw[dataStart + dataSize] = footerSize;\n  for (var i$2 = 0; i$2 < footerSize; ++i$2) {\n    raw[footerStart + i$2] = footer[i$2];\n  }\n\n  // SHA-256 checksum:\n  var hash = hashjs.sha256().update(raw.slice(0, hashStart)).digest();\n  for (var i$3 = 0; i$3 < hashSize; ++i$3) {\n    raw[hashStart + i$3] = hash[i$3];\n  }\n\n  // Add PKCS7 padding:\n  for (var i$4 = 0; i$4 < paddingSize; ++i$4) {\n    raw[paddingStart + i$4] = paddingSize;\n  }\n\n  // Encrypt to JSON:\n  var iv = io.random(16);\n  var cipher = new AesCbc(key, iv);\n  var ciphertext = cipher.encrypt(raw);\n  return {\n    encryptionType: 0,\n    iv_hex: base16$1.stringify(iv),\n    data_base64: base64$1.stringify(ciphertext)\n  }\n}\n\nfunction hmacSha256 (data, key) {\n  var hmac = hashjs.hmac(hashjs.sha256, key);\n  return hmac.update(data).digest()\n}\n\nfunction sha256 (data) {\n  return hashjs.sha256().update(data).digest()\n}\n\nfunction getStorageWalletLastSync (state, keyId) {\n  return state.storageWallets[keyId].status.lastSync\n}\n\nfunction getStorageWalletFolder (state, keyId) {\n  return state.storageWallets[keyId].paths.folder\n}\n\nfunction getStorageWalletLocalFolder (state, keyId) {\n  return state.storageWallets[keyId].localFolder\n}\n\nfunction hashStorageWalletFilename (state, keyId, data) {\n  var dataKey = state.storageWallets[keyId].paths.dataKey;\n  return base58.stringify(hmacSha256(data, dataKey))\n}\n\nfunction getIo (state) {\n  return state.io\n}\n\nfunction getOnError (state) {\n  return state.onError\n}\n\nvar TYPED_ARRAYS = {\n  '[object Float32Array]': true,\n  '[object Float64Array]': true,\n  '[object Int16Array]': true,\n  '[object Int32Array]': true,\n  '[object Int8Array]': true,\n  '[object Uint16Array]': true,\n  '[object Uint32Array]': true,\n  '[object Uint8Array]': true,\n  '[object Uint8ClampedArray]': true\n};\n\n/**\n * Compares two objects that are already known to have a common `[[Class]]`.\n */\nfunction compareObjects (a, b, type) {\n  // User-created objects:\n  if (type === '[object Object]') {\n    var proto = Object.getPrototypeOf(a);\n    if (proto !== Object.getPrototypeOf(b)) { return false }\n\n    var keys = Object.getOwnPropertyNames(a);\n    if (keys.length !== Object.getOwnPropertyNames(b).length) { return false }\n\n    // We know that both objects have the same number of properties,\n    // so if every property in `a` has a matching property in `b`,\n    // the objects must be identical, regardless of key order.\n    for (var i$2 = 0, list = keys; i$2 < list.length; i$2 += 1) {\n      var key = list[i$2];\n\n      if (!b.hasOwnProperty(key) || !compare(a[key], b[key])) { return false }\n    }\n    return true\n  }\n\n  // Arrays:\n  if (type === '[object Array]') {\n    if (a.length !== b.length) { return false }\n    for (var i = 0; i < a.length; ++i) {\n      if (!compare(a[i], b[i])) { return false }\n    }\n    return true\n  }\n\n  // Javascript dates:\n  if (type === '[object Date]') {\n    return a.getTime() === b.getTime()\n  }\n\n  // Typed arrays:\n  if (TYPED_ARRAYS[type]) {\n    if (a.length !== b.length) { return false }\n    for (var i$1 = 0; i$1 < a.length; ++i$1) {\n      if (a[i$1] !== b[i$1]) { return false }\n    }\n    return true\n  }\n\n  // We don't even try comparing anything else:\n  return false\n}\n\n/**\n * Returns true if two Javascript values are equal in value.\n */\nfunction compare (a, b) {\n  if (a === b) { return true }\n\n  // Fast path for primitives:\n  if (typeof a !== 'object') { return false }\n  if (typeof b !== 'object') { return false }\n\n  // If these are objects, the internal `[[Class]]` properties must match:\n  var type = Object.prototype.toString.call(a);\n  if (type !== Object.prototype.toString.call(b)) { return false }\n\n  return compareObjects(a, b, type)\n}\n\n/**\n * Returns an object that is value-wise equivalent to `value`,\n * but preserves as much structure from object `original` as possible.\n */\nfunction recycle (value, original) {\n  if (value === original) { return original }\n\n  // Fast path for primitives:\n  if (typeof value !== 'object') { return value }\n  if (typeof original !== 'object') { return value }\n\n  // If these are objects, the internal `[[Class]]` properties must match:\n  var type = Object.prototype.toString.call(value);\n  if (type !== Object.prototype.toString.call(original)) { return value }\n\n  // Merge user-created objects:\n  if (type === '[object Object]') {\n    var proto = Object.getPrototypeOf(value);\n    if (proto !== Object.getPrototypeOf(original)) { return value }\n\n    var valueKeys = Object.getOwnPropertyNames(value);\n    var originalKeys = Object.getOwnPropertyNames(original);\n\n    var changed = false;\n    if (valueKeys.length !== originalKeys.length) { changed = true; }\n\n    // Merge the two objects key-by-key:\n    var merged = {};\n    for (var i$1 = 0, list = valueKeys; i$1 < list.length; i$1 += 1) {\n      var key = list[i$1];\n\n      if (!original.hasOwnProperty(key)) {\n        changed = true;\n        merged[key] = value[key];\n      } else {\n        var r = recycle(value[key], original[key]);\n        if (r !== original[key]) { changed = true; }\n        merged[key] = r;\n      }\n    }\n\n    // If there were no changes, just return the original:\n    return changed ? merged : original\n  }\n\n  // Merge arrays:\n  if (type === '[object Array]') {\n    var changed$1 = false;\n    if (value.length !== original.length) { changed$1 = true; }\n\n    // Merge the two arrays index-by-index:\n    var merged$1 = [];\n    for (var i = 0; i < value.length; ++i) {\n      var r$1 = recycle(value[i], original[i]);\n      if (r$1 !== original[i]) { changed$1 = true; }\n      merged$1[i] = r$1;\n    }\n\n    // If there were no changes, just return the original:\n    return changed$1 ? merged$1 : original\n  }\n\n  return compareObjects(value, original, type) ? original : value\n}\n\n/**\n * A no-op reducer.\n * The state would generally be pre-loaded at store creation time.\n */\nfunction constReducer (initialState) {\n  if ( initialState === void 0 ) initialState = null;\n\n  return function constReducer (state, action) {\n    if ( state === void 0 ) state = initialState;\n\n    return state\n  }\n}\n\n/**\n * Creates a reducer for managing a key/value collection.\n * @param {*} itemReducer The reducer to use on the individual items.\n * @param {*} ACTIONS An object with the strings to use for the\n * `ADD` and `UPDATE` actions.\n */\nfunction listReducer (itemReducer, ACTIONS) {\n  if ( ACTIONS === void 0 ) ACTIONS = {};\n\n  return function listReducer (state, action) {\n    if ( state === void 0 ) state = {};\n\n    var type = action.type;\n    var payload = action.payload;\n\n    switch (type) {\n      case ACTIONS.ADD: {\n        var id = payload.id;\n        var initialState = payload.initialState;\n        var out = Object.assign({}, state);\n        out[id] = itemReducer(initialState, { type: '' });\n        return out\n      }\n      case ACTIONS.UPDATE: {\n        var id$1 = payload.id;\n        var action$1 = payload.action;\n        // Only update if the item exists:\n        if (state[id$1] !== void 0) {\n          var out$1 = Object.assign({}, state);\n          out$1[id$1] = itemReducer(state[id$1], action$1);\n          return out$1\n        } else {\n          return state\n        }\n      }\n    }\n    return state\n  }\n}\n\n/**\n * A simple settable value reducer.\n */\nfunction settableReducer (initialState, SET) {\n  return function settableReducer (state, action) {\n    if ( state === void 0 ) state = initialState;\n\n    return action.type === SET ? action.payload : state\n  }\n}\n\n// Basic wallet list:\nvar ADD = 'airbitz-core-js/currencyWallet/ADD';\nvar UPDATE = 'airbitz-core-js/currencyWallet/UPDATE';\nvar SET_ENGINE = 'airbitz-core-js/currencyWallet/engine/SET';\n\nfunction add (keyId, initialState) {\n  return { type: ADD, payload: { id: keyId, initialState: initialState } }\n}\n\nfunction update (keyId, action) {\n  return { type: UPDATE, payload: { id: keyId, action: action } }\n}\n\nfunction setEngine (keyId, engine) {\n  return update(keyId, { type: SET_ENGINE, payload: engine })\n}\n\n// Wallet settable data:\nvar SET_BALANCE = 'airbitz-core-js/currencyWallet/balance/SET';\nvar SET_BLOCK_HEIGHT = 'airbitz-core-js/currencyWallet/blockHeight/SET';\nvar SET_NAME = 'airbitz-core-js/currencyWallet/name/SET';\nvar SET_PROGRESS = 'airbitz-core-js/currencyWallet/progress/SET';\n\nfunction setBalance (keyId, balance) {\n  return update(keyId, { type: SET_BALANCE, payload: balance })\n}\n\nfunction setBlockHeight (keyId, blockHeight) {\n  return update(keyId, { type: SET_BLOCK_HEIGHT, payload: blockHeight })\n}\n\nfunction setName (keyId, name) {\n  return update(keyId, { type: SET_NAME, payload: name })\n}\n\nfunction setProgress (keyId, progress) {\n  return update(keyId, { type: SET_PROGRESS, payload: progress })\n}\n\n// Transactions list:\nvar ADD_TXS = 'airbitz-core-js/currencyWallet/transactions/UPDATE';\nvar SET_FILE = 'airbitz-core-js/currencyWallet/transactions/SET_FILE';\nvar SET_FILES = 'airbitz-core-js/currencyWallet/transactions/SET_FILES';\n\nfunction addTxs (keyId, txs, defaultCurrency) {\n  return update(keyId, { type: ADD_TXS, payload: { txs: txs, defaultCurrency: defaultCurrency } })\n}\n\nfunction setFile (keyId, txid, json) {\n  return update(keyId, { type: SET_FILE, payload: { txid: txid, json: json } })\n}\n\nfunction setFiles (keyId, files) {\n  return update(keyId, { type: SET_FILES, payload: { files: files } })\n}\n\n/**\n * Merges a new incoming transaction with an existing transaction.\n */\nfunction mergeTx (tx, defaultCurrency, oldTx) {\n  if ( oldTx === void 0 ) oldTx = {};\n\n  var out = {\n    blockHeight: tx.blockHeight,\n    date: tx.date,\n    signedTx: tx.signedTx,\n    txid: tx.txid,\n\n    nativeAmount: Object.assign({}, oldTx.nativeAmount),\n    networkFee: Object.assign({}, oldTx.networkFee),\n    providerFee: Object.assign({}, oldTx.providerFee)\n  };\n\n  var currencyCode = tx.currencyCode != null ? tx.currencyCode : defaultCurrency;\n  out.nativeAmount[currencyCode] = tx.amountSatoshi != null\n    ? tx.amountSatoshi.toString()\n    : tx.nativeAmount;\n  out.networkFee[currencyCode] = tx.networkFee != null\n    ? tx.networkFee.toString()\n    : '0';\n  out.providerFee[currencyCode] = tx.providerFee != null\n    ? tx.providerFee.toString()\n    : '0';\n\n  return out\n}\n\nfunction files (state, action) {\n  if ( state === void 0 ) state = {};\n\n  var type = action.type;\n  var payload = action.payload;\n\n  switch (type) {\n    case SET_FILE: {\n      var txid = payload.txid;\n      var json = payload.json;\n      var out = Object.assign({}, state);\n      out[txid] = json;\n      return out\n    }\n    case SET_FILES: {\n      var files = payload.files;\n      return recycle(files, state)\n    }\n  }\n  return state\n}\n\n/**\n * Transaction list reducer.\n */\nfunction txs (state, action) {\n  if ( state === void 0 ) state = {};\n\n  var type = action.type;\n  var payload = action.payload;\n\n  switch (type) {\n    case ADD_TXS: {\n      var txs = payload.txs;\n      var defaultCurrency = payload.defaultCurrency;\n      var out = Object.assign({}, state);\n      for (var i = 0, list = txs; i < list.length; i += 1) {\n        var tx = list[i];\n\n        out[tx.txid] = mergeTx(tx, defaultCurrency, out[tx.txid]);\n      }\n      return out\n    }\n  }\n  return state\n}\n\n/**\n * Individual wallet reducer.\n */\nvar currencyWallet = Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"b\" /* combineReducers */])({\n  // Basic wallet stuff:\n  engine: settableReducer(0, SET_ENGINE),\n  plugin: constReducer(),\n\n  // Settable data:\n  balance: settableReducer({currencyCode: '', balance: 0}, SET_BALANCE),\n  blockHeight: settableReducer(0, SET_BLOCK_HEIGHT),\n  name: settableReducer(null, SET_NAME),\n  progress: settableReducer(null, SET_PROGRESS),\n\n  // Transaction data:\n  files: files,\n  txs: txs\n});\n\n/**\n * Wallet list reducer.\n */\nvar currencyWallets = listReducer(currencyWallet, { ADD: ADD, UPDATE: UPDATE });\n\n/**\n * Creates the initial state for a currency wallet and adds it to the store.\n * @param opts The options passed to `createCurrencyWallet`.\n * @return A `Promise` that will resolve when the state is ready.\n */\nfunction addCurrencyWallet$$1 (keyInfo, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  return function (dispatch, getState) {\n    var plugin = opts.plugin;\n    if (plugin.currencyInfo == null) {\n      plugin.currencyInfo = plugin.getInfo();\n    }\n\n    return dispatch(addStorageWallet(keyInfo)).then(function () {\n      var state = getState();\n      var keyId = keyInfo.id;\n\n      // Add the wallet to the store:\n      dispatch(add(keyId, { plugin: plugin }));\n\n      // Create the currency plugin:\n      var defaultCurrency = plugin.currencyInfo.currencyCode;\n      var engine = plugin.makeEngine(keyInfo, {\n        walletFolder: getStorageWalletFolder(state, keyId),\n        walletLocalFolder: getStorageWalletLocalFolder(state, keyId),\n        callbacks: {\n          onAddressesChecked: function onAddressesChecked (ratio) {\n            dispatch(setProgress(keyId, ratio));\n          },\n\n          onBalanceChanged: function onBalanceChanged (currencyCode, balance) {\n            dispatch(setBalance(keyId, { currencyCode: currencyCode, balance: balance }));\n          },\n\n          onBlockHeightChanged: function onBlockHeightChanged (height) {\n            dispatch(setBlockHeight(keyId, height));\n          },\n\n          onTransactionsChanged: function onTransactionsChanged (txs) {\n            if (!txs) { return }\n            dispatch(addTxs(keyId, txs, defaultCurrency));\n          }\n        }\n      });\n\n      return Promise.resolve(engine).then(function (engine) {\n        dispatch(setEngine(keyId, engine));\n\n        // Sign up for events:\n        var disposer = dispatch(\n          createReaction(\n            function (state) { return getStorageWalletLastSync(state, keyId); },\n            function (timestamp) { return function (dispatch) { return dispatch(loadFiles(keyId)); }; }\n          )\n        );\n        return disposer.payload.out.then(function () { return keyInfo.id; })\n      })\n    })\n  }\n}\n\n/**\n * Changes a wallet's name.\n */\nfunction renameCurrencyWallet$$1 (keyId, name) {\n  return function (dispatch, getState) { return getStorageWalletFolder(getState(), keyId)\n      .file('WalletName.json')\n      .setText(JSON.stringify({ walletName: name }))\n      .then(function () { return dispatch(setName(keyId, name)); }); }\n}\n\n/**\n * Updates the wallet in response to data syncs.\n */\nfunction loadFiles (keyId) {\n  return function (dispatch, getState) {\n    var folder = getStorageWalletFolder(getState(), keyId);\n\n    return Promise.all([\n      // Wallet name:\n      folder\n        .file('WalletName.json')\n        .getText()\n        .then(function (text) { return JSON.parse(text).walletName; })\n        .catch(function (e) { return null; })\n        .then(function (name) { return dispatch(setName(keyId, name)); }),\n      // Transaction metadata:\n      Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"f\" /* mapFiles */])(folder.folder('transaction'), function (file) { return file.getText().then(function (text) { return JSON.parse(text); }).catch(function (e) { return null; }); }\n      ).then(function (files) {\n        var out = {};\n        var jsons = files.filter(function (json) { return json != null && json.txid != null; });\n        for (var i = 0, list = jsons; i < list.length; i += 1) {\n          var json = list[i];\n\n          out[json.txid] = json;\n        }\n        return dispatch(setFiles(keyId, out))\n      })\n    ])\n  }\n}\n\n/**\n * Changes a wallet's metadata.\n */\nfunction setCurrencyWalletTxMetadata$$1 (\n  keyId,\n  txid,\n  currencyCode,\n  metadata\n) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var folder = getStorageWalletFolder(state, keyId);\n    var oldFile = getCurrencyWalletFile(state, keyId, txid);\n    var newFile = {\n      txid: txid,\n      internal: false,\n      currencies: {}\n    };\n    newFile.currencies[currencyCode] = {\n      metadata: metadata\n    };\n    var file = mergeDeeply(oldFile, newFile);\n\n    // Ensure we have a date:\n    if (oldFile == null) {\n      file.creationDate = Date.now() / 1000;\n    }\n\n    // Save the new file:\n    dispatch(setFile(keyId, txid, file));\n    return folder\n      .folder('transaction')\n      .file(txid + '.json')\n      .setText(JSON.stringify(file))\n      .then(function () { return void 0; })\n  }\n}\n\nfunction setupNewTxMetadata$$1 (keyId, tx) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var folder = getStorageWalletFolder(state, keyId);\n    var fiatCurrency = getCurrencyWalletFiat(state, keyId);\n    var txid = tx.txid;\n\n    // Basic file template:\n    var file = {\n      txid: txid,\n      internal: true,\n      creationDate: Date.now() / 1000,\n      currencies: {}\n    };\n\n    // Trick `getCurrencyMultiplier` into using our plugin:\n    var fakeState = {\n      plugins: { currencyPlugins: [getCurrencyWalletPlugin(state, keyId)] }\n    };\n\n    // Set up exchange-rate metadata:\n    for (var i = 0, list = Object.keys(tx.nativeAmount); i < list.length; i += 1) {\n      var currency = list[i];\n\n      var rate =\n        getExchangeRate(state, currency, fiatCurrency, function () { return 1; }) /\n        getCurrencyMultiplier(fakeState, currency);\n      var nativeAmount = tx.nativeAmount[currency];\n\n      var metadata = { exchangeAmount: {} };\n      metadata.exchangeAmount[fiatCurrency] = rate * nativeAmount;\n      file.currencies[currency] = { metadata: metadata, nativeAmount: nativeAmount };\n    }\n\n    // Save the new file:\n    dispatch(setFile(keyId, txid, file));\n    return folder\n      .folder('transaction')\n      .file(txid + '.json')\n      .setText(JSON.stringify(file))\n      .then(function () { return void 0; })\n  }\n}\n\n/**\n * If the function f throws an error, return that as a rejected promise.\n */\nfunction rejectify (f) {\n  return function rejectify () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    try {\n      return f.apply(this, rest)\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  }\n}\n\n/**\n * Prevents a function from running in parallel.\n * The currently-running operation must finish before the new one starts.\n */\nfunction serialize (f) {\n  var nextTask = Promise.resolve();\n  return function serialize () {\n    var this$1 = this;\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    var onDone = function () { return f.apply(this$1, rest); };\n    nextTask = nextTask.then(onDone, onDone);\n    return nextTask\n  }\n}\n\nvar ADD_PAIRS = 'airbitz-core-js/exchangeCache/ADD_PAIRS';\n\nfunction addPairs (pairs) {\n  return { type: ADD_PAIRS, payload: pairs }\n}\n\nfunction addRoute (routes, from, to, pair) {\n  if (!routes[from]) { routes[from] = {}; }\n  if (!routes[from][to]) { routes[from][to] = []; }\n  routes[from][to].push(pair);\n}\n\n/**\n * Currency rates reducer.\n * The raw state is just a list of currency pairs, each having a\n * `fromCurrency`, `toCurrency`, `rate`, `source`, and `timestamp` field.\n *\n * Based on this raw state, we also maintain a map of unique id's.\n * This is used to remove duplicates when we add new pairs to the state.\n * If a new pair has the same identity as an existing pair,\n * we use the mapped index to stomp over the old pair.\n *\n * Finally, we store a routing table, which is is just the pairs list\n * indexed by currency. The routing table has twice as many entries\n * as the pair list, since each pair works both ways.\n */\nfunction rates (state, action) {\n  if ( state === void 0 ) state = { ids: {}, pairs: [], routes: {} };\n\n  if (action.type === ADD_PAIRS) {\n    var ids = state.ids;\n    var pairs = [].concat( state.pairs );\n\n    // Update the id map and pairs array:\n    for (var i$2 = 0, list = action.payload; i$2 < list.length; i$2 += 1) {\n      var pair = list[i$2];\n\n      var id = (pair.source) + \",\" + (pair.fromCurrency) + \",\" + (pair.toCurrency);\n\n      // Have we ever seen this one before?\n      var i = ids[id];\n      if (i == null) {\n        // Copy-on-write ids list:\n        if (ids === state.ids) { ids = Object.assign({}, state.ids); }\n        ids[id] = pairs.length;\n        pairs.push(pair);\n      } else {\n        pairs[i] = pair;\n      }\n    }\n\n    // Populate the routes table:\n    var routes = state.routes;\n    if (pairs.length !== state.pairs.length) {\n      routes = {};\n      for (var i$1 = 0; i$1 < pairs.length; ++i$1) {\n        addRoute(routes, pairs[i$1].fromCurrency, pairs[i$1].toCurrency, i$1);\n        addRoute(routes, pairs[i$1].toCurrency, pairs[i$1].fromCurrency, i$1);\n      }\n    }\n\n    return { ids: ids, pairs: pairs, routes: routes }\n  }\n\n  return state\n}\n\nvar exchangeCache = Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"b\" /* combineReducers */])({\n  rates: rates\n});\n\nfunction fetchExchangeRates () {\n  return function (dispatch, getState) {\n    var state = getState();\n    var onError = getOnError(state);\n    var plugins = getExchangePlugins(state);\n\n    // TODO: Stop hard-coding this once wallets have a fiat setting:\n    var pairs = [\n      { fromCurrency: 'BTC', toCurrency: 'iso:EUR' },\n      { fromCurrency: 'BTC', toCurrency: 'iso:USD' },\n      { fromCurrency: 'ETH', toCurrency: 'iso:EUR' },\n      { fromCurrency: 'ETH', toCurrency: 'iso:USD' }\n    ];\n\n    return Promise.all(\n      plugins.map(function (plugin) { return rejectify(plugin.fetchExchangeRates)(pairs).catch(function (e) {\n          onError(e);\n          return []\n        }); }\n      )\n    ).then(function (pairLists) {\n      var timestamp = Date.now() / 1000;\n      var pairs = [];\n      for (var i = 0; i < plugins.length; ++i) {\n        var source = plugins[i].exchangeInfo.exchangeName;\n        for (var i$1 = 0, list = pairLists[i]; i$1 < list.length; i$1 += 1) {\n          var pair = list[i$1];\n\n          var fromCurrency = pair.fromCurrency;\n          var toCurrency = pair.toCurrency;\n          var rate = pair.rate;\n          pairs.push({ fromCurrency: fromCurrency, toCurrency: toCurrency, rate: rate, source: source, timestamp: timestamp });\n        }\n      }\n\n      return dispatch(addPairs(pairs))\n    })\n  }\n}\n\nvar SET = 'airbitz-core-js/plugins/SET';\n\nfunction setPlugins (currencyPlugins, exchangePlugins) {\n  return { type: SET, payload: { currencyPlugins: currencyPlugins, exchangePlugins: exchangePlugins } }\n}\n\nvar initialState = {\n  currencyPlugins: [],\n  exchangePlugins: []\n};\n\nvar plugins = settableReducer(initialState, SET);\n\nfunction setupPlugins (io, plugins$$1) {\n  var currencyPromises = [];\n  var exchangePromises = [];\n\n  for (var i = 0, list = plugins$$1; i < list.length; i += 1) {\n    var plugin = list[i];\n\n    switch (plugin.pluginType) {\n      case 'currency':\n        currencyPromises.push(plugin.makePlugin(io));\n        break\n      case 'exchange':\n        exchangePromises.push(plugin.makePlugin(io));\n        break\n      default:\n        throw new Error((\"Unknown plugin type \" + (plugin.pluginType)))\n    }\n  }\n\n  return function (dispatch) { return Promise.all([\n      Promise.all(currencyPromises),\n      Promise.all(exchangePromises)\n    ]).then(function (ref) {\n      var currencyPlugins = ref[0];\n      var exchangePlugins = ref[1];\n\n      // Fix legacy plugins:\n      for (var i = 0, list = currencyPlugins; i < list.length; i += 1) {\n        var plugin = list[i];\n\n        if (plugin.currencyInfo == null) {\n          plugin.currencyInfo = plugin.getInfo();\n        }\n      }\n\n      return dispatch(setPlugins(currencyPlugins, exchangePlugins))\n    }); }\n}\n\nvar getTime = typeof window !== 'undefined' && window.performance\n  ? function () { return window.performance.now(); }\n  : function () { return Date.now(); };\n\nfunction timeScrypt (scrypt, data, snrp, dklen) {\n  if ( dklen === void 0 ) dklen = 32;\n\n  if (typeof data === 'string') {\n    data = utf8.parse(data);\n  }\n\n  var salt = base16$1.parse(snrp.salt_hex);\n  var startTime = getTime();\n  return scrypt(data, salt, snrp.n, snrp.r, snrp.p, dklen).then(function (hash) { return ({\n    hash: hash,\n    time: getTime() - startTime\n  }); })\n}\n\nfunction scryptReducer (state, action) {\n  if ( state === void 0 ) state = {};\n\n  var type = action.type;\n  var payload = action.payload;\n\n  if (type === INIT) {\n    var io = payload.io;\n\n    return {\n      timeScrypt: serialize(function (data, snrp, dklen) { return timeScrypt(io.scrypt, data, snrp, dklen); }\n      ),\n      benchmark: null\n    }\n  }\n  return state\n}\n\nvar ADD$1 = 'airbitz-core-js/storageWallet/ADD';\nvar UPDATE$1 = 'airbitz-core-js/storageWallet/UPDATE';\nvar SET_STATUS = 'airbitz-core-js/storageWallet/SET_STATUS';\n\nfunction add$1 (keyId, initialState) {\n  return { type: ADD$1, payload: { id: keyId, initialState: initialState } }\n}\n\nfunction update$1 (keyId, action) {\n  return { type: UPDATE$1, payload: { id: keyId, action: action } }\n}\n\nfunction setStatus (keyId, status) {\n  return update$1(keyId, { type: SET_STATUS, payload: status })\n}\n\n/**\n * Individual wallet reducer.\n */\nvar storageWallet = Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"b\" /* combineReducers */])({\n  localFolder: constReducer(),\n  paths: constReducer(),\n  status: settableReducer({}, SET_STATUS)\n});\n\n/**\n * Wallet list reducer.\n */\nvar storageWallets = listReducer(storageWallet, { ADD: ADD$1, UPDATE: UPDATE$1 });\n\nvar INIT = 'airbitz-core-js/INIT';\n\n/**\n * Initializes the redux store on context creation.\n */\nfunction initStore (io, onError) {\n  return { type: INIT, payload: { io: io, onError: onError } }\n}\n\nfunction io (state, action) {\n  if ( state === void 0 ) state = {};\n\n  return action.type === INIT ? action.payload.io : state\n}\n\nfunction onError (state, action) {\n  if ( state === void 0 ) state = function () {};\n\n  return action.type === INIT ? action.payload.onError : state\n}\n\nvar reducer = Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"b\" /* combineReducers */])({\n  // Library state:\n  io: io,\n  onError: onError,\n  plugins: plugins,\n  scrypt: scryptReducer,\n\n  // Exchanges:\n  exchangeCache: exchangeCache,\n\n  // Wallet state:\n  currencyWallets: currencyWallets,\n  storageWallets: storageWallets\n});\n\n/**\n * A file within an encrypted folder.\n */\nvar RepoFile = function RepoFile (io, dataKey, file) {\n  this.io = io;\n  this.dataKey = dataKey;\n  this.file = file;\n};\n\nRepoFile.prototype.delete = function delete$1 () {\n  return this.file.delete()\n};\n\nRepoFile.prototype.getData = function getData () {\n    var this$1 = this;\n\n  return this.file\n    .getText()\n    .then(function (text) { return JSON.parse(text); })\n    .then(function (json) { return decrypt(json, this$1.dataKey); })\n};\n\nRepoFile.prototype.getText = function getText () {\n  return this.getData().then(function (data) { return utf8.stringify(data); })\n};\n\nRepoFile.prototype.setData = function setData (data) {\n  return this.file.setText(\n    JSON.stringify(encrypt(this.io, data, this.dataKey))\n  )\n};\n\nRepoFile.prototype.setText = function setText (text) {\n  return this.setData(utf8.parse(text))\n};\n\n/**\n * Wraps a folder with automatic encryption and decryption.\n */\nvar RepoFolder = function RepoFolder (io, dataKey, folder) {\n  this.io = io;\n  this.dataKey = dataKey;\n  this.inner = folder;\n};\n\nRepoFolder.prototype.delete = function delete$2 () {\n  return this.inner.delete()\n};\n\nRepoFolder.prototype.file = function file (name) {\n  return new RepoFile(this.io, this.dataKey, this.inner.file(name))\n};\n\nRepoFolder.prototype.folder = function folder (name) {\n  return new RepoFolder(this.io, this.dataKey, this.inner.folder(name))\n};\n\nRepoFolder.prototype.listFiles = function listFiles () {\n  return this.inner.listFiles()\n};\n\nRepoFolder.prototype.listFolders = function listFolders () {\n  return this.inner.listFolders()\n};\n\n/*\n * These are errors the core knows about.\n *\n * The GUI should handle these errors in an \"intelligent\" way, such as by\n * displaying a localized error message or asking the user for more info.\n * All these errors have a `type` field, which the GUI can use to select\n * the appropriate response.\n *\n * Other errors are possible, of course, since the Javascript language\n * itself can generate exceptions. Those errors won't have a `type` field,\n * and the GUI should just show them with a stack trace & generic message,\n * since the program has basically crashed at that point.\n */\n\n/**\n * Could not reach the server at all.\n */\nfunction NetworkError (message) {\n  var e = new Error(message || 'Cannot reach the network');\n  e.name = e.type = NetworkError.name;\n  return e\n}\nNetworkError.type = NetworkError.name;\n\n/**\n * The endpoint on the server is obsolete, and the app needs to be upgraded.\n */\nfunction ObsoleteApiError (message) {\n  var e = new Error(message || 'The application is too old. Please upgrade.');\n  e.name = e.type = ObsoleteApiError.name;\n  return e\n}\nObsoleteApiError.type = ObsoleteApiError.name;\n\n/**\n * Cannot find a login with that id.\n *\n * Reasons could include:\n * - Password login: wrong username\n * - PIN login: wrong PIN key\n * - Recovery login: wrong username, or wrong recovery key\n */\nfunction UsernameError (message) {\n  var e = new Error(message || 'Invalid username');\n  e.name = e.type = UsernameError.name;\n  return e\n}\nUsernameError.type = UsernameError.name;\n\n/**\n * The provided authentication is incorrect.\n *\n * Reasons could include:\n * - Password login: wrong password\n * - PIN login: wrong PIN\n * - Recovery login: wrong answers\n *\n * The error object may include a `wait` member,\n * which is the number of seconds the user must wait before trying again.\n */\nfunction PasswordError (resultsJson, message) {\n  if ( resultsJson === void 0 ) resultsJson = {};\n\n  var e = new Error(message || 'Invalid password');\n  e.name = e.type = PasswordError.name;\n  e.wait = resultsJson.wait_seconds;\n  return e\n}\nPasswordError.type = PasswordError.name;\n\n/**\n * The OTP token was missing / incorrect.\n *\n * The error object should include a `resetToken` member,\n * which can be used to reset OTP protection on the account.\n *\n * The error object may include a `resetDate` member,\n * which indicates that an OTP reset is already pending,\n * and when it will complete.\n */\nfunction OtpError (resultsJson, message) {\n  if ( resultsJson === void 0 ) resultsJson = {};\n\n  var e = new Error(message || 'Invalid OTP token');\n  e.name = e.type = OtpError.name;\n  e.resetToken = resultsJson.otp_reset_auth;\n  if (resultsJson.otp_timeout_date != null) {\n    e.resetDate = new Date(1000 * resultsJson.otp_timeout_date);\n  }\n  return e\n}\nOtpError.type = OtpError.name;\n\n\nvar error = Object.freeze({\n\tNetworkError: NetworkError,\n\tObsoleteApiError: ObsoleteApiError,\n\tUsernameError: UsernameError,\n\tPasswordError: PasswordError,\n\tOtpError: OtpError\n});\n\n/**\n * Waits for the first successful promise.\n * If no promise succeeds, returns the last failure.\n */\n\n\n/**\n * If the promise doesn't resolve in the given time,\n * reject it with the provided error, or a generic error if none is provided.\n */\nfunction timeout (promise, ms, error) {\n  error = error || new Error((\"Timeout of \" + ms + \"ms exceeded\"));\n  var timeout = new Promise(function (resolve, reject) {\n    var timer = setTimeout(function () { return reject(error); }, ms);\n    var onDone = function () { return clearTimeout(timer); };\n    promise.then(onDone, onDone);\n  });\n  return Promise.race([promise, timeout])\n}\n\nvar syncServers = ['https://git-js.airbitz.co', 'https://git4-js.airbitz.co'];\n\n/**\n * Fetches some resource from a sync server.\n */\nfunction syncRequest (io, method, uri, body) {\n  return syncRequestInner(io, method, uri, body, 0)\n}\n\nfunction syncRequestInner (io, method, path, body, serverIndex) {\n  var opts = {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  };\n  if (method !== 'GET') {\n    opts.body = JSON.stringify(body);\n  }\n\n  var uri = syncServers[serverIndex] + path;\n  io.console.info((method + \" \" + uri));\n  return timeout(\n    io.fetch(uri, opts).then(\n      function (response) { return response.json().catch(function (jsonError) {\n          throw new Error('Non-JSON reply, HTTP status ' + response.status)\n        }); },\n      function (networkError) {\n        throw new NetworkError('Could not reach the sync server')\n      }\n    ),\n    10000,\n    new NetworkError('Could not reach the sync server: timeout')\n  ).catch(function (e) {\n    if (serverIndex + 1 < syncServers.length) {\n      return syncRequestInner(io, method, path, body, serverIndex + 1)\n    } else {\n      throw e\n    }\n  })\n}\n\n/**\n * Sets up the back-end folders needed to emulate Git on disk.\n * You probably don't want this.\n */\nfunction makeRepoPaths (io, keyInfo) {\n  var dataKey = base64$1.parse(keyInfo.keys.dataKey);\n  var syncKey = base64$1.parse(keyInfo.keys.syncKey);\n  var base = io.folder\n    .folder('repos')\n    .folder(base58.stringify(sha256(sha256(syncKey))));\n  var changesFolder = base.folder('changes');\n  var dataFolder = base.folder('data');\n  var unionFolder = Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"d\" /* makeUnionFolder */])(changesFolder, dataFolder);\n\n  return {\n    dataKey: dataKey,\n    syncKey: syncKey,\n    changesFolder: changesFolder,\n    dataFolder: dataFolder,\n    folder: new RepoFolder(io, dataKey, unionFolder),\n    statusFile: base.file('status.json')\n  }\n}\n\nfunction loadRepoStatus (paths) {\n  var fallback = { lastSync: 0 };\n  return paths.statusFile\n    .getText()\n    .then(function (text) { return (Object.assign({}, {lastSync: 0}, JSON.parse(text))); })\n    .catch(function (e) { return fallback; })\n}\n\n/**\n * This will save a changeset into the local storage.\n * This function ignores folder-level deletes and overwrites,\n * but those can't happen under the current rules anyhow.\n */\nfunction saveChanges (folder, changes) {\n  return Promise.all(\n    Object.keys(changes).map(function (path) {\n      var json = changes[path];\n      var file = Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"a\" /* locateFile */])(folder, path);\n\n      return json != null ? file.setText(JSON.stringify(json)) : file.delete()\n    })\n  )\n}\n\n/**\n * Synchronizes the local store with the remote server.\n */\nfunction syncRepo (io, paths, status) {\n  var changesFolder = paths.changesFolder;\n  var dataFolder = paths.dataFolder;\n  var statusFile = paths.statusFile;\n  var syncKey = paths.syncKey;\n\n  return Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"e\" /* mapAllFiles */])(changesFolder, function (file, name) { return file.getText().then(function (text) { return ({ file: file, name: name, json: JSON.parse(text) }); }); }\n  ).then(function (ourChanges) {\n    // If we have local changes, we need to bundle those:\n    var request = {};\n    if (ourChanges.length > 0) {\n      request.changes = {};\n      for (var i = 0, list = ourChanges; i < list.length; i += 1) {\n        var change = list[i];\n\n        request.changes[change.name] = change.json;\n      }\n    }\n    var method = request.changes ? 'POST' : 'GET';\n\n    // Calculate the URI:\n    var path = '/api/v2/store/' + base16$1.stringify(syncKey);\n    if (status.lastHash != null) {\n      path += '/' + status.lastHash;\n    }\n\n    // Make the request:\n    return syncRequest(io, method, path, request).then(function (reply) {\n      var changes = reply.changes; if ( changes === void 0 ) changes = {};\n      var hash = reply.hash;\n\n      // Save the incoming changes into our `data` folder:\n      return saveChanges(dataFolder, changes)\n        .then(\n          // Delete any changed keys (since the upload is done):\n          function () { return Promise.all(ourChanges.map(function (change) { return change.file.delete(); })); }\n        )\n        .then(function () {\n          // Update the repo status:\n          status.lastSync = Date.now() / 1000;\n          if (hash != null) { status.lastHash = hash; }\n          return statusFile\n            .setText(JSON.stringify(status))\n            .then(function () { return ({ status: status, changes: changes }); })\n        })\n    })\n  })\n}\n\nfunction addStorageWallet (keyInfo) {\n  return function (dispatch, getState) {\n    var io = getIo(getState());\n\n    var paths = makeRepoPaths(io, keyInfo);\n    var localFolder = io.folder\n      .folder('local')\n      .folder(base58.stringify(base64$1.parse(keyInfo.id)));\n\n    return loadRepoStatus(paths).then(function (status) {\n      dispatch(add$1(keyInfo.id, { localFolder: localFolder, paths: paths, status: status }));\n      return dispatch(syncStorageWallet(keyInfo.id))\n    })\n  }\n}\n\nfunction syncStorageWallet (keyId) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var io = getIo(state);\n    var ref = state.storageWallets[keyId];\n    var paths = ref.paths;\n    var status = ref.status;\n\n    return syncRepo(io, paths, Object.assign({}, status)).then(function (ref) {\n      var changes = ref.changes;\n      var status = ref.status;\n\n      dispatch(setStatus(keyId, status));\n      return Object.keys(changes).length !== 0\n    })\n  }\n}\n\n/**\n * Prepares an async API endpoint for consumption by the outside world.\n */\nfunction asyncApi (f, onError, name) {\n  return function asyncApi () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    var promise = rejectify(f).apply(this, rest).catch(function (e) {\n      onError(e, name);\n      throw e\n    });\n\n    // Figure out what to do with the promise:\n    var callback = rest[rest.length - 1];\n    if (f.length < rest.length && typeof callback === 'function') {\n      promise.then(function (reply) { return callback(null, reply); }).catch(function (e) { return callback(e); });\n    } else {\n      return promise\n    }\n  }\n}\n\n/**\n * Prepares a sync API endploint for consumption by the outside world.\n */\nfunction syncApi (f, onError, name) {\n  return function syncApi () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n    try {\n      return f.apply(this, rest)\n    } catch (e) {\n      onError(e, name);\n      throw e\n    }\n  }\n}\n\n/**\n * Adjusts a property decscriptor, making the property ready for use as an API.\n */\nfunction wrapProperty (key, d, onError, className, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  // Wrap functions:\n  if (typeof d.value === 'function') {\n    var name = className + \".\" + key;\n    d.value = opts.sync\n      ? syncApi(d.value, onError, name)\n      : asyncApi(d.value, onError, name);\n  }\n  if (d.get != null) {\n    d.get = syncApi(d.get, onError, (\"get \" + className + \".\" + key));\n  }\n  if (d.set != null) {\n    d.set = syncApi(d.set, onError, (\"set \" + className + \".\" + key));\n  }\n\n  // Properties are read-only by default:\n  if (!opts.writable && d.get == null && d.set == null) {\n    d.writable = false;\n  }\n\n  return d\n}\n\n/**\n * Copies the provided object, making its properties ready for use as an API.\n * If a property name starts with `@`, it is treated as an options structure.\n */\nfunction wrapObject (onError, className, object) {\n  var out = {};\n\n  for (var i = 0, list = Object.getOwnPropertyNames(object); i < list.length; i += 1) {\n    // Skip over options:\n    var key = list[i];\n\n    if (/^@/.test(key)) { continue }\n\n    // Copy properties:\n    var d = Object.getOwnPropertyDescriptor(object, key);\n    var opts = object['@' + key];\n    Object.defineProperty(\n      out,\n      key,\n      wrapProperty(key, d, onError, className, opts)\n    );\n  }\n\n  return out\n}\n\nfunction copyProperties (target, object) {\n  for (var i = 0, list = Object.getOwnPropertyNames(object); i < list.length; i += 1) {\n    var key = list[i];\n\n    var d = Object.getOwnPropertyDescriptor(object, key);\n    Object.defineProperty(target, key, d);\n  }\n  return target\n}\n\nfunction makeStorageWalletApi (redux$$1, keyInfo, callbacks) {\n  var id = keyInfo.id;\n  var type = keyInfo.type;\n  var keys = keyInfo.keys;\n  var onDataChanged = callbacks.onDataChanged;\n\n  if (onDataChanged) {\n    redux$$1.dispatch(\n      createReaction(\n        function (state) { return getStorageWalletLastSync(state, id); },\n        onDataChanged\n      )\n    );\n  }\n\n  return {\n    // Broken-out key info:\n    id: id,\n    type: type,\n    keys: keys,\n\n    // Folders:\n    get folder () {\n      return getStorageWalletFolder(redux$$1.getState(), id)\n    },\n\n    get localFolder () {\n      return getStorageWalletLocalFolder(redux$$1.getState(), id)\n    },\n\n    sync: function sync () {\n      return redux$$1.dispatch(syncStorageWallet(id))\n    }\n  }\n}\n\nfunction nop () {}\n\nvar fakeMetadata = {\n  bizId: 0,\n  category: '',\n  exchangeAmount: {},\n  name: '',\n  notes: ''\n};\n\n/**\n * Creates a `CurrencyWallet` API object.\n */\nfunction makeCurrencyWallet (keyInfo, opts) {\n  var io = opts.io;\n  var callbacks = opts.callbacks; if ( callbacks === void 0 ) callbacks = {};\n  var redux$$1 = io.redux;\n\n  return redux$$1\n    .dispatch(addCurrencyWallet$$1(keyInfo, opts))\n    .then(function (keyId) { return wrapObject(\n        io.onError,\n        'CurrencyWallet',\n        makeCurrencyApi(redux$$1, keyInfo, callbacks)\n      ); }\n    )\n}\n\n/**\n * Creates an unwrapped account API object around an account state object.\n */\nfunction makeCurrencyApi (redux$$1, keyInfo, callbacks) {\n  var dispatch = redux$$1.dispatch;\n  var getState = redux$$1.getState;\n  var keyId = keyInfo.id;\n\n  // Bound selectors:\n  var engine = function () { return getCurrencyWalletEngine(getState(), keyId); };\n  var plugin = function () { return getCurrencyWalletPlugin(getState(), keyId); };\n\n  var onAddressesChecked = callbacks.onAddressesChecked;\n  var onBalanceChanged = callbacks.onBalanceChanged;\n  var onBlockHeightChanged = callbacks.onBlockHeightChanged;\n  var onDataChanged = callbacks.onDataChanged;\n  var onNewTransactions = callbacks.onNewTransactions; if ( onNewTransactions === void 0 ) onNewTransactions = nop;\n  var onTransactionsChanged = callbacks.onTransactionsChanged; if ( onTransactionsChanged === void 0 ) onTransactionsChanged = nop;\n  var onWalletNameChanged = callbacks.onWalletNameChanged;\n\n  // Hook up engine callbacks:\n  if (onAddressesChecked) {\n    dispatch(\n      createReaction(\n        function (state) { return getCurrencyWalletProgress(state, keyId); },\n        onAddressesChecked\n      )\n    );\n  }\n\n  if (onBalanceChanged) {\n    dispatch(\n      createReaction(\n        function (state) { return getCurrencyWalletBalance(state, keyId); },\n        function (balance) { return onBalanceChanged(balance.currencyCode, balance.balance); }\n      )\n    );\n  }\n\n  if (onBlockHeightChanged) {\n    dispatch(\n      createReaction(\n        function (state) { return getCurrencyWalletBlockHeight(state, keyId); },\n        onBlockHeightChanged\n      )\n    );\n  }\n\n  // Hook up storage callback:\n  if (onDataChanged) {\n    dispatch(\n      createReaction(\n        function (state) { return getStorageWalletLastSync(state, keyId); },\n        function (timestamp) { return onDataChanged(); }\n      )\n    );\n  }\n\n  // Hook up the `onTransactionsChanged` and `onNewTransactions` callbacks:\n  var inhibit = false;\n  dispatch(\n    createReaction(\n      function (state) { return getCurrencyWalletFiles(state, keyId); },\n      function (state) { return getCurrencyWalletTxs(state, keyId); },\n      function (state) { return getCurrencyWalletTxList(state, keyId); },\n      function (files, txs, list, oldFiles, oldTxs) {\n        if ( oldFiles === void 0 ) oldFiles = {};\n        if ( oldTxs === void 0 ) oldTxs = {};\n\n        if (inhibit) { return }\n        inhibit = true;\n\n        var changes = [];\n        var created = [];\n\n        // Diff the transaction list:\n        for (var i = 0, list$1 = list; i < list$1.length; i += 1) {\n          var info = list$1[i];\n\n          if (\n            !compare(txs[info.txid], oldTxs[info.txid]) ||\n            !compare(files[info.txid], oldFiles[info.txid])\n          ) {\n            // If we have no metadata, it's new:\n            if (files[info.txid] == null) {\n              dispatch(setupNewTxMetadata$$1(keyId, txs[info.txid]));\n              created.push(info.txid);\n            } else {\n              changes.push(info.txid);\n            }\n          }\n        }\n\n        if (changes.length) { onTransactionsChanged(changes); }\n        if (created.length) { onNewTransactions(created); }\n        inhibit = false;\n      }\n    )\n  );\n\n  // Hook up the `onWalletNameChanged` callback:\n  if (onWalletNameChanged) {\n    dispatch(\n      createReaction(\n        function (state) { return getCurrencyWalletName(state, keyId); },\n        onWalletNameChanged\n      )\n    );\n  }\n\n  var out = {\n    // Storage stuff:\n    get name () {\n      return getCurrencyWalletName(getState(), keyId)\n    },\n    renameWallet: function renameWallet (name) {\n      return dispatch(renameCurrencyWallet$$1(keyId, name))\n    },\n\n    // Currency info:\n    get fiatCurrencyCode () {\n      return getCurrencyWalletFiat(getState(), keyId)\n    },\n    get currencyInfo () {\n      return plugin().currencyInfo\n    },\n\n    // Running state:\n    startEngine: function startEngine () {\n      return engine().startEngine()\n    },\n\n    stopEngine: function stopEngine () {\n      return Promise.resolve(engine().killEngine())\n    },\n\n    // Transactions:\n    '@getBalance': { sync: true },\n    getBalance: function getBalance (opts) {\n      return engine().getBalance(opts)\n    },\n\n    '@getBlockHeight': { sync: true },\n    getBlockHeight: function getBlockHeight () {\n      return engine().getBlockHeight()\n    },\n\n    getTransactions: function getTransactions (opts) {\n      if ( opts === void 0 ) opts = {};\n\n      var state = getState();\n      var files = getCurrencyWalletFiles(state, keyId);\n      var list = getCurrencyWalletTxList(state, keyId);\n      var txs = getCurrencyWalletTxs(state, keyId);\n      var fiat = getCurrencyWalletFiat(state, keyId);\n      var defaultCurrency = plugin().currencyInfo.currencyCode;\n      var currencyCode = opts.currencyCode || defaultCurrency;\n\n      var outList = [];\n      for (var i = 0, list$1 = list; i < list$1.length; i += 1) {\n        var info = list$1[i];\n\n        var tx = txs[info.txid];\n        var file = files[info.txid];\n\n        // Skip irrelevant transactions:\n        if (!tx.nativeAmount[currencyCode] && !tx.networkFee[currencyCode]) {\n          continue\n        }\n\n        // Copy the tx properties to the output:\n        var out = Object.assign({}, tx,\n          {amountSatoshi: Number(tx.nativeAmount[currencyCode]),\n          nativeAmount: tx.nativeAmount[currencyCode],\n          networkFee: tx.networkFee[currencyCode]});\n\n        // These are our fallback values:\n        var fallbackFile = {\n          currencies: {}\n        };\n        fallbackFile.currencies[defaultCurrency] = {\n          providerFreeSent: 0,\n          metadata: {\n            name: '',\n            category: '',\n            notes: '',\n            bizId: 0,\n            exchangeAmount: {}\n          }\n        };\n\n        // Copy the appropriate metadata to the output:\n        if (file) {\n          var merged = mergeDeeply(\n            fallbackFile,\n            file.currencies[defaultCurrency],\n            file.currencies[currencyCode]\n          );\n\n          if (file.creationDate < out.date) { out.date = file.creationDate; }\n          out.providerFee = merged.providerFeeSent;\n          out.metadata = merged.metadata;\n          out.metadata.amountFiat = merged.metadata.exchangeAmount[fiat];\n        }\n\n        outList.push(out);\n      }\n\n      // TODO: Handle the sort within the tx list merge process:\n      return Promise.resolve(outList.sort(function (a, b) { return a.date - b.date; }))\n    },\n\n    getReceiveAddress: function getReceiveAddress (opts) {\n      return Promise.resolve({\n        publicAddress: engine().getFreshAddress(opts),\n        amountSatoshi: 0,\n        metadata: fakeMetadata\n      })\n    },\n\n    saveReceiveAddress: function saveReceiveAddress (receiveAddress) {\n      return Promise.resolve()\n    },\n\n    lockReceiveAddress: function lockReceiveAddress (receiveAddress) {\n      return Promise.resolve()\n    },\n\n    '@makeAddressQrCode': { sync: true },\n    makeAddressQrCode: function makeAddressQrCode (address) {\n      return address.publicAddress\n    },\n\n    '@makeAddressUri': { sync: true },\n    makeAddressUri: function makeAddressUri (address) {\n      return address.publicAddress\n    },\n\n    makeSpend: function makeSpend (spendInfo) {\n      return engine().makeSpend(spendInfo)\n    },\n\n    signTx: function signTx (tx) {\n      return engine().signTx(tx)\n    },\n\n    broadcastTx: function broadcastTx (tx) {\n      return engine().broadcastTx(tx)\n    },\n\n    saveTx: function saveTx (tx) {\n      return Promise.all([\n        engine().saveTx(tx)\n      ])\n    },\n\n    saveTxMetadata: function saveTxMetadata (txid, currencyCode, metadata) {\n      var fiat = getCurrencyWalletFiat(getState(), keyId);\n\n      return dispatch(\n        setCurrencyWalletTxMetadata$$1(\n          keyId,\n          txid,\n          currencyCode,\n          fixMetadata(metadata, fiat)\n        )\n      )\n    },\n\n    getMaxSpendable: function getMaxSpendable (spendInfo) {\n      return Promise.resolve(0)\n    },\n\n    sweepPrivateKey: function sweepPrivateKey (keyUri) {\n      return Promise.resolve(0)\n    },\n\n    '@parseUri': { sync: true },\n    parseUri: function parseUri (uri) {\n      return plugin().parseUri(uri)\n    },\n\n    '@encodeUri': { sync: true },\n    encodeUri: function encodeUri (obj) {\n      return plugin().encodeUri(obj)\n    }\n  };\n  copyProperties(out, makeStorageWalletApi(redux$$1, keyInfo, callbacks));\n\n  return out\n}\n\nfunction fixMetadata (metadata, fiat) {\n  var out = filterObject(metadata, [\n    'bizId',\n    'category',\n    'exchangeAmount',\n    'name',\n    'notes'\n  ]);\n\n  if (metadata.amountFiat != null) {\n    if (out.exchangeAmount == null) { out.exchangeAmount = {}; }\n    out.exchangeAmount[fiat] = metadata.amountFiat;\n  }\n\n  return out\n}\n\n/**\n * Returns the first keyInfo with a matching type.\n */\nfunction findFirstKey (keyInfos, type) {\n  return keyInfos.find(function (info) { return info.type === type; })\n}\n\nfunction makeAccountType (appId) {\n  return appId === ''\n    ? 'account-repo:co.airbitz.wallet'\n    : (\"account-repo:\" + appId)\n}\n\n/**\n * Assembles the key metadata structure that is encrypted within a keyBox.\n * @param idKey Used to derive the wallet id. It's usually `dataKey`.\n */\nfunction makeKeyInfo (type, keys, idKey) {\n  return {\n    id: base64$1.stringify(hmacSha256(utf8.parse(type), idKey)),\n    type: type,\n    keys: keys\n  }\n}\n\n/**\n * Makes keys for accessing an encrypted Git repo.\n */\nfunction makeStorageKeyInfo (io, type, keys) {\n  if ( keys === void 0 ) keys = {};\n\n  if (keys.dataKey == null) { keys.dataKey = base64$1.stringify(io.random(32)); }\n  if (keys.syncKey == null) { keys.syncKey = base64$1.stringify(io.random(20)); }\n\n  return makeKeyInfo(type, keys, base64$1.parse(keys.dataKey))\n}\n\n/**\n * Assembles all the resources needed to attach new keys to the account.\n */\nfunction makeKeysKit (io, login) {\n  var keyInfos = [], len = arguments.length - 2;\n  while ( len-- > 0 ) keyInfos[ len ] = arguments[ len + 2 ];\n\n  var keyBoxes = keyInfos.map(function (info) { return encrypt(io, utf8.parse(JSON.stringify(info)), login.loginKey); }\n  );\n  var newSyncKeys = keyInfos\n    .filter(function (info) { return info.keys.syncKey != null; })\n    .map(function (info) { return base16$1.stringify(base64$1.parse(info.keys.syncKey)); });\n\n  return {\n    serverPath: '/v2/login/keys',\n    server: { keyBoxes: keyBoxes, newSyncKeys: newSyncKeys },\n    stash: { keyBoxes: keyBoxes },\n    login: { keyInfos: keyInfos },\n    loginId: login.loginId\n  }\n}\n\n/**\n * Flattens an array of key structures, removing duplicates.\n */\nfunction mergeKeyInfos (keyInfos) {\n  var out = [];\n  var ids = {}; // Maps ID's to output array indexes\n\n  for (var i = 0, list = keyInfos; i < list.length; i += 1) {\n    var keyInfo = list[i];\n\n    var id = keyInfo.id;\n    var type = keyInfo.type;\n    var keys = keyInfo.keys;\n    if (id == null || base64$1.parse(id).length !== 32) {\n      throw new Error((\"Key integrity violation: invalid id \" + id))\n    }\n\n    if (ids[id] != null) {\n      // We have already seen this id, so check for conflicts:\n      var old = out[ids[id]];\n      if (old.type !== type) {\n        throw new Error(\n          (\"Key integrity violation for \" + id + \": type \" + type + \" does not match \" + (old.type))\n        )\n      }\n      for (var i$1 = 0, list$1 = Object.keys(keys); i$1 < list$1.length; i$1 += 1) {\n        var key = list$1[i$1];\n\n        if (old.keys[key] != null && old.keys[key] !== keys[key]) {\n          throw new Error(\n            (\"Key integrity violation for \" + id + \": \" + key + \" keys do not match\")\n          )\n        }\n      }\n\n      // Do the update:\n      out[ids[id]] = { id: id, type: type, keys: Object.assign({}, old.keys, keys) };\n    } else {\n      // We haven't seen this id, so insert it:\n      ids[id] = out.length;\n      out.push(keyInfo);\n    }\n  }\n\n  return out\n}\n\nfunction getJsonFiles (folder) {\n  return Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"f\" /* mapFiles */])(folder, function (file) { return file\n      .getText()\n      .then(function (text) { return ({ file: file, json: JSON.parse(text) }); })\n      .catch(function (e) { return void 0; }); }\n  ).then(function (files) { return files.filter(function (file) { return file != null; }); })\n}\n\nfunction findUserFile (folder, username) {\n  var fixedName = fixUsername(username);\n  return getJsonFiles(folder).then(function (files) { return files.find(function (file) { return file.json.username === fixedName; }); }\n  )\n}\n\n/**\n * Handles login data storage.\n */\nvar LoginStore = function LoginStore (io) {\n  this.folder = io.folder.folder('logins');\n};\n\n/**\n * Lists the usernames that have data in the store.\n */\nLoginStore.prototype.listUsernames = function listUsernames () {\n  return getJsonFiles(this.folder).then(function (files) { return files.map(function (file) { return file.json.username; }); }\n  )\n};\n\n/**\n * Finds the login stash for the given username.\n * Returns a default object if\n */\nLoginStore.prototype.load = function load (username) {\n  return findUserFile(this.folder, username).then(\n    function (file) { return (file != null\n        ? file.json\n        : { username: fixUsername(username), appId: '' }); }\n  )\n};\n\n/**\n * Removes any login stash that may be stored for the given username.\n */\nLoginStore.prototype.remove = function remove (username) {\n  return findUserFile(this.folder, username).then(\n    function (file) { return (file != null ? file.file.delete() : void 0); }\n  )\n};\n\n/**\n * Saves a login stash tree to the folder.\n */\nLoginStore.prototype.save = function save (stashTree) {\n  var loginId = base64$1.parse(stashTree.loginId);\n  if (stashTree.appId !== '') {\n    throw new Error('Cannot save a login without an appId.')\n  }\n  if (loginId.length !== 32) {\n    throw new Error('Invalid loginId')\n  }\n  var filename = base58.stringify(loginId) + '.json';\n  return this.folder.file(filename).setText(JSON.stringify(stashTree))\n};\n\n/**\n * Normalizes a username, and checks for invalid characters.\n * TODO: Support a wider character range via Unicode normalization.\n */\nfunction fixUsername (username) {\n  var out = username\n    .toLowerCase()\n    .replace(/[ \\f\\r\\n\\t\\v]+/g, ' ')\n    .replace(/ $/, '')\n    .replace(/^ /, '');\n\n  for (var i = 0; i < out.length; ++i) {\n    var c = out.charCodeAt(i);\n    if (c < 0x20 || c > 0x7e) {\n      throw new Error('Bad characters in username')\n    }\n  }\n  return out\n}\n\n// Hashed username cache:\nvar userIdCache = {};\n\n/**\n * Hashes a username into a userId.\n */\nfunction hashUsername (io, username) {\n  var state = io.redux.getState();\n  var fixedName = fixUsername(username);\n  if (userIdCache[fixedName] == null) {\n    userIdCache[fixedName] = scrypt(state, fixedName, userIdSnrp);\n  }\n  return userIdCache[fixedName]\n}\n\n/**\n * Functions for working with login data in its on-disk format.\n */\n\nfunction cloneNode (node, children) {\n  return Object.assign({}, node, {children: children})\n}\n\n/**\n * Returns the login that satisifies the given predicate,\n * or undefined if nothing matches.\n */\nfunction searchTree (node, predicate) {\n  if (predicate(node)) { return node }\n\n  if (node.children != null) {\n    for (var i = 0, list = node.children; i < list.length; i += 1) {\n      var child = list[i];\n\n      var out = searchTree(child, predicate);\n      if (out != null) { return out }\n    }\n  }\n}\n\n/**\n * Replaces a node within a tree.\n * The `clone` callback is called for each unmodified node.\n * The `predicate` callback is used to find the target node.\n * The `update` callback is called on the target.\n */\nfunction updateTree (node, predicate, update, clone) {\n  if ( clone === void 0 ) clone = cloneNode;\n\n  if (predicate(node)) { return update(node) }\n\n  var children = node.children != null\n    ? node.children.map(function (child) { return updateTree(child, predicate, update, clone); })\n    : [];\n\n  return clone(node, children)\n}\n\nfunction applyLoginReplyInner (stash, loginKey, loginReply) {\n  // Copy common items:\n  var out = filterObject(loginReply, [\n    'appId',\n    'loginId',\n    'loginAuthBox',\n    'userId',\n    'parentBox',\n    'passwordAuthBox',\n    'passwordBox',\n    'passwordKeySnrp',\n    'mnemonicBox',\n    'rootKeyBox',\n    'mnemonicBox',\n    'syncKeyBox'\n  ]);\n\n  // Preserve client-only data:\n  out.username = stash.username;\n  out.userId = stash.userId;\n\n  // Store the pin key unencrypted:\n  if (loginReply.pin2KeyBox != null) {\n    var pin2Key = decrypt(loginReply.pin2KeyBox, loginKey);\n    out.pin2Key = base64$1.stringify(pin2Key);\n  }\n\n  // Store the recovery key unencrypted:\n  if (loginReply.recovery2KeyBox != null) {\n    var recovery2Key = decrypt(loginReply.recovery2KeyBox, loginKey);\n    out.recovery2Key = base64$1.stringify(recovery2Key);\n  }\n\n  // Keys (we could be more picky about this):\n  out.keyBoxes = elvis(loginReply.keyBoxes, []);\n\n  // Recurse into children:\n  var stashChildren = elvis(stash.children, []);\n  var replyChildren = elvis(loginReply.children, []);\n  if (stashChildren.length > replyChildren.length) {\n    throw new Error('The server has lost children!')\n  }\n  out.children = replyChildren.map(function (child, index) {\n    var childStash = stashChildren[index] != null ? stashChildren[index] : {};\n    var childKey = decrypt(child.parentBox, loginKey);\n    return applyLoginReplyInner(childStash, childKey, child)\n  });\n\n  return out\n}\n\n/**\n * Updates the given login stash object with fields from the auth server.\n * TODO: We don't trust the auth server 100%, so be picky about what we copy.\n */\nfunction applyLoginReply (stashTree, loginKey, loginReply) {\n  return updateTree(\n    stashTree,\n    function (stash) { return stash.appId === loginReply.appId; },\n    function (stash) { return applyLoginReplyInner(stash, loginKey, loginReply); }\n  )\n}\n\nfunction makeLoginTreeInner (stash, loginKey) {\n  var login = {};\n\n  if (stash.username != null) {\n    login.username = stash.username;\n  }\n\n  // Identity:\n  if (stash.appId == null) {\n    throw new Error('No appId provided')\n  }\n  if (stash.loginAuthBox != null) {\n    login.loginAuth = decrypt(stash.loginAuthBox, loginKey);\n  }\n  if (stash.loginId == null) {\n    throw new Error('No loginId provided')\n  }\n  login.appId = stash.appId;\n  login.loginId = stash.loginId;\n  login.loginKey = loginKey;\n\n  // Password:\n  if (stash.userId != null) {\n    login.userId = stash.userId;\n  } else if (stash.passwordAuthBox != null) {\n    login.userId = login.loginId;\n  }\n  if (stash.passwordAuthBox != null) {\n    login.passwordAuth = decrypt(stash.passwordAuthBox, loginKey);\n  }\n\n  // PIN v2:\n  if (stash.pin2Key != null) {\n    login.pin2Key = base64$1.parse(stash.pin2Key);\n  }\n\n  // Recovery v2:\n  if (stash.recovery2Key != null) {\n    login.recovery2Key = base64$1.parse(stash.recovery2Key);\n  }\n\n  var legacyKeys = [];\n\n  // BitID wallet:\n  if (stash.menemonicBox != null && stash.rootKeyBox != null) {\n    var mnemonic = utf8.stringify(decrypt(stash.menemonicBox, loginKey));\n    var rootKey = decrypt(stash.rootKeyBox, loginKey);\n    var keys = {\n      mnemonic: mnemonic,\n      rootKey: base64$1.stringify(rootKey)\n    };\n    legacyKeys.push(makeKeyInfo('wallet:bitid', keys, rootKey));\n  }\n\n  // Account settings:\n  if (stash.syncKeyBox != null) {\n    var syncKey = decrypt(stash.syncKeyBox, loginKey);\n    var type = makeAccountType(login.appId);\n    var keys$1 = {\n      syncKey: base64$1.stringify(syncKey),\n      dataKey: base64$1.stringify(loginKey)\n    };\n    legacyKeys.push(makeKeyInfo(type, keys$1, loginKey));\n  }\n\n  // Keys:\n  var keyInfos = elvis(stash.keyBoxes, []).map(function (box) { return JSON.parse(utf8.stringify(decrypt(box, loginKey))); }\n  );\n\n  login.keyInfos = mergeKeyInfos(legacyKeys.concat( keyInfos));\n\n  // Recurse into children:\n  login.children = elvis(stash.children, []).map(function (child) {\n    var childKey = decrypt(child.parentBox, loginKey);\n    return makeLoginTreeInner(child, childKey)\n  });\n\n  // Integrity check:\n  if (login.loginAuth == null && login.passwordAuth == null) {\n    throw new Error('No server authentication methods on login')\n  }\n\n  return login\n}\n\n/**\n * Converts a login stash into an in-memory login object.\n */\nfunction makeLoginTree (stashTree, loginKey, appId) {\n  if ( appId === void 0 ) appId = '';\n\n  return updateTree(\n    stashTree,\n    function (stash) { return stash.appId === appId; },\n    function (stash) { return makeLoginTreeInner(stash, loginKey); },\n    function (stash, children) {\n      var login = filterObject(stash, ['username', 'appId', 'loginId']);\n      login.children = children;\n      return login\n    }\n  )\n}\n\n/**\n * Changing a login involves updating the server, the in-memory login,\n * and the on-disk stash. A login kit contains all three elements,\n * and this function knows how to apply them all.\n */\nfunction applyKit (io, loginTree, kit) {\n  var loginId = kit.loginId;\n  var login = searchTree(loginTree, function (login) { return login.loginId === loginId; });\n\n  return io.loginStore.load(loginTree.username).then(function (stashTree) {\n    var request = makeAuthJson(login);\n    request.data = kit.server;\n    return io.authRequest('POST', kit.serverPath, request).then(function (reply) {\n      var newLoginTree = updateTree(\n        loginTree,\n        function (login) { return login.loginId === loginId; },\n        function (login) { return (Object.assign({}, login,\n          kit.login,\n          {children: softCat(login.children, kit.login.children),\n          keyInfos: mergeKeyInfos(softCat(login.keyInfos, kit.login.keyInfos))})); }\n      );\n\n      var newStashTree = updateTree(\n        stashTree,\n        function (stash) { return stash.loginId === loginId; },\n        function (stash) { return (Object.assign({}, stash,\n          kit.stash,\n          {children: softCat(stash.children, kit.stash.children),\n          keyBoxes: softCat(stash.keyBoxes, kit.stash.keyBoxes)})); }\n      );\n\n      return io.loginStore.save(newStashTree).then(function () { return newLoginTree; })\n    })\n  })\n}\n\n/**\n * Refreshes a login with data from the server.\n */\nfunction syncLogin (io, loginTree, login) {\n  return io.loginStore.load(loginTree.username).then(function (stashTree) {\n    var request = makeAuthJson(login);\n    return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n      var newStashTree = applyLoginReply(stashTree, login.loginKey, reply);\n      var newLoginTree = makeLoginTree(stashTree, login.loginKey, login.appId);\n\n      return io.loginStore.save(newStashTree).then(function () { return newLoginTree; })\n    })\n  })\n}\n\n/**\n * Sets up a login v2 server authorization JSON.\n */\nfunction makeAuthJson (login) {\n  if (login.loginAuth != null) {\n    return {\n      loginId: login.loginId,\n      loginAuth: base64$1.stringify(login.loginAuth)\n    }\n  }\n  if (login.passwordAuth != null) {\n    return {\n      userId: login.userId,\n      passwordAuth: base64$1.stringify(login.passwordAuth)\n    }\n  }\n  throw new Error('No server authentication methods available')\n}\n\nvar passwordAuthSnrp = userIdSnrp;\n\nfunction makeHashInput (username, password) {\n  return fixUsername(username) + password\n}\n\n/**\n * Extracts the loginKey from the login stash.\n */\nfunction extractLoginKey (io, stash, username, password) {\n  var state = io.redux.getState();\n\n  if (stash.passwordBox == null || stash.passwordKeySnrp == null) {\n    throw new Error('Missing data for offline password login')\n  }\n  var up = makeHashInput(username, password);\n  return scrypt(state, up, stash.passwordKeySnrp).then(function (passwordKey) {\n    return decrypt(stash.passwordBox, passwordKey)\n  })\n}\n\n/**\n * Fetches the loginKey from the server.\n */\nfunction fetchLoginKey (io, username, password) {\n  var state = io.redux.getState();\n  var up = makeHashInput(username, password);\n  var userId = hashUsername(io, username);\n  var passwordAuth = scrypt(state, up, passwordAuthSnrp);\n\n  return Promise.all([userId, passwordAuth]).then(function (values) {\n    var userId = values[0];\n    var passwordAuth = values[1];\n    var request = {\n      userId: base64$1.stringify(userId),\n      passwordAuth: base64$1.stringify(passwordAuth)\n      // \"otp\": null\n    };\n    return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n      if (reply.passwordBox == null || reply.passwordKeySnrp == null) {\n        throw new Error('Missing data for online password login')\n      }\n      return scrypt(state, up, reply.passwordKeySnrp).then(function (passwordKey) {\n        return {\n          loginKey: decrypt(reply.passwordBox, passwordKey),\n          loginReply: reply\n        }\n      })\n    })\n  })\n}\n\n/**\n * Logs a user in using a password.\n * @param username string\n * @param password string\n * @return A `Promise` for the new root login.\n */\nfunction loginPassword (io, username, password) {\n  return io.loginStore.load(username).then(function (stashTree) {\n    return rejectify(extractLoginKey)(io, stashTree, username, password)\n      .then(function (loginKey) {\n        var loginTree = makeLoginTree(stashTree, loginKey);\n\n        // Since we logged in offline, update the stash in the background:\n        syncLogin(io, loginTree, loginTree).catch(function (e) { return io.console.warn(e); });\n\n        return loginTree\n      })\n      .catch(function (e) {\n        // If that failed, try an online login:\n        return fetchLoginKey(io, username, password).then(function (values) {\n          var loginKey = values.loginKey;\n          var loginReply = values.loginReply;\n          stashTree = applyLoginReply(stashTree, loginKey, loginReply);\n          io.loginStore.save(stashTree);\n          return makeLoginTree(stashTree, loginKey)\n        })\n      })\n  })\n}\n\n/**\n * Returns true if the given password is correct.\n */\nfunction checkPassword (io, login, password) {\n  var state = io.redux.getState();\n\n  // Derive passwordAuth:\n  var up = makeHashInput(login.username, password);\n  return scrypt(state, up, passwordAuthSnrp).then(function (passwordAuth) {\n    // Compare what we derived with what we have:\n    for (var i = 0; i < passwordAuth.length; ++i) {\n      if (passwordAuth[i] !== login.passwordAuth[i]) {\n        return false\n      }\n    }\n    return true\n  })\n}\n\n/**\n * Verifies that a password meets our suggested rules.\n */\nfunction checkPasswordRules (password) {\n  var tooShort = password.length < 10;\n  var noNumber = !/[0-9]/.test(password);\n  var noLowerCase = !/[a-z]/.test(password);\n  var noUpperCase = !/[A-Z]/.test(password);\n\n  return {\n    tooShort: tooShort,\n    noNumber: noNumber,\n    noLowerCase: noLowerCase,\n    noUpperCase: noUpperCase,\n    passed: password.length >= 16 ||\n      !(tooShort || noNumber || noUpperCase || noLowerCase)\n  }\n}\n\n/**\n * Creates the data needed to attach a password to a login.\n */\nfunction makePasswordKit (io, login, username, password) {\n  var up = makeHashInput(username, password);\n  var state = io.redux.getState();\n\n  // loginKey chain:\n  var boxPromise = makeSnrp(state).then(function (passwordKeySnrp) {\n    return scrypt(state, up, passwordKeySnrp).then(function (passwordKey) {\n      var passwordBox = encrypt(io, login.loginKey, passwordKey);\n      return { passwordKeySnrp: passwordKeySnrp, passwordBox: passwordBox }\n    })\n  });\n\n  // authKey chain:\n  var authPromise = scrypt(state, up, passwordAuthSnrp).then(function (passwordAuth) {\n    var passwordAuthBox = encrypt(io, passwordAuth, login.loginKey);\n    return { passwordAuth: passwordAuth, passwordAuthBox: passwordAuthBox }\n  });\n\n  return Promise.all([boxPromise, authPromise]).then(function (values) {\n    var values_0 = values[0];\n    var passwordKeySnrp = values_0.passwordKeySnrp;\n    var passwordBox = values_0.passwordBox;\n    var values_1 = values[1];\n    var passwordAuth = values_1.passwordAuth;\n    var passwordAuthBox = values_1.passwordAuthBox;\n    return {\n      serverPath: '/v2/login/password',\n      server: {\n        passwordAuth: base64$1.stringify(passwordAuth),\n        passwordAuthSnrp: passwordAuthSnrp, // TODO: Use this on the other side\n        passwordKeySnrp: passwordKeySnrp,\n        passwordBox: passwordBox,\n        passwordAuthBox: passwordAuthBox\n      },\n      stash: {\n        passwordKeySnrp: passwordKeySnrp,\n        passwordBox: passwordBox,\n        passwordAuthBox: passwordAuthBox\n      },\n      login: {\n        passwordAuth: passwordAuth\n      },\n      loginId: login.loginId\n    }\n  })\n}\n\nfunction pin2Id (pin2Key, username) {\n  return hmacSha256(fixUsername(username), pin2Key)\n}\n\nfunction pin2Auth (pin2Key, pin) {\n  return hmacSha256(pin, pin2Key)\n}\n\n/**\n * Fetches and decrypts the loginKey from the server.\n * @return Promise<{loginKey, loginReply}>\n */\nfunction fetchLoginKey$1 (io, pin2Key, username, pin) {\n  var request = {\n    pin2Id: base64$1.stringify(pin2Id(pin2Key, username)),\n    pin2Auth: base64$1.stringify(pin2Auth(pin2Key, pin))\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    if (reply.pin2Box == null) {\n      throw new Error('Missing data for PIN v2 login')\n    }\n    return {\n      loginKey: decrypt(reply.pin2Box, pin2Key),\n      loginReply: reply\n    }\n  })\n}\n\n/**\n * Returns a copy of the PIN login key if one exists on the local device.\n */\nfunction getPin2Key (stashTree, appId) {\n  var stash = stashTree.pin2Key != null\n    ? stashTree\n    : searchTree(stashTree, function (stash) { return stash.appId === appId; });\n  return stash != null && stash.pin2Key != null\n    ? { pin2Key: base64$1.parse(stash.pin2Key), appId: stash.appId }\n    : {}\n}\n\n/**\n * Logs a user in using their PIN.\n * @return A `Promise` for the new root login.\n */\nfunction loginPin2 (io, appId, username, pin) {\n  return io.loginStore.load(username).then(function (stashTree) {\n    var ref = getPin2Key(stashTree, appId);\n    var pin2Key = ref.pin2Key;\n    var appIdFound = ref.appId;\n    if (pin2Key == null) {\n      throw new Error('No PIN set locally for this account')\n    }\n    return fetchLoginKey$1(io, pin2Key, username, pin).then(function (values) {\n      var loginKey = values.loginKey;\n      var loginReply = values.loginReply;\n      stashTree = applyLoginReply(stashTree, loginKey, loginReply);\n      io.loginStore.save(stashTree);\n      return makeLoginTree(stashTree, loginKey, appIdFound)\n    })\n  })\n}\n\n/**\n * Creates the data needed to attach a PIN to a login.\n */\nfunction makePin2Kit (io, login, username, pin) {\n  var pin2Key = login.pin2Key || io.random(32);\n  var pin2Box = encrypt(io, login.loginKey, pin2Key);\n  var pin2KeyBox = encrypt(io, pin2Key, login.loginKey);\n\n  return {\n    serverPath: '/v2/login/pin2',\n    server: {\n      pin2Id: base64$1.stringify(pin2Id(pin2Key, username)),\n      pin2Auth: base64$1.stringify(pin2Auth(pin2Key, pin)),\n      pin2Box: pin2Box,\n      pin2KeyBox: pin2KeyBox\n    },\n    stash: {\n      pin2Key: base64$1.stringify(pin2Key)\n    },\n    login: {\n      pin: pin,\n      pin2Key: pin2Key\n    },\n    loginId: login.loginId\n  }\n}\n\n/**\n * Determines whether or not a username is available.\n */\nfunction usernameAvailable (io, username) {\n  return hashUsername(io, username).then(function (userId) {\n    var request = {\n      userId: base64$1.stringify(userId)\n    };\n    return io\n      .authRequest('POST', '/v2/login', request)\n      .then(function (reply) { return false; }) // It's not available if we can hit it!\n      .catch(function (e) {\n        if (e.type !== UsernameError.type) {\n          throw e\n        }\n        return true\n      })\n  })\n}\n\n/**\n * Assembles all the data needed to create a new login.\n */\nfunction makeCreateKit (io, parentLogin, appId, username, opts) {\n  // Figure out login identity:\n  var loginId = parentLogin != null\n    ? io.random(32)\n    : hashUsername(io, username);\n  var loginKey = io.random(32);\n  var loginAuth = io.random(32);\n  var loginAuthBox = encrypt(io, loginAuth, loginKey);\n\n  // Set up login methods:\n  var parentBox = parentLogin != null\n    ? encrypt(io, loginKey, parentLogin.loginKey)\n    : void 0;\n  var passwordKit = opts.password != null\n    ? makePasswordKit(io, { loginKey: loginKey }, username, opts.password)\n    : {};\n  var pin2Kit = opts.pin != null\n    ? makePin2Kit(io, { loginKey: loginKey }, username, opts.pin)\n    : {};\n  var keysKit = opts.keyInfo != null\n    ? makeKeysKit(io, { loginKey: loginKey }, opts.keyInfo)\n    : {};\n\n  // Bundle everything:\n  return Promise.all([loginId, passwordKit]).then(function (values) {\n    var loginId = values[0];\n    var passwordKit = values[1];\n    return {\n      serverPath: '/v2/login/create',\n      server: Object.assign({}, {appId: appId,\n        loginAuth: base64$1.stringify(loginAuth),\n        loginAuthBox: loginAuthBox,\n        loginId: base64$1.stringify(loginId),\n        parentBox: parentBox},\n        passwordKit.server,\n        pin2Kit.server,\n        keysKit.server),\n      stash: Object.assign({}, {appId: appId,\n        loginAuthBox: loginAuthBox,\n        loginId: base64$1.stringify(loginId),\n        parentBox: parentBox},\n        passwordKit.stash,\n        pin2Kit.stash,\n        keysKit.stash),\n      login: Object.assign({}, {appId: appId,\n        loginAuth: loginAuth,\n        loginId: base64$1.stringify(loginId),\n        loginKey: loginKey,\n        keyInfos: []},\n        passwordKit.login,\n        pin2Kit.login,\n        keysKit.login)\n    }\n  })\n}\n\n/**\n * Creates a new login on the auth server.\n */\nfunction createLogin (io, username, opts) {\n  var fixedName = fixUsername(username);\n\n  return makeCreateKit(io, null, '', fixedName, opts).then(function (kit) {\n    kit.login.username = fixedName;\n    kit.stash.username = fixedName;\n    kit.login.userId = kit.login.loginId;\n\n    var request = {};\n    request.data = kit.server;\n    return io\n      .authRequest('POST', kit.serverPath, request)\n      .then(function (reply) { return io.loginStore.save(kit.stash).then(function () { return kit.login; }); })\n  })\n}\n\nfunction recovery2Id (recovery2Key, username) {\n  return hmacSha256(fixUsername(username), recovery2Key)\n}\n\nfunction recovery2Auth (recovery2Key, answers) {\n  return answers.map(function (answer) {\n    var data = utf8.parse(answer);\n    return base64$1.stringify(hmacSha256(data, recovery2Key))\n  })\n}\n\n/**\n * Fetches and decrypts the loginKey from the server.\n * @return Promise<{loginKey, loginReply}>\n */\nfunction fetchLoginKey$2 (io, recovery2Key, username, answers) {\n  var request = {\n    recovery2Id: base64$1.stringify(recovery2Id(recovery2Key, username)),\n    recovery2Auth: recovery2Auth(recovery2Key, answers)\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    if (reply.recovery2Box == null) {\n      throw new Error('Missing data for recovery v2 login')\n    }\n    return {\n      loginKey: decrypt(reply.recovery2Box, recovery2Key),\n      loginReply: reply\n    }\n  })\n}\n\n/**\n * Returns a copy of the recovery key if one exists on the local device.\n */\nfunction getRecovery2Key (stashTree) {\n  if (stashTree.recovery2Key != null) {\n    return base64$1.parse(stashTree.recovery2Key)\n  }\n}\n\n/**\n * Logs a user in using recovery answers.\n * @return A `Promise` for the new root login.\n */\nfunction loginRecovery2 (io, recovery2Key, username, answers) {\n  return io.loginStore.load(username).then(function (stashTree) {\n    return fetchLoginKey$2(io, recovery2Key, username, answers).then(function (values) {\n      var loginKey = values.loginKey;\n      var loginReply = values.loginReply;\n      stashTree = applyLoginReply(stashTree, loginKey, loginReply);\n      io.loginStore.save(stashTree);\n      return makeLoginTree(stashTree, loginKey)\n    })\n  })\n}\n\n/**\n * Fetches the questions for a login\n * @param username string\n * @param recovery2Key an ArrayBuffer recovery key\n * @param Question array promise\n */\nfunction getQuestions2 (io, recovery2Key, username) {\n  var request = {\n    recovery2Id: base64$1.stringify(recovery2Id(recovery2Key, username))\n    // \"otp\": null\n  };\n  return io.authRequest('POST', '/v2/login', request).then(function (reply) {\n    // Recovery login:\n    var question2Box = reply.question2Box;\n    if (question2Box == null) {\n      throw new Error('Login has no recovery questions')\n    }\n\n    // Decrypt the questions:\n    var questions = decrypt(question2Box, recovery2Key);\n    return JSON.parse(utf8.stringify(questions))\n  })\n}\n\n/**\n * Creates the data needed to attach recovery questions to a login.\n */\nfunction makeRecovery2Kit (io, login, username, questions, answers) {\n  if (!Array.isArray(questions)) {\n    throw new TypeError('Questions must be an array of strings')\n  }\n  if (!Array.isArray(answers)) {\n    throw new TypeError('Answers must be an array of strings')\n  }\n\n  var recovery2Key = login.recovery2Key || io.random(32);\n  var question2Box = encrypt(\n    io,\n    utf8.parse(JSON.stringify(questions)),\n    recovery2Key\n  );\n  var recovery2Box = encrypt(io, login.loginKey, recovery2Key);\n  var recovery2KeyBox = encrypt(io, recovery2Key, login.loginKey);\n\n  return {\n    serverPath: '/v2/login/recovery2',\n    server: {\n      recovery2Id: base64$1.stringify(recovery2Id(recovery2Key, username)),\n      recovery2Auth: recovery2Auth(recovery2Key, answers),\n      recovery2Box: recovery2Box,\n      recovery2KeyBox: recovery2KeyBox,\n      question2Box: question2Box\n    },\n    stash: {\n      recovery2Key: base64$1.stringify(recovery2Key)\n    },\n    login: {\n      recovery2Key: recovery2Key\n    },\n    loginId: login.loginId\n  }\n}\n\nvar listRecoveryQuestionChoices = function listRecoveryQuestionChoices (\n  io\n) {\n  return io.authRequest('POST', '/v1/questions', '')\n};\n\n/**\n * Returns true if `Object.assign(a, b)` would alter `a`.\n */\nfunction different (a, b) {\n  for (var i = 0, list = Object.keys(b); i < list.length; i += 1) {\n    var key = list[i];\n\n    if (a[key] !== b[key]) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction getJsonFiles$1 (folder) {\n  return Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"f\" /* mapFiles */])(folder, function (file, name) { return file\n      .getText()\n      .then(function (text) { return ({ file: file, name: name, json: JSON.parse(text) }); })\n      .catch(function (e) { return void 0; }); }\n  ).then(function (files) { return files.filter(function (file) { return file != null; }); })\n}\n\n/**\n * Loads the legacy wallet list from the account folder.\n */\nfunction loadWalletList (folder) {\n  return getJsonFiles$1(folder.folder('Wallets')).then(function (files) {\n    var keyInfos = [];\n    var keyStates = {};\n\n    files.forEach(function (file) {\n      var ref = file.json;\n      var SortIndex = ref.SortIndex;\n      var Archived = ref.Archived;\n      var BitcoinSeed = ref.BitcoinSeed;\n      var MK = ref.MK;\n      var SyncKey = ref.SyncKey;\n\n      var dataKey = base16$1.parse(MK);\n      var bitcoinKey = base16$1.parse(BitcoinSeed);\n      var syncKey = base16$1.parse(SyncKey);\n      var keys = {\n        dataKey: base64$1.stringify(dataKey),\n        bitcoinKey: base64$1.stringify(bitcoinKey),\n        syncKey: base64$1.stringify(syncKey)\n      };\n\n      var keyInfo = makeKeyInfo('wallet:bitcoin', keys, dataKey);\n      keyInfos.push(keyInfo);\n      keyStates[keyInfo.id] = {\n        sortIndex: SortIndex,\n        archived: Archived,\n        deleted: false\n      };\n    });\n\n    return { keyInfos: keyInfos, keyStates: keyStates }\n  })\n}\n\n/**\n * Loads the modern key state list from the account folder.\n */\nfunction loadKeyStates (folder) {\n  return getJsonFiles$1(folder.folder('Keys')).then(function (files) {\n    var keyStates = [];\n\n    files.forEach(function (file) {\n      var ref = file.json;\n      var id = ref.id;\n      var archived = ref.archived;\n      var deleted = ref.deleted;\n      var sortIndex = ref.sortIndex;\n      keyStates[id] = { archived: archived, deleted: deleted, sortIndex: sortIndex };\n    });\n\n    return keyStates\n  })\n}\n\n/**\n * Loads the keyStates and legacy wallet list,\n * diffs them with the current keyStates and legacy wallet list,\n * and returns true if there are any changes.\n */\nfunction loadAllKeyStates (state, keyId) {\n  var folder = getStorageWalletFolder(state, keyId);\n\n  return Promise.all([\n    loadWalletList(folder),\n    loadKeyStates(folder)\n  ]).then(function (values) {\n    var values_0 = values[0];\n    var keyInfos = values_0.keyInfos;\n    var legacyKeyStates = values_0.keyStates;\n    var newKeyStates = values[1];\n    var keyStates = Object.assign({}, legacyKeyStates, newKeyStates);\n    return { keyInfos: keyInfos, keyStates: keyStates }\n  })\n}\n\n/**\n * Writes some key states to the account folder.\n */\nfunction saveKeyStates (state, keyId, keyStates) {\n  var keyFolder = getStorageWalletFolder(state, keyId).folder('Keys');\n\n  // If there are no changes, do nothing:\n  var ids = Object.keys(keyStates);\n  if (!ids.length) { return Promise.resolve() }\n\n  return Promise.all(\n    ids.map(function (id) {\n      var ref = keyStates[id];\n      var archived = ref.archived;\n      var deleted = ref.deleted;\n      var sortIndex = ref.sortIndex;\n      var filename =\n        hashStorageWalletFilename(state, keyId, base64$1.parse(id)) + '.json';\n      return keyFolder\n        .file(filename)\n        .setText(JSON.stringify({ archived: archived, deleted: deleted, sortIndex: sortIndex, id: id }))\n    })\n  )\n}\n\n/**\n * Given a list of new key states, as well as the existing list,\n * writes out the ones that have changed, and returns the combined list.\n */\nfunction changeKeyStates (state, keyId, keyStates, newStates) {\n  // Find the changes between the new states and the old states:\n  var toWrite = {};\n  for (var i = 0, list = Object.keys(newStates); i < list.length; i += 1) {\n    var id = list[i];\n\n    if (keyStates[id] == null) {\n      // We don't have this id, so everything is new:\n      toWrite[id] = newStates[id];\n    } else if (different(keyStates[id], newStates[id])) {\n      // We already have this id, so only update if it has changed:\n      toWrite[id] = Object.assign({}, keyStates[id], newStates[id]);\n    }\n  }\n\n  return saveKeyStates(state, keyId, toWrite).then(function () { return (Object.assign({}, keyStates,\n    toWrite)); })\n}\n\nfunction findAppLogin (loginTree, appId) {\n  return searchTree(loginTree, function (login) { return login.appId === appId; })\n}\n\nfunction checkLogin (login) {\n  if (login == null || login.loginKey == null) {\n    throw new Error('Incomplete login')\n  }\n}\n\n/**\n * Creates a child login under the provided login, with the given appId.\n */\nfunction createChildLogin (io, loginTree, login, appId, wantRepo) {\n  if ( wantRepo === void 0 ) wantRepo = true;\n\n  var username = loginTree.username;\n  checkLogin(login);\n\n  var opts = { pin: loginTree.pin };\n  if (wantRepo) {\n    opts.keyInfo = makeStorageKeyInfo(io, makeAccountType(appId));\n  }\n  return makeCreateKit(io, login, appId, username, opts).then(function (kit) {\n    var parentKit = {\n      serverPath: kit.serverPath,\n      server: kit.server,\n      login: { children: [kit.login] },\n      stash: { children: [kit.stash] },\n      loginId: login.loginId\n    };\n    return applyKit(io, loginTree, parentKit)\n  })\n}\n\n/**\n * Ensures that the loginTree contains an account for the specified appId.\n * @return A `Promise`, which will resolve to a loginTree that does have\n * the requested account.\n */\nfunction ensureAccountExists (io, loginTree, appId) {\n  var accountType = makeAccountType(appId);\n\n  // If there is no app login, make that:\n  var login = findAppLogin(loginTree, appId);\n  if (login == null) {\n    return createChildLogin(io, loginTree, loginTree, appId, true)\n  }\n\n  // Otherwise, make the repo:\n  if (findFirstKey(login.keyInfos, accountType) == null) {\n    checkLogin(login);\n    var keyInfo = makeStorageKeyInfo(io, accountType);\n    var keysKit = makeKeysKit(io, login, keyInfo);\n    return applyKit(io, loginTree, keysKit)\n  }\n\n  // Everything is fine, so do nothing:\n  return Promise.resolve(loginTree)\n}\n\n/**\n * This is the data an account contains, and the methods to update it.\n */\nvar AccountState = function AccountState (io, appId, loginTree, keyInfo) {\n  // Constant stuff:\n  this.io = io;\n  this.appId = appId;\n  this.keyInfo = keyInfo;\n\n  // Login state:\n  this.loginTree = loginTree;\n  this.login = findAppLogin(loginTree, this.appId);\n  this.legacyKeyInfos = [];\n  this.keyStates = {};\n};\n\nAccountState.prototype.logout = function logout () {\n    var this$1 = this;\n\n  return new Promise(function (resolve, reject) {\n    this$1.io = null;\n    this$1.appId = null;\n    this$1.keyInfo = null;\n\n    // Login state:\n    this$1.loginTree = null;\n    this$1.login = null;\n    this$1.legacyKeyInfos = null;\n    this$1.keyStates = null;\n    resolve();\n  })\n};\n\nAccountState.prototype.changePassword = function changePassword (password, login) {\n    var this$1 = this;\n    if ( login === void 0 ) login = this.loginTree;\n\n  var ref = this;\n    var io = ref.io;\n    var username = ref.loginTree.username;\n  checkLogin(login);\n\n  return makePasswordKit(io, login, username, password).then(function (kit) { return this$1.applyKit(kit); }\n  )\n};\n\nAccountState.prototype.changePin = function changePin (pin, login) {\n    if ( login === void 0 ) login = this.login;\n\n  var ref = this;\n    var io = ref.io;\n    var username = ref.loginTree.username;\n  checkLogin(login);\n\n  var kit = makePin2Kit(io, login, username, pin);\n  return this.applyKit(kit)\n};\n\nAccountState.prototype.changeRecovery = function changeRecovery (questions, answers, login) {\n    if ( login === void 0 ) login = this.loginTree;\n\n  var ref = this;\n    var io = ref.io;\n    var username = ref.loginTree.username;\n  checkLogin(login);\n\n  var kit = makeRecovery2Kit(io, login, username, questions, answers);\n  return this.applyKit(kit)\n};\n\nAccountState.prototype.applyKit = function applyKit$1 (kit) {\n    var this$1 = this;\n\n  return applyKit(this.io, this.loginTree, kit).then(function (loginTree) {\n    this$1.loginTree = loginTree;\n    this$1.login = findAppLogin(loginTree, this$1.appId);\n    return this$1\n  })\n};\n\nAccountState.prototype.changeKeyStates = function changeKeyStates$1 (newStates) {\n    var this$1 = this;\n\n  var ref = this;\n    var io = ref.io;\n    var keyInfo = ref.keyInfo;\n    var keyStates = ref.keyStates;\n  return changeKeyStates(\n    io.redux.getState(),\n    keyInfo.id,\n    keyStates,\n    newStates\n  ).then(function (keyStates) {\n    this$1.keyStates = keyStates;\n    return void 0\n  })\n};\n\nAccountState.prototype.reloadKeyStates = function reloadKeyStates () {\n    var this$1 = this;\n\n  var ref = this;\n    var io = ref.io;\n    var keyInfo = ref.keyInfo;\n  return loadAllKeyStates(io.redux.getState(), keyInfo.id).then(function (values) {\n    var keyInfos = values.keyInfos;\n      var keyStates = values.keyStates;\n    this$1.legacyKeyInfos = keyInfos;\n    this$1.keyStates = keyStates;\n    return this$1\n  })\n};\n\nfunction makeAccountState (io, appId, loginTree) {\n  return ensureAccountExists(io, loginTree, appId).then(function (loginTree) {\n    // Find our repo:\n    var type = makeAccountType(appId);\n    var login = findAppLogin(loginTree, appId);\n    var keyInfo = findFirstKey(login.keyInfos, type);\n    if (keyInfo == null) {\n      throw new Error((\"Cannot find a \\\"\" + type + \"\\\" repo\"))\n    }\n\n    return io.redux.dispatch(addStorageWallet(keyInfo)).then(function () {\n      var account = new AccountState(io, appId, loginTree, keyInfo);\n      var disposer = io.redux.dispatch(\n        createReaction(\n          function (state) { return getStorageWalletLastSync(state, keyInfo.id); },\n          function () { return account.reloadKeyStates(); }\n        )\n      );\n      return disposer.payload.out.then(function () { return account; })\n    })\n  })\n}\n\n/**\n * Creates an `ExchangeCache` API object.\n */\nfunction makeExchangeCache (io) {\n  var redux$$1 = io.redux;\n\n  return wrapObject(\n    io.onError,\n    'ExchangeCache',\n    makeExchangeCacheApi(redux$$1.dispatch, redux$$1.getState)\n  )\n}\n\n/**\n * Creates an unwrapped exchange cache API object.\n */\nfunction makeExchangeCacheApi (dispatch, getState) {\n  /**\n   * TODO: Once the user has an exchange-rate preference,\n   * look that up and bias in favor of the preferred exchange.\n   */\n  function getPairCost (source, age, inverse) {\n    // The age curve goes from 0 to 1, with 1 being infinitely old.\n    // The curve reaches half way (0.5) at 30 seconds in:\n    var ageCurve = age / (30 + age);\n\n    return 1 + 0.1 * inverse + ageCurve // + 2 * isWrongExchange()\n  }\n\n  var out = {\n    '@convertCurrency': { sync: true },\n    convertCurrency: function convertCurrency (fromCurrency, toCurrency, amount) {\n      if ( amount === void 0 ) amount = 1;\n\n      var rate = getExchangeRate(\n        getState(),\n        fromCurrency,\n        toCurrency,\n        getPairCost\n      );\n      return amount * rate\n    }\n  };\n\n  return out\n}\n\n/**\n * Creates an `Account` API object.\n */\nfunction makeAccount (io, appId, loginTree, loginType) {\n  return makeAccountState(io, appId, loginTree).then(function (state) { return wrapObject(io.onError, 'Account', makeAccountApi(state, loginType)); }\n  )\n}\n\n/**\n * Creates an unwrapped account API object around an account state object.\n */\nfunction makeAccountApi (state, loginType) {\n  var io = state.io;\n  var appId = state.appId;\n  var keyInfo = state.keyInfo;\n  var callbacks = {};\n\n  var exchangeCache = makeExchangeCache(io);\n\n  var out = {\n    get appId () {\n      return state.login.appId\n    },\n    get username () {\n      return state.loginTree.username\n    },\n    get loginKey () {\n      return base58.stringify(state.login.loginKey)\n    },\n\n    // Exchange cache:\n    get exchangeCache () {\n      return exchangeCache\n    },\n\n    // Flags:\n    get loggedIn () {\n      return state.loginTree != null\n    },\n    keyLogin: loginType === 'keyLogin',\n    pinLogin: loginType === 'pinLogin',\n    passwordLogin: loginType === 'passwordLogin',\n    newAccount: loginType === 'newAccount',\n    recoveryLogin: loginType === 'recoveryLogin',\n    get edgeLogin () {\n      return state.loginTree.loginKey == null\n    },\n    '@isLoggedIn': { sync: true },\n    isLoggedIn: function isLoggedIn () {\n      return state.loginTree != null\n    },\n\n    logout: function logout () {\n      return state.logout()\n    },\n\n    passwordOk: function passwordOk (password) {\n      return checkPassword(io, state.loginTree, password)\n    },\n\n    passwordSetup: function passwordSetup (password) {\n      return state.changePassword(password)\n    },\n\n    pinSetup: function pinSetup (pin) {\n      return state\n        .changePin(pin)\n        .then(function () { return base58.stringify(state.login.pin2Key); })\n    },\n\n    recovery2Set: function recovery2Set (questions, answers) {\n      return state\n        .changeRecovery(questions, answers)\n        .then(function () { return base58.stringify(state.loginTree.recovery2Key); })\n    },\n\n    /**\n     * Retrieves all the keys that are available to this login object.\n     */\n    get allKeys () {\n      var keyStates = state.keyStates;\n      var legacyKeyInfos = state.legacyKeyInfos;\n      var login = state.login;\n      var allKeys = mergeKeyInfos(softCat(legacyKeyInfos, login.keyInfos));\n\n      return allKeys.map(function (info) { return (Object.assign({}, {appId: appId,\n        archived: false,\n        deleted: false,\n        sortIndex: allKeys.length},\n        keyStates[info.id],\n        info)); })\n    },\n\n    /**\n     * Adjusts the sort, archive, or deletion state of keys.\n     */\n    changeKeyStates: function changeKeyStates (keyStates) {\n      return state.changeKeyStates(keyStates)\n    },\n\n    '@listWalletIds': { sync: true },\n    listWalletIds: function listWalletIds () {\n      return state.login.keyInfos.map(function (info) { return info.id; })\n    },\n\n    '@getWallet': { sync: true },\n    getWallet: function getWallet (id) {\n      var info = state.login.keyInfos.find(function (info) { return info.id === id; });\n      return info\n    },\n\n    /**\n     * Gets the first wallet in an account (the first by sort order).\n     * If type is a string, finds the first wallet with the same type.\n     * Might return null if there are no wallets.\n     */\n    '@getFirstWallet': { sync: true },\n    getFirstWallet: function getFirstWallet (type) {\n      return findFirstKey(this.allKeys, type)\n    },\n\n    /**\n     * Creates a new wallet repo, and attaches it to the account.\n     * @param keys An object with any user-provided keys\n     * that should be stored along with the wallet. For example,\n     * Airbitz Bitcoin wallets would place their `bitcoinKey` here.\n     */\n    createWallet: function createWallet (type, keys) {\n      var keyInfo = makeStorageKeyInfo(io, type, keys);\n      var kit = makeKeysKit(io, state.login, keyInfo);\n      return state.applyKit(kit).then(function () { return keyInfo.id; })\n    }\n  };\n  copyProperties(out, makeStorageWalletApi(io.redux, keyInfo, callbacks));\n\n  out.checkPassword = out.passwordOk;\n  out.changePassword = out.passwordSetup;\n  out.changePIN = out.pinSetup;\n  out.setupRecovery2Questions = out.recovery2Set;\n\n  return out\n}\n\nvar EC = elliptic.ec;\nvar secp256k1 = new EC('secp256k1');\n\n/**\n * Derives a shared secret from the given secret key and public key.\n */\nfunction deriveSharedKey (keypair, pubkey) {\n  var secretX = keypair\n    .derive(secp256k1.keyFromPublic(pubkey).getPublic())\n    .toArray('be');\n\n  // From NIST.SP.800-56Ar2 section 5.8.1:\n  return hmacSha256([0, 0, 0, 1 ].concat( secretX), utf8.parse('dataKey'))\n}\n\n/**\n * Decrypts a lobby reply using the request's secret key.\n */\nfunction decryptLobbyReply (keypair, lobbyReply) {\n  var pubkey = base64$1.parse(lobbyReply.publicKey);\n  var sharedKey = deriveSharedKey(keypair, pubkey);\n  return JSON.parse(utf8.stringify(decrypt(lobbyReply.box, sharedKey)))\n}\n\n/**\n * Encrypts a lobby reply JSON replyData, and returns a reply\n * suitable for sending to the server.\n */\n\n\nfunction scheduleLobbyPoll (watcher) {\n  if (!watcher.done) {\n    watcher.timeout = setTimeout(function () { return pollLobby(watcher); }, watcher.period);\n  }\n}\n\nfunction pollLobby (watcher) {\n  var io = watcher.io;\n  var lobbyId = watcher.lobbyId;\n  var keypair = watcher.keypair;\n  var onReply = watcher.onReply;\n  var onError = watcher.onError;\n\n  return io\n    .authRequest('GET', '/v2/lobby/' + lobbyId, '')\n    .then(function (reply) {\n      while (watcher.replyCount < reply.replies.length) {\n        var lobbyReply = reply.replies[watcher.replyCount];\n        if (onReply) {\n          onReply(decryptLobbyReply(keypair, lobbyReply));\n        }\n        ++watcher.replyCount;\n      }\n      return watcher\n    })\n    .then(scheduleLobbyPoll)\n    .catch(function (e) {\n      if (onError) { onError(e); }\n      return watcher\n    })\n}\n\n/**\n * Approximates the proposed ES `Observable` interface,\n * allowing clients to subscribe to lobby reply messages.\n */\nvar ObservableLobby = function ObservableLobby (io, lobbyId, keypair) {\n  this.io = io;\n  this.lobbyId = lobbyId;\n  this.keypair = keypair;\n};\n\nObservableLobby.prototype.subscribe = function subscribe (onReply, onError, period) {\n    var this$1 = this;\n    if ( period === void 0 ) period = 1000;\n\n  this.onReply = onReply;\n  this.onError = onError;\n  this.period = period;\n  this.replyCount = 0;\n  this.done = false;\n  pollLobby(this);\n\n  var subscription = {\n    unsubscribe: function () {\n      this$1.done = true;\n      if (this$1.timeout != null) {\n        clearTimeout(this$1.timeout);\n      }\n    }\n  };\n  return subscription\n};\n\n/**\n * Creates a new lobby on the auth server holding the given request.\n * @return A lobby watcher object that will check for incoming replies.\n */\nfunction makeLobby (io, lobbyRequest) {\n  var keypair = secp256k1.genKeyPair({ entropy: io.random(32) });\n  var pubkey = keypair.getPublic().encodeCompressed();\n  if (lobbyRequest.timeout == null) {\n    lobbyRequest.timeout = 600;\n  }\n  lobbyRequest.publicKey = base64$1.stringify(pubkey);\n\n  var lobbyId = base58.stringify(sha256(sha256(pubkey)).slice(0, 10));\n\n  var request = {\n    data: lobbyRequest\n  };\n  return io.authRequest('PUT', '/v2/lobby/' + lobbyId, request).then(function (reply) {\n    return new ObservableLobby(io, lobbyId, keypair)\n  })\n}\n\n/**\n * Fetches a lobby request from the auth server.\n * @return A promise of the lobby request JSON.\n */\n\n\n/**\n * Encrypts and sends a reply to a lobby request.\n */\n\n/**\n * The public API for edge login requests.\n */\nvar ABCEdgeLoginRequest = function ABCEdgeLoginRequest (lobbyId, subscription) {\n  this.id = lobbyId;\n  this.cancelRequest = function () { return subscription.unsubscribe(); };\n};\n\n/**\n * Turns a reply into a logged-in account.\n */\nfunction onReply (io, subscription, reply, appId, opts) {\n  subscription.unsubscribe();\n  var stashTree = reply.loginStash;\n\n  if (opts.onProcessLogin != null) {\n    opts.onProcessLogin(stashTree.username);\n  }\n\n  // Find the appropriate child:\n  var child = searchTree(stashTree, function (stash) { return stash.appId === appId; });\n  if (child == null) {\n    throw new Error((\"Cannot find requested appId: \\\"\" + appId + \"\\\"\"))\n  }\n\n  // The Airbitz mobile will sometimes send the pin2Key in base58\n  // instead of base64 due to an unfortunate bug. Fix that:\n  if (child.pin2Key != null && child.pin2Key.slice(-1) !== '=') {\n    io.console.warn('Fixing base58 pin2Key');\n    child.pin2Key = base64$1.stringify(base58.parse(child.pin2Key));\n  }\n  io.loginStore.save(stashTree);\n\n  // This is almost guaranteed to blow up spectacularly:\n  var loginKey = base64$1.parse(reply.loginKey);\n  var loginTree = makeLoginTree(stashTree, loginKey, appId);\n  if (opts.onLogin != null) {\n    opts.onLogin(null, loginTree);\n  }\n}\n\nfunction onError$1 (lobby, e, opts) {\n  if (opts.onLogin != null) {\n    opts.onLogin(e);\n  }\n}\n\n/**\n * Creates a new account request lobby on the server.\n */\nfunction requestEdgeLogin (io, appId, opts) {\n  var request = {\n    loginRequest: {\n      appId: appId,\n      displayImageUrl: opts.displayImageUrl,\n      displayName: opts.displayName\n    }\n  };\n\n  return makeLobby(io, request).then(function (lobby) {\n    var subscription = lobby.subscribe(\n      function (reply) { return onReply(io, subscription, reply, appId, opts); },\n      function (e) { return onError$1(lobby, e, opts); }\n    );\n    return new ABCEdgeLoginRequest(lobby.lobbyId, subscription)\n  })\n}\n\n/**\n * Extracts the io functions we need from the browser.\n */\nfunction makeBrowserIo () {\n  var out = {};\n\n  if (typeof console !== 'undefined') {\n    out.console = console;\n  }\n\n  if (typeof window !== 'undefined') {\n    out.fetch = function () {\n      var rest = [], len = arguments.length;\n      while ( len-- ) rest[ len ] = arguments[ len ];\n\n      return window.fetch.apply(window, rest);\n    };\n    out.localStorage = window.localStorage;\n\n    if (window.crypto != null && window.crypto.getRandomValues != null) {\n      out.random = function (size) {\n        var out = new Uint8Array(size);\n        window.crypto.getRandomValues(out);\n        return out\n      };\n    }\n  }\n\n  return out\n}\n\nfunction scrypt$1 (data, salt, n, r, p, dklen) {\n  return new Promise(function (resolve, reject) {\n    var callback = function (error, progress, key) {\n      if (error) { return reject(error) }\n      if (key) { return resolve(key) }\n    };\n\n    __WEBPACK_IMPORTED_MODULE_6_scrypt_js___default()(data, salt, n, r, p, dklen, callback);\n  })\n}\n\nfunction makeStore () {\n  return Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"c\" /* createStore */])(reducer, Object(__WEBPACK_IMPORTED_MODULE_4_redux__[\"a\" /* applyMiddleware */])(__WEBPACK_IMPORTED_MODULE_7_redux_thunk___default.a, reactionMiddleware))\n}\n\nfunction parseReply (json) {\n  switch (json.status_code) {\n    case 0: // Success\n      return json.results\n\n    case 2: // Account exists\n      throw new UsernameError('Account already exists on server')\n\n    case 3: // Account does not exist\n      throw new UsernameError('Account does not exist on server')\n\n    case 4: // Invalid password\n    case 5: // Invalid answers\n      throw new PasswordError(json.results)\n\n    case 6: // Invalid API key\n      throw new Error('Invalid API key')\n\n    case 8: // Invalid OTP\n      throw new OtpError(json.results)\n\n    case 1000: // Endpoint obsolete\n      throw new ObsoleteApiError()\n\n    case 1: // Error\n    case 7: // Pin expired\n    default:\n      var message = json.message || json.detail || JSON.stringify(json);\n      throw new Error((\"Server error: \" + message))\n  }\n}\n\nvar AuthServer = function AuthServer (io, apiKey, authServer) {\n  // if (apiKey == null) throw new TypeError('No API key provided')\n\n  this.io = io;\n  this.apiKey = apiKey;\n  this.authServer = authServer;\n};\n\n/**\n * Wraps the raw `fetch` API with the headers and error processing needed\n * to talk to the auth server.\n * @param body JSON object to send\n * @return a promise of the server's JSON reply\n */\nAuthServer.prototype.request = function request (method, path, body) {\n  var opts = {\n    method: method,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: 'Token ' + this.apiKey\n    }\n  };\n  if (method !== 'GET') {\n    opts.body = JSON.stringify(body);\n  }\n\n  var uri = this.authServer + path;\n  this.io.console.info((method + \" \" + uri));\n  return timeout(\n    this.io.fetch(uri, opts).then(\n      function (response) { return response.json().then(parseReply, function (jsonError) {\n          throw new Error('Non-JSON reply, HTTP status ' + response.status)\n        }); },\n      function (networkError) {\n        throw new NetworkError('Could not reach the auth server')\n      }\n    ),\n    10000,\n    new NetworkError('Could not reach the auth server: timeout')\n  )\n};\n\n/**\n * Checks the properties of an `io` object,\n * upgrading obsolete ones and verifying that we have all necessary ones.\n */\nfunction fixIo (io) {\n  var out = {};\n\n  // Copy native io resources:\n  var keys = ['console', 'fetch', 'folder', 'random', 'scrypt'];\n  for (var i = 0, list = keys; i < list.length; i += 1) {\n    var key = list[i];\n\n    out[key] = io[key];\n  }\n\n  // If there is no native folder, try `localStorage` instead:\n  if (out.folder == null && io.localStorage != null) {\n    out.folder = Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"b\" /* makeLocalStorageFolder */])(io.localStorage, {\n      prefix: 'airbitz'\n    });\n  }\n\n  // If there is no scrypt, use the JS one:\n  if (out.scrypt == null) {\n    out.scrypt = scrypt$1;\n  }\n\n  // Verify that we have what we need:\n  for (var i$1 = 0, list$1 = keys; i$1 < list$1.length; i$1 += 1) {\n    var key$1 = list$1[i$1];\n\n    if (out[key$1] == null) {\n      throw new Error((\"Could not find \\\"\" + key$1 + \"\\\" in the environment\"))\n    }\n  }\n\n  return out\n}\n\n/**\n * Constructs an object containing the io resources used in this library,\n * along with the wrappers and caches needed to make use of them.\n */\nvar IoContext = function IoContext (nativeIo, opts) {\n  var this$1 = this;\n  if ( opts === void 0 ) opts = {};\n\n  var onErrorDefault = function (error, name) { return this$1.console.error(name, error); };\n\n  var apiKey = opts.apiKey;\n  var authServer = opts.authServer; if ( authServer === void 0 ) authServer = 'https://auth.airbitz.co/api';\n  var callbacks = opts.callbacks; if ( callbacks === void 0 ) callbacks = {};\n  var plugins = opts.plugins; if ( plugins === void 0 ) plugins = [];\n  var onError = callbacks.onError; if ( onError === void 0 ) onError = onErrorDefault;\n\n  // Copy native io resources:\n  var fixedIo = fixIo(nativeIo);\n  Object.assign(this, fixedIo);\n\n  // Set up wrapper objects:\n  this.onError = onError;\n  this.authServer = new AuthServer(this, apiKey, authServer);\n  this.loginStore = new LoginStore(this);\n  this.redux = makeStore();\n  this.redux.dispatch(initStore(fixedIo, onError));\n  this.redux\n    .dispatch(setupPlugins(fixedIo, plugins))\n    .then(function () { return this$1.redux.dispatch(fetchExchangeRates()); });\n};\n\nIoContext.prototype.authRequest = function authRequest () {\n    var rest = [], len = arguments.length;\n    while ( len-- ) rest[ len ] = arguments[ len ];\n\n  return (ref = this.authServer).request.apply(ref, rest)\n    var ref;\n};\n\nfunction makeContext (opts) {\n  var io = new IoContext(opts.io != null ? opts.io : makeBrowserIo(), opts);\n  var appId =\n    opts.appId != null\n      ? opts.appId\n      : opts.accountType != null\n        ? opts.accountType.replace(/^account.repo:/, '')\n        : '';\n\n  var out = wrapObject(io.onError, 'Context', {\n    io: io,\n    appId: appId,\n\n    '@fixUsername': { sync: true },\n    fixUsername: function fixUsername$1 (username) {\n      return fixUsername(username)\n    },\n\n    listUsernames: function listUsernames () {\n      return io.loginStore.listUsernames()\n    },\n\n    removeUsername: function removeUsername (username) {\n      return io.loginStore.remove(username)\n    },\n\n    usernameAvailable: function usernameAvailable$1 (username) {\n      return usernameAvailable(io, username)\n    },\n\n    createAccount: function createAccount (username, password, pin) {\n      return createLogin(io, username, {\n        password: password,\n        pin: pin\n      }).then(function (loginTree) {\n        return makeAccount(io, appId, loginTree, 'newAccount')\n      })\n    },\n\n    loginWithKey: function loginWithKey (username, loginKey) {\n      return io.loginStore.load(username).then(function (stashTree) {\n        var loginTree = makeLoginTree(\n          stashTree,\n          base58.parse(loginKey),\n          appId\n        );\n        return makeAccount(io, appId, loginTree, 'keyLogin')\n      })\n    },\n\n    loginWithPassword: function loginWithPassword (username, password) {\n      return loginPassword(io, username, password).then(function (loginTree) {\n        return makeAccount(io, appId, loginTree, 'passwordLogin')\n      })\n    },\n\n    '@checkPasswordRules': { sync: true },\n    checkPasswordRules: function checkPasswordRules$1 (password) {\n      return checkPasswordRules(password)\n    },\n\n    pinExists: function pinExists (username) {\n      return io.loginStore\n        .load(username)\n        .then(function (loginStash) { return getPin2Key(loginStash, appId).pin2Key != null; })\n    },\n\n    pinLoginEnabled: function pinLoginEnabled (username) {\n      return this.pinExists(username)\n    },\n\n    loginWithPIN: function loginWithPIN (username, pin) {\n      return loginPin2(io, appId, username, pin).then(function (loginTree) {\n        return makeAccount(io, appId, loginTree, 'pinLogin')\n      })\n    },\n\n    getRecovery2Key: function getRecovery2Key$1 (username) {\n      return io.loginStore.load(username).then(function (loginStash) {\n        var recovery2Key = getRecovery2Key(loginStash);\n        if (recovery2Key == null) {\n          throw new Error('No recovery key stored locally.')\n        }\n        return base58.stringify(recovery2Key)\n      })\n    },\n\n    loginWithRecovery2: function loginWithRecovery2 (recovery2Key, username, answers) {\n      recovery2Key = base58.parse(recovery2Key);\n      return loginRecovery2(\n        io,\n        recovery2Key,\n        username,\n        answers\n      ).then(function (loginTree) {\n        return makeAccount(io, appId, loginTree, 'recoveryLogin')\n      })\n    },\n\n    fetchRecovery2Questions: function fetchRecovery2Questions (recovery2Key, username) {\n      recovery2Key = base58.parse(recovery2Key);\n      return getQuestions2(io, recovery2Key, username)\n    },\n\n    listRecoveryQuestionChoices: function listRecoveryQuestionChoices$1 () {\n      return listRecoveryQuestionChoices(io)\n    },\n\n    requestEdgeLogin: function requestEdgeLogin$1 (opts) {\n      var onLogin = opts.onLogin;\n      opts.onLogin = function (err, loginTree) {\n        if (err) { return onLogin(err) }\n        makeAccount(io, appId, loginTree).then(\n          function (account) { return onLogin(null, account); },\n          function (err) { return onLogin(err); }\n        );\n      };\n      return requestEdgeLogin(io, appId, opts)\n    }\n  });\n\n  out.usernameList = out.listUsernames;\n\n  return out\n}\n\n// We are exporting some internal goodies for the CLI,\n// which makes use of some undocumented core features.\n// In the future we hope to minimize / reduce this\n\n\n\n\nvar internal = Object.freeze({\n\thashUsername: hashUsername,\n\tmakeLobby: makeLobby,\n\trejectify: rejectify,\n\tserialize: serialize,\n\tbase16: base16$1,\n\tbase58: base58,\n\tbase64: base64$1,\n\tutf8: utf8,\n\telvis: elvis,\n\tfilterObject: filterObject,\n\tsoftCat: softCat,\n\tmergeDeeply: mergeDeeply\n});\n\nvar routes = [];\n\n/**\n * Wires one or more handlers into the routing table.\n */\nfunction addRoute$1 (method, path) {\n  var handlers = [], len = arguments.length - 2;\n  while ( len-- > 0 ) handlers[ len ] = arguments[ len + 2 ];\n\n  for (var i = 0, list = handlers; i < list.length; i += 1) {\n    var handler = list[i];\n\n    routes.push({\n      method: method,\n      path: new RegExp((\"^\" + path + \"$\")),\n      handler: handler\n    });\n  }\n}\n\n/**\n * Finds all matching handlers in the routing table.\n */\nfunction findRoute (method, path) {\n  return routes\n    .filter(function (route) {\n      return route.method === method && route.path.test(path)\n    })\n    .map(function (route) { return route.handler; })\n}\n\nvar errorCodes = {\n  success: 0,\n  error: 1,\n  accountExists: 2,\n  noAccount: 3,\n  invalidPassword: 4,\n  invalidAnswers: 5,\n  invalidApiKey: 6,\n  invalidOtp: 8,\n  conflict: 10,\n  obsolete: 1000\n};\n\nvar FakeResponse = function FakeResponse (body, opts) {\n  if ( body === void 0 ) body = '';\n  if ( opts === void 0 ) opts = {};\n\n  this.body = body;\n  this.status = opts.status || 200;\n  this.statusText = opts.statusText || 'OK';\n  this.ok = this.status >= 200 && this.status < 300;\n};\n\nFakeResponse.prototype.json = function json () {\n  try {\n    return Promise.resolve(JSON.parse(this.body))\n  } catch (e) {\n    return Promise.reject(e)\n  }\n};\n\nFakeResponse.prototype.text = function text () {\n  return Promise.resolve(this.body)\n};\n\nfunction makeResponse (results) {\n  var reply = {\n    status_code: 0\n  };\n  if (results != null) {\n    reply.results = results;\n  }\n  return new FakeResponse(JSON.stringify(reply))\n}\n\nfunction makeErrorResponse (code, message, status) {\n  if ( message === void 0 ) message = '';\n  if ( status === void 0 ) status = 500;\n\n  var body = {\n    status_code: code,\n    message: message || 'Server error'\n  };\n  return new FakeResponse(JSON.stringify(body), { status: status })\n}\n\n// Authentication middleware: ----------------------------------------------\n\n/**\n * Verifies that the request contains valid v1 authenticaion.\n */\nfunction authHandler1 (req) {\n  // Password login:\n  if (req.body.l1 != null && req.body.lp1 != null) {\n    var login = this.findLoginId(req.body.l1);\n    if (login == null) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.lp1 !== login.passwordAuth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    req.login = login;\n    return\n  }\n  return makeErrorResponse(errorCodes.error, 'Missing credentials')\n}\n\n/**\n * Verifies that the request contains valid v2 authenticaion.\n */\nfunction authHandler (req) {\n  // Token login:\n  if (req.body.loginId != null && req.body.loginAuth != null) {\n    var login = this.findLoginId(req.body.loginId);\n    if (login == null) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.loginAuth !== login.loginAuth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    req.login = login;\n    return\n  }\n\n  // Password login:\n  if (req.body.userId != null && req.body.passwordAuth != null) {\n    var login$1 = this.findLoginId(req.body.userId);\n    if (login$1 == null) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.passwordAuth !== login$1.passwordAuth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    req.login = login$1;\n    return\n  }\n\n  // PIN2 login:\n  if (req.body.pin2Id != null && req.body.pin2Auth != null) {\n    var login$2 = this.findPin2Id(req.body.pin2Id);\n    if (login$2 == null) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    if (req.body.pin2Auth !== login$2.pin2Auth) {\n      return makeErrorResponse(errorCodes.invalidPassword)\n    }\n    req.login = login$2;\n    return\n  }\n\n  // Recovery2 login:\n  if (req.body.recovery2Id != null && req.body.recovery2Auth != null) {\n    var login$3 = this.findRecovery2Id(req.body.recovery2Id);\n    if (login$3 == null) {\n      return makeErrorResponse(errorCodes.noAccount)\n    }\n    var serverAuth = login$3.recovery2Auth;\n    var clientAuth = req.body.recovery2Auth;\n    if (clientAuth.length !== serverAuth.length) {\n      return makeErrorResponse(errorCodes.invalidAnswers)\n    }\n    for (var i = 0; i < clientAuth.length; ++i) {\n      if (clientAuth[i] !== serverAuth[i]) {\n        return makeErrorResponse(errorCodes.invalidAnswers)\n      }\n    }\n    req.login = login$3;\n    return\n  }\n  return makeErrorResponse(errorCodes.error, 'Missing credentials')\n}\n\n// Account lifetime v1: ----------------------------------------------------\n\naddRoute$1('POST', '/api/v1/account/available', function (req) {\n  if (this.findLoginId(req.body.l1)) {\n    return makeErrorResponse(errorCodes.accountExists)\n  }\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v1/account/create', function (req) {\n  if (this.findLoginId(req.body.l1)) {\n    return makeErrorResponse(errorCodes.accountExists)\n  }\n\n  var carePackage = JSON.parse(req.body.care_package);\n  var loginPackage = JSON.parse(req.body.login_package);\n  this.db.logins.push({\n    appId: '',\n    loginId: req.body.l1,\n    passwordAuth: req.body.lp1,\n    passwordKeySnrp: carePackage.SNRP2,\n    passwordAuthBox: loginPackage.ELP1,\n    passwordBox: loginPackage.EMK_LP2,\n    syncKeyBox: loginPackage.ESyncKey\n  });\n  this.repos[req.body.repo_account_key] = {};\n\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v1/account/activate', authHandler1, function (req) {\n  return makeResponse()\n});\n\n// Login v1: ---------------------------------------------------------------\n\naddRoute$1('POST', '/api/v1/account/carepackage/get', function (req) {\n  var login = this.findLoginId(req.body.l1);\n  if (login == null) {\n    return makeErrorResponse(errorCodes.noAccount)\n  }\n\n  return makeResponse({\n    care_package: JSON.stringify({\n      SNRP2: login.passwordKeySnrp\n    })\n  })\n});\n\naddRoute$1('POST', '/api/v1/account/loginpackage/get', authHandler1, function (\n  req\n) {\n  var results = {\n    login_package: JSON.stringify({\n      ELP1: req.login.passwordAuthBox,\n      EMK_LP2: req.login.passwordBox,\n      ESyncKey: req.login.syncKeyBox\n    })\n  };\n  if (req.login.rootKeyBox != null) {\n    results.rootKeyBox = req.login.rootKeyBox;\n  }\n  return makeResponse(results)\n});\n\n// PIN login v1: -----------------------------------------------------------\n\naddRoute$1('POST', '/api/v1/account/pinpackage/update', authHandler1, function (\n  req\n) {\n  this.db.pinKeyBox = JSON.parse(req.body.pin_package);\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v1/account/pinpackage/get', function (req) {\n  if (this.db.pinKeyBox == null) {\n    return makeErrorResponse(errorCodes.noAccount)\n  }\n  return makeResponse({\n    pin_package: JSON.stringify(this.db.pinKeyBox)\n  })\n});\n\n// Repo server v1: ---------------------------------------------------------\n\naddRoute$1('POST', '/api/v1/wallet/create', authHandler1, function (req) {\n  this.repos[req.body.repo_wallet_key] = {};\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v1/wallet/activate', authHandler1, function (req) {\n  return makeResponse()\n});\n\n// login v2: ---------------------------------------------------------------\n\naddRoute$1(\n  'POST',\n  '/api/v2/login',\n  function (req) {\n    if (req.body.userId != null && req.body.passwordAuth == null) {\n      var login = this.findLoginId(req.body.userId);\n      if (login == null) {\n        return makeErrorResponse(errorCodes.noAccount)\n      }\n      return makeResponse({\n        passwordAuthSnrp: login.passwordAuthSnrp\n      })\n    }\n    if (req.body.recovery2Id != null && req.body.recovery2Auth == null) {\n      var login$1 = this.findRecovery2Id(req.body.recovery2Id);\n      if (login$1 == null) {\n        return makeErrorResponse(errorCodes.noAccount)\n      }\n      return makeResponse({\n        question2Box: login$1.question2Box\n      })\n    }\n    return null\n  },\n  authHandler,\n  function (req) {\n    return makeResponse(this.makeReply(req.login))\n  }\n);\n\naddRoute$1('POST', '/api/v2/login/create', function (req) {\n  var this$1 = this;\n\n  var data = req.body.data;\n  if (\n    data.appId == null ||\n    data.loginId == null ||\n    this.db.logins.find(function (login) { return login.loginId === data.loginId; })\n  ) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  // Set up repos:\n  if (data.newSyncKeys != null) {\n    for (var i = 0, list = data.newSyncKeys; i < list.length; i += 1) {\n      var syncKey = list[i];\n\n      this$1.repos[syncKey] = {};\n    }\n  }\n\n  // Set up login object:\n  var row = filterObject(data, [\n    'appId',\n    'loginId',\n    'loginAuth',\n    'loginAuthBox',\n    'parentBox',\n    'passwordAuth',\n    'passwordAuthBox',\n    'passwordAuthSnrp',\n    'passwordBox',\n    'passwordKeySnrp',\n    'pin2Auth',\n    'pin2Box',\n    'pin2Id',\n    'pin2KeyBox',\n    'question2Box',\n    'recovery2Auth',\n    'recovery2Box',\n    'recovery2Id',\n    'recovery2KeyBox',\n    'mnemonicBox', // Used for testing, not part of the real server!\n    'rootKeyBox', // Same\n    'syncKeyBox', // Same\n    'repos'\n  ]);\n  if (req.body.loginId != null || req.body.userId != null) {\n    var e = authHandler.call(this, req);\n    if (e) { return e }\n\n    row.parent = req.login.loginId;\n  }\n  this.db.logins.push(row);\n\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v2/login/keys', authHandler, function (req) {\n  var this$1 = this;\n\n  var data = req.body.data;\n  if (data.keyBoxes == null) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  // Set up repos:\n  if (data.newSyncKeys != null) {\n    for (var i = 0, list = data.newSyncKeys; i < list.length; i += 1) {\n      var syncKey = list[i];\n\n      this$1.repos[syncKey] = {};\n    }\n  }\n\n  req.login.keyBoxes = softCat(req.login.keyBoxes, data.keyBoxes);\n\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v2/login/password', authHandler, function (req) {\n  var data = req.body.data;\n  if (\n    data.passwordAuth == null ||\n    data.passwordAuthBox == null ||\n    data.passwordAuthSnrp == null ||\n    data.passwordBox == null ||\n    data.passwordKeySnrp == null\n  ) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  req.login.passwordAuth = data.passwordAuth;\n  req.login.passwordAuthBox = data.passwordAuthBox;\n  req.login.passwordAuthSnrp = data.passwordAuthSnrp;\n  req.login.passwordBox = data.passwordBox;\n  req.login.passwordKeySnrp = data.passwordKeySnrp;\n\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v2/login/pin2', authHandler, function (req) {\n  var data = req.body.data;\n  if (\n    data.pin2Auth == null ||\n    data.pin2Box == null ||\n    data.pin2Id == null ||\n    data.pin2KeyBox == null\n  ) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  req.login.pin2Auth = data.pin2Auth;\n  req.login.pin2Box = data.pin2Box;\n  req.login.pin2Id = data.pin2Id;\n  req.login.pin2KeyBox = data.pin2KeyBox;\n\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v2/login/recovery2', authHandler, function (req) {\n  var data = req.body.data;\n  if (\n    data.question2Box == null ||\n    data.recovery2Auth == null ||\n    data.recovery2Box == null ||\n    data.recovery2Id == null ||\n    data.recovery2KeyBox == null\n  ) {\n    return makeErrorResponse(errorCodes.error)\n  }\n\n  req.login.question2Box = data.question2Box;\n  req.login.recovery2Auth = data.recovery2Auth;\n  req.login.recovery2Box = data.recovery2Box;\n  req.login.recovery2Id = data.recovery2Id;\n  req.login.recovery2KeyBox = data.recovery2KeyBox;\n\n  return makeResponse()\n});\n\n// lobby: ------------------------------------------------------------------\n\naddRoute$1('PUT', '/api/v2/lobby/.*', function (req) {\n  var pubkey = req.path.split('/')[4];\n  this.db.lobbies[pubkey] = { request: req.body.data, replies: [] };\n  return makeResponse()\n});\n\naddRoute$1('POST', '/api/v2/lobby/.*', function (req) {\n  var pubkey = req.path.split('/')[4];\n  this.db.lobbies[pubkey].replies.push(req.body.data);\n  return makeResponse()\n});\n\naddRoute$1('GET', '/api/v2/lobby/.*', function (req) {\n  var pubkey = req.path.split('/')[4];\n  if (this.db.lobbies[pubkey] == null) {\n    return new FakeResponse((\"Cannot find lobby \\\"\" + pubkey + \"\\\"\"), { status: 404 })\n  }\n  return makeResponse(this.db.lobbies[pubkey])\n});\n\naddRoute$1('DELETE', '/api/v2/lobby/.*', function (req) {\n  var pubkey = req.path.split('/')[4];\n  delete this.db.lobbies[pubkey];\n  return makeResponse()\n});\n\n// sync: -------------------------------------------------------------------\n\nfunction storeRoute (req) {\n  var elements = req.path.split('/');\n  var syncKey = elements[4];\n  // const hash = elements[5]\n\n  var repo = this.repos[syncKey];\n  if (repo == null) {\n    return new FakeResponse('Cannot find repo ' + syncKey, { status: 404 })\n  }\n\n  switch (req.method) {\n    case 'POST':\n      var changes = req.body.changes;\n      for (var i = 0, list = Object.keys(changes); i < list.length; i += 1) {\n        var change = list[i];\n\n    repo[change] = changes[change];\n      }\n      return new FakeResponse(\n        JSON.stringify({\n          changes: repo,\n          hash: '1111111111111111111111111111111111111111'\n        })\n      )\n\n    case 'GET':\n      return new FakeResponse(JSON.stringify({ changes: repo }))\n  }\n}\n\naddRoute$1('GET', '/api/v2/store/.*', storeRoute);\naddRoute$1('POST', '/api/v2/store/.*', storeRoute);\n\n/**\n * Emulates the Airbitz login server.\n */\nvar FakeServer = function FakeServer () {\n  var this$1 = this;\n\n  this.db = { lobbies: {}, logins: [] };\n  this.repos = {};\n  this.fetch = function (uri, opts) {\n    if ( opts === void 0 ) opts = {};\n\n    try {\n      return Promise.resolve(this$1.request(uri, opts))\n    } catch (e) {\n      return Promise.reject(e)\n    }\n  };\n};\n\nFakeServer.prototype.findLoginId = function findLoginId (loginId) {\n  if (loginId == null) { return }\n  return this.db.logins.find(function (login) { return login.loginId === loginId; })\n};\n\nFakeServer.prototype.findPin2Id = function findPin2Id (pin2Id) {\n  return this.db.logins.find(function (login) { return login.pin2Id === pin2Id; })\n};\n\nFakeServer.prototype.findRecovery2Id = function findRecovery2Id (recovery2Id) {\n  return this.db.logins.find(function (login) { return login.recovery2Id === recovery2Id; })\n};\n\nFakeServer.prototype.makeReply = function makeReply (login) {\n    var this$1 = this;\n\n  var reply = filterObject(login, [\n    'appId',\n    'loginId',\n    'loginAuthBox',\n    'parentBox',\n    'passwordAuthBox',\n    'passwordAuthSnrp',\n    'passwordBox',\n    'passwordKeySnrp',\n    'pin2Box',\n    'pin2KeyBox',\n    'question2Box',\n    'recovery2Box',\n    'recovery2KeyBox',\n    'mnemonicBox',\n    'rootKeyBox',\n    'syncKeyBox',\n    'keyBoxes'\n  ]);\n  reply.children = this.db.logins\n    .filter(function (child) { return child.parent === login.loginId; })\n    .map(function (child) { return this$1.makeReply(child); });\n  return reply\n};\n\nFakeServer.prototype.request = function request (uri, opts) {\n    var this$1 = this;\n\n  var req = {\n    method: opts.method || 'GET',\n    body: opts.body ? JSON.parse(opts.body) : null,\n    path: uri.replace(new RegExp('https?://[^/]*'), '')\n  };\n\n  var handlers = findRoute(req.method, req.path);\n  for (var i = 0, list = handlers; i < list.length; i += 1) {\n    var handler = list[i];\n\n      var out = handler.call(this$1, req);\n    if (out != null) {\n      return out\n    }\n  }\n  return makeErrorResponse(\n    errorCodes.error,\n    (\"Unknown API endpoint \" + (req.path)),\n    404\n  )\n};\n\n/**\n * Silences all logging.\n */\nvar fakeConsole = {\n  info: function () {},\n  warn: function () {},\n  error: function () {}\n};\n\n/**\n * Generates deterministic \"random\" data for unit-testing.\n */\nfunction makeFakeRandom () {\n  var seed = 0;\n\n  return function (bytes) {\n    var out = [];\n\n    for (var i = 0; i < bytes; ++i) {\n      // Simplest numbers that give a full-period generator with\n      // a good mix of high & low values within the first few bytes:\n      seed = (5 * seed + 3) & 0xff;\n      out[i] = seed;\n    }\n\n    return out\n  }\n}\n\n/**\n * Creates an array of io context objects.\n * Each object has its own storage, but all contexts share a server.\n * @param {number} count number of io contexts to create\n */\nfunction makeFakeIos (count) {\n  // The common server used by all contexts:\n  var server = new FakeServer();\n  var random = makeFakeRandom();\n\n  // Make the io objects:\n  var out = [];\n  for (var i = 0; i < count; ++i) {\n    out[i] = {\n      console: fakeConsole,\n      fetch: server.fetch,\n      folder: Object(__WEBPACK_IMPORTED_MODULE_5_disklet__[\"c\" /* makeMemoryFolder */])(),\n      random: random\n    };\n  }\n\n  return out\n}\n\n// Sub-module exports:\n/**\n * Same thing as `makeContext`, but corresponding to the documentation.\n */\nfunction makeABCContext (apiKey, appId, opts) {\n  return makeContext(Object.assign({}, {apiKey: apiKey, appId: appId}, opts))\n}\n\n\n//# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1700\n");

/***/ }),

/***/ 1701:
/***/ (function(module, exports) {

eval("// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var i = 0; i < ALPHABET.length; i++) {\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (string.length === 0) return []\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return bytes.reverse()\n  }\n\n  function decode (string) {\n    var array = decodeUnsafe(string)\n    if (array) return array\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9iYXNlLXgvaW5kZXguanM/YWNkMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQixxQkFBcUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLG1CQUFtQjtBQUN0Qyx3Q0FBd0MsbUJBQW1CO0FBQzNEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxtQkFBbUIsMENBQTBDO0FBQzdEO0FBQ0EsbUNBQW1DLFFBQVE7O0FBRTNDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQixtQkFBbUI7QUFDdEM7QUFDQTs7QUFFQSxvQ0FBb0Msa0JBQWtCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsK0NBQStDO0FBQ2xFO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTcwMS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGJhc2UteCBlbmNvZGluZ1xuLy8gRm9ya2VkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2NyeXB0b2NvaW5qcy9iczU4XG4vLyBPcmlnaW5hbGx5IHdyaXR0ZW4gYnkgTWlrZSBIZWFybiBmb3IgQml0Y29pbkpcbi8vIENvcHlyaWdodCAoYykgMjAxMSBHb29nbGUgSW5jXG4vLyBQb3J0ZWQgdG8gSmF2YVNjcmlwdCBieSBTdGVmYW4gVGhvbWFzXG4vLyBNZXJnZWQgQnVmZmVyIHJlZmFjdG9yaW5ncyBmcm9tIGJhc2U1OC1uYXRpdmUgYnkgU3RlcGhlbiBQYWlyXG4vLyBDb3B5cmlnaHQgKGMpIDIwMTMgQml0UGF5IEluY1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhc2UgKEFMUEhBQkVUKSB7XG4gIHZhciBBTFBIQUJFVF9NQVAgPSB7fVxuICB2YXIgQkFTRSA9IEFMUEhBQkVULmxlbmd0aFxuICB2YXIgTEVBREVSID0gQUxQSEFCRVQuY2hhckF0KDApXG5cbiAgLy8gcHJlLWNvbXB1dGUgbG9va3VwIHRhYmxlXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgQUxQSEFCRVQubGVuZ3RoOyBpKyspIHtcbiAgICBBTFBIQUJFVF9NQVBbQUxQSEFCRVQuY2hhckF0KGkpXSA9IGlcbiAgfVxuXG4gIGZ1bmN0aW9uIGVuY29kZSAoc291cmNlKSB7XG4gICAgaWYgKHNvdXJjZS5sZW5ndGggPT09IDApIHJldHVybiAnJ1xuXG4gICAgdmFyIGRpZ2l0cyA9IFswXVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc291cmNlLmxlbmd0aDsgKytpKSB7XG4gICAgICBmb3IgKHZhciBqID0gMCwgY2FycnkgPSBzb3VyY2VbaV07IGogPCBkaWdpdHMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgY2FycnkgKz0gZGlnaXRzW2pdIDw8IDhcbiAgICAgICAgZGlnaXRzW2pdID0gY2FycnkgJSBCQVNFXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgfCAwXG4gICAgICB9XG5cbiAgICAgIHdoaWxlIChjYXJyeSA+IDApIHtcbiAgICAgICAgZGlnaXRzLnB1c2goY2FycnkgJSBCQVNFKVxuICAgICAgICBjYXJyeSA9IChjYXJyeSAvIEJBU0UpIHwgMFxuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBzdHJpbmcgPSAnJ1xuXG4gICAgLy8gZGVhbCB3aXRoIGxlYWRpbmcgemVyb3NcbiAgICBmb3IgKHZhciBrID0gMDsgc291cmNlW2tdID09PSAwICYmIGsgPCBzb3VyY2UubGVuZ3RoIC0gMTsgKytrKSBzdHJpbmcgKz0gQUxQSEFCRVRbMF1cbiAgICAvLyBjb252ZXJ0IGRpZ2l0cyB0byBhIHN0cmluZ1xuICAgIGZvciAodmFyIHEgPSBkaWdpdHMubGVuZ3RoIC0gMTsgcSA+PSAwOyAtLXEpIHN0cmluZyArPSBBTFBIQUJFVFtkaWdpdHNbcV1dXG5cbiAgICByZXR1cm4gc3RyaW5nXG4gIH1cblxuICBmdW5jdGlvbiBkZWNvZGVVbnNhZmUgKHN0cmluZykge1xuICAgIGlmIChzdHJpbmcubGVuZ3RoID09PSAwKSByZXR1cm4gW11cblxuICAgIHZhciBieXRlcyA9IFswXVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdmFsdWUgPSBBTFBIQUJFVF9NQVBbc3RyaW5nW2ldXVxuICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVyblxuXG4gICAgICBmb3IgKHZhciBqID0gMCwgY2FycnkgPSB2YWx1ZTsgaiA8IGJ5dGVzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgIGNhcnJ5ICs9IGJ5dGVzW2pdICogQkFTRVxuICAgICAgICBieXRlc1tqXSA9IGNhcnJ5ICYgMHhmZlxuICAgICAgICBjYXJyeSA+Pj0gOFxuICAgICAgfVxuXG4gICAgICB3aGlsZSAoY2FycnkgPiAwKSB7XG4gICAgICAgIGJ5dGVzLnB1c2goY2FycnkgJiAweGZmKVxuICAgICAgICBjYXJyeSA+Pj0gOFxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGRlYWwgd2l0aCBsZWFkaW5nIHplcm9zXG4gICAgZm9yICh2YXIgayA9IDA7IHN0cmluZ1trXSA9PT0gTEVBREVSICYmIGsgPCBzdHJpbmcubGVuZ3RoIC0gMTsgKytrKSB7XG4gICAgICBieXRlcy5wdXNoKDApXG4gICAgfVxuXG4gICAgcmV0dXJuIGJ5dGVzLnJldmVyc2UoKVxuICB9XG5cbiAgZnVuY3Rpb24gZGVjb2RlIChzdHJpbmcpIHtcbiAgICB2YXIgYXJyYXkgPSBkZWNvZGVVbnNhZmUoc3RyaW5nKVxuICAgIGlmIChhcnJheSkgcmV0dXJuIGFycmF5XG5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ05vbi1iYXNlJyArIEJBU0UgKyAnIGNoYXJhY3RlcicpXG4gIH1cblxuICByZXR1cm4ge1xuICAgIGVuY29kZTogZW5jb2RlLFxuICAgIGRlY29kZVVuc2FmZTogZGVjb2RlVW5zYWZlLFxuICAgIGRlY29kZTogZGVjb2RlXG4gIH1cbn1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2FpcmJpdHotY29yZS1qcy9ub2RlX21vZHVsZXMvYmFzZS14L2luZGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNzAxXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1701\n");

/***/ }),

/***/ 1702:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"parse\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"stringify\"] = stringify;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__codec_js__ = __webpack_require__(1563);\n\n\nvar encoding = {\n  chars: '0123456789ABCDEF',\n  bits: 4\n}\n\nfunction parse (string, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"a\" /* parse */](string.toUpperCase(), encoding, opts)\n}\n\nfunction stringify (data, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"b\" /* stringify */](data, encoding, opts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTE2LmpzP2ZlMzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTcwMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvZGVjIGZyb20gJy4vY29kZWMuanMnXG5cbnZhciBlbmNvZGluZyA9IHtcbiAgY2hhcnM6ICcwMTIzNDU2Nzg5QUJDREVGJyxcbiAgYml0czogNFxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UgKHN0cmluZywgb3B0cykge1xuICByZXR1cm4gY29kZWMucGFyc2Uoc3RyaW5nLnRvVXBwZXJDYXNlKCksIGVuY29kaW5nLCBvcHRzKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5IChkYXRhLCBvcHRzKSB7XG4gIHJldHVybiBjb2RlYy5zdHJpbmdpZnkoZGF0YSwgZW5jb2RpbmcsIG9wdHMpXG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZmM0NjQ4L2xpYi9iYXNlMTYuanNcbi8vIG1vZHVsZSBpZCA9IDE3MDJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1702\n");

/***/ }),

/***/ 1703:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export parse */\n/* unused harmony export stringify */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__codec_js__ = __webpack_require__(1563);\n\n\nvar encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bits: 5\n}\n\nfunction parse (string, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"a\" /* parse */](string, encoding, opts)\n}\n\nfunction stringify (data, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"b\" /* stringify */](data, encoding, opts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTMyLmpzPzNjNTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNzAzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29kZWMgZnJvbSAnLi9jb2RlYy5qcydcblxudmFyIGVuY29kaW5nID0ge1xuICBjaGFyczogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMjM0NTY3JyxcbiAgYml0czogNVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UgKHN0cmluZywgb3B0cykge1xuICByZXR1cm4gY29kZWMucGFyc2Uoc3RyaW5nLCBlbmNvZGluZywgb3B0cylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSAoZGF0YSwgb3B0cykge1xuICByZXR1cm4gY29kZWMuc3RyaW5naWZ5KGRhdGEsIGVuY29kaW5nLCBvcHRzKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTMyLmpzXG4vLyBtb2R1bGUgaWQgPSAxNzAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1703\n");

/***/ }),

/***/ 1704:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export parse */\n/* unused harmony export stringify */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__codec_js__ = __webpack_require__(1563);\n\n\nvar encoding = {\n  chars: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bits: 5\n}\n\nfunction parse (string, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"a\" /* parse */](string, encoding, opts)\n}\n\nfunction stringify (data, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"b\" /* stringify */](data, encoding, opts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTMyaGV4LmpzPzczOWQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNzA0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29kZWMgZnJvbSAnLi9jb2RlYy5qcydcblxudmFyIGVuY29kaW5nID0ge1xuICBjaGFyczogJzAxMjM0NTY3ODlBQkNERUZHSElKS0xNTk9QUVJTVFVWJyxcbiAgYml0czogNVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UgKHN0cmluZywgb3B0cykge1xuICByZXR1cm4gY29kZWMucGFyc2Uoc3RyaW5nLCBlbmNvZGluZywgb3B0cylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSAoZGF0YSwgb3B0cykge1xuICByZXR1cm4gY29kZWMuc3RyaW5naWZ5KGRhdGEsIGVuY29kaW5nLCBvcHRzKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTMyaGV4LmpzXG4vLyBtb2R1bGUgaWQgPSAxNzA0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1704\n");

/***/ }),

/***/ 1705:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"parse\"] = parse;\n/* harmony export (immutable) */ __webpack_exports__[\"stringify\"] = stringify;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__codec_js__ = __webpack_require__(1563);\n\n\nvar encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bits: 6\n}\n\nfunction parse (string, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"a\" /* parse */](string, encoding, opts)\n}\n\nfunction stringify (data, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"b\" /* stringify */](data, encoding, opts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTY0LmpzPzVkMjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTcwNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvZGVjIGZyb20gJy4vY29kZWMuanMnXG5cbnZhciBlbmNvZGluZyA9IHtcbiAgY2hhcnM6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvJyxcbiAgYml0czogNlxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UgKHN0cmluZywgb3B0cykge1xuICByZXR1cm4gY29kZWMucGFyc2Uoc3RyaW5nLCBlbmNvZGluZywgb3B0cylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmluZ2lmeSAoZGF0YSwgb3B0cykge1xuICByZXR1cm4gY29kZWMuc3RyaW5naWZ5KGRhdGEsIGVuY29kaW5nLCBvcHRzKVxufVxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTY0LmpzXG4vLyBtb2R1bGUgaWQgPSAxNzA1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIDUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1705\n");

/***/ }),

/***/ 1706:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export parse */\n/* unused harmony export stringify */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__codec_js__ = __webpack_require__(1563);\n\n\nvar encoding = {\n  chars: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bits: 6\n}\n\nfunction parse (string, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"a\" /* parse */](string, encoding, opts)\n}\n\nfunction stringify (data, opts) {\n  return __WEBPACK_IMPORTED_MODULE_0__codec_js__[\"b\" /* stringify */](data, encoding, opts)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmZjNDY0OC9saWIvYmFzZTY0dXJsLmpzP2NmYTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIxNzA2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29kZWMgZnJvbSAnLi9jb2RlYy5qcydcblxudmFyIGVuY29kaW5nID0ge1xuICBjaGFyczogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV8nLFxuICBiaXRzOiA2XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZSAoc3RyaW5nLCBvcHRzKSB7XG4gIHJldHVybiBjb2RlYy5wYXJzZShzdHJpbmcsIGVuY29kaW5nLCBvcHRzKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RyaW5naWZ5IChkYXRhLCBvcHRzKSB7XG4gIHJldHVybiBjb2RlYy5zdHJpbmdpZnkoZGF0YSwgZW5jb2RpbmcsIG9wdHMpXG59XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9yZmM0NjQ4L2xpYi9iYXNlNjR1cmwuanNcbi8vIG1vZHVsZSBpZCA9IDE3MDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1706\n");

/***/ }),

/***/ 1707:
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttrue\n\t) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn utf8;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(61)(module), __webpack_require__(26)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1707\n");

/***/ }),

/***/ 1708:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (true) {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWVzLWpzL2luZGV4LmpzPzYzYjMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUNBQXlDLGNBQWM7O0FBRXZELHVCQUF1QixxQkFBcUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsaUJBQWlCO0FBQzVDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0Isa0JBQWtCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOzs7QUFHTDtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7OztBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIsYUFBYTtBQUNwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUIsUUFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0IsUUFBUTtBQUN2QztBQUNBOztBQUVBO0FBQ0EsYUFBYTtBQUNiLCtCQUErQixjQUFjO0FBQzdDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQ0FBMEMsUUFBUTtBQUNsRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsWUFBWTtBQUNuQywyQkFBMkIsT0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUF1QixPQUFPO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQSx1QkFBdUIsWUFBWTtBQUNuQywyQkFBMkIsT0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUIsT0FBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUIsT0FBTztBQUM5QjtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCLFlBQVk7QUFDbkMsMkJBQTJCLE9BQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQXVCLE9BQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1Qix1QkFBdUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLFNBQVM7QUFDVDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIsc0JBQXNCO0FBQzdDOztBQUVBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7O0FBRUEsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQSwyQkFBMkIsaUJBQWlCOztBQUU1Qzs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBLDJCQUEyQixzQkFBc0I7QUFDakQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsdUJBQXVCLHNCQUFzQjtBQUM3Qzs7QUFFQSwyQkFBMkIsc0JBQXNCO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsdUJBQXVCLHNCQUFzQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtEQUFrRCxrQkFBa0I7O0FBRXBFO0FBQ0E7QUFDQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDRCQUE0QixZQUFZO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxtQkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLCtCQUErQiwwQ0FBMEM7O0FBRXpFO0FBQ0EsMEJBQTBCLHFEQUFxRDs7QUFFL0U7QUFDQSx1QkFBdUIsWUFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQSxDQUFDIiwiZmlsZSI6IjE3MDguanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuKGZ1bmN0aW9uKHJvb3QpIHtcblxuICAgIGZ1bmN0aW9uIGNoZWNrSW50KHZhbHVlKSB7XG4gICAgICAgIHJldHVybiAocGFyc2VJbnQodmFsdWUpID09PSB2YWx1ZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2hlY2tJbnRzKGFycmF5aXNoKSB7XG4gICAgICAgIGlmICghY2hlY2tJbnQoYXJyYXlpc2gubGVuZ3RoKSkgeyByZXR1cm4gZmFsc2U7IH1cblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5aXNoLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoIWNoZWNrSW50KGFycmF5aXNoW2ldKSB8fCBhcnJheWlzaFtpXSA8IDAgfHwgYXJyYXlpc2hbaV0gPiAyNTUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb2VyY2VBcnJheShhcmcsIGNvcHkpIHtcblxuICAgICAgICAvLyBBcnJheUJ1ZmZlciB2aWV3XG4gICAgICAgIGlmIChhcmcuYnVmZmVyICYmIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpICYmIGFyZy5uYW1lID09PSAnVWludDhBcnJheScpIHtcblxuICAgICAgICAgICAgaWYgKGNvcHkpIHtcbiAgICAgICAgICAgICAgICBpZiAoYXJnLnNsaWNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyZyA9IGFyZy5zbGljZSgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFyZyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gYXJnO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSXQncyBhbiBhcnJheTsgY2hlY2sgaXQgaXMgYSB2YWxpZCByZXByZXNlbnRhdGlvbiBvZiBhIGJ5dGVcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuICAgICAgICAgICAgaWYgKCFjaGVja0ludHMoYXJnKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQXJyYXkgY29udGFpbnMgaW52YWxpZCB2YWx1ZTogJyArIGFyZyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShhcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU29tZXRoaW5nIGVsc2UsIGJ1dCBiZWhhdmVzIGxpa2UgYW4gYXJyYXkgKG1heWJlIGEgQnVmZmVyPyBBcmd1bWVudHM/KVxuICAgICAgICBpZiAoY2hlY2tJbnQoYXJnLmxlbmd0aCkgJiYgY2hlY2tJbnRzKGFyZykpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShhcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1bnN1cHBvcnRlZCBhcnJheS1saWtlIG9iamVjdCcpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUFycmF5KGxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobGVuZ3RoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb3B5QXJyYXkoc291cmNlQXJyYXksIHRhcmdldEFycmF5LCB0YXJnZXRTdGFydCwgc291cmNlU3RhcnQsIHNvdXJjZUVuZCkge1xuICAgICAgICBpZiAoc291cmNlU3RhcnQgIT0gbnVsbCB8fCBzb3VyY2VFbmQgIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHNvdXJjZUFycmF5LnNsaWNlKSB7XG4gICAgICAgICAgICAgICAgc291cmNlQXJyYXkgPSBzb3VyY2VBcnJheS5zbGljZShzb3VyY2VTdGFydCwgc291cmNlRW5kKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc291cmNlQXJyYXkgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChzb3VyY2VBcnJheSwgc291cmNlU3RhcnQsIHNvdXJjZUVuZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGFyZ2V0QXJyYXkuc2V0KHNvdXJjZUFycmF5LCB0YXJnZXRTdGFydCk7XG4gICAgfVxuXG5cblxuICAgIHZhciBjb252ZXJ0VXRmOCA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgZnVuY3Rpb24gdG9CeXRlcyh0ZXh0KSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0ID0gW10sIGkgPSAwO1xuICAgICAgICAgICAgdGV4dCA9IGVuY29kZVVSSSh0ZXh0KTtcbiAgICAgICAgICAgIHdoaWxlIChpIDwgdGV4dC5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IHRleHQuY2hhckNvZGVBdChpKyspO1xuXG4gICAgICAgICAgICAgICAgLy8gaWYgaXQgaXMgYSAlIHNpZ24sIGVuY29kZSB0aGUgZm9sbG93aW5nIDIgYnl0ZXMgYXMgYSBoZXggdmFsdWVcbiAgICAgICAgICAgICAgICBpZiAoYyA9PT0gMzcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocGFyc2VJbnQodGV4dC5zdWJzdHIoaSwgMiksIDE2KSlcbiAgICAgICAgICAgICAgICAgICAgaSArPSAyO1xuXG4gICAgICAgICAgICAgICAgLy8gb3RoZXJ3aXNlLCBqdXN0IHRoZSBhY3R1YWwgYnl0ZVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGMpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY29lcmNlQXJyYXkocmVzdWx0KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGZyb21CeXRlcyhieXRlcykge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdLCBpID0gMDtcblxuICAgICAgICAgICAgd2hpbGUgKGkgPCBieXRlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICB2YXIgYyA9IGJ5dGVzW2ldO1xuXG4gICAgICAgICAgICAgICAgaWYgKGMgPCAxMjgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShjKSk7XG4gICAgICAgICAgICAgICAgICAgIGkrKztcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGMgPiAxOTEgJiYgYyA8IDIyNCkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKCgoYyAmIDB4MWYpIDw8IDYpIHwgKGJ5dGVzW2kgKyAxXSAmIDB4M2YpKSk7XG4gICAgICAgICAgICAgICAgICAgIGkgKz0gMjtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKCgoYyAmIDB4MGYpIDw8IDEyKSB8ICgoYnl0ZXNbaSArIDFdICYgMHgzZikgPDwgNikgfCAoYnl0ZXNbaSArIDJdICYgMHgzZikpKTtcbiAgICAgICAgICAgICAgICAgICAgaSArPSAzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b0J5dGVzOiB0b0J5dGVzLFxuICAgICAgICAgICAgZnJvbUJ5dGVzOiBmcm9tQnl0ZXMsXG4gICAgICAgIH1cbiAgICB9KSgpO1xuXG4gICAgdmFyIGNvbnZlcnRIZXggPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgIGZ1bmN0aW9uIHRvQnl0ZXModGV4dCkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2gocGFyc2VJbnQodGV4dC5zdWJzdHIoaSwgMiksIDE2KSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBodHRwOi8vaXh0aS5uZXQvZGV2ZWxvcG1lbnQvamF2YXNjcmlwdC8yMDExLzExLzExL2Jhc2U2NC1lbmNvZGVkZWNvZGUtb2YtdXRmOC1pbi1icm93c2VyLXdpdGgtanMuaHRtbFxuICAgICAgICB2YXIgSGV4ID0gJzAxMjM0NTY3ODlhYmNkZWYnO1xuXG4gICAgICAgIGZ1bmN0aW9uIGZyb21CeXRlcyhieXRlcykge1xuICAgICAgICAgICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciB2ID0gYnl0ZXNbaV07XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKEhleFsodiAmIDB4ZjApID4+IDRdICsgSGV4W3YgJiAweDBmXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuam9pbignJyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdG9CeXRlczogdG9CeXRlcyxcbiAgICAgICAgICAgIGZyb21CeXRlczogZnJvbUJ5dGVzLFxuICAgICAgICB9XG4gICAgfSkoKTtcblxuXG4gICAgLy8gTnVtYmVyIG9mIHJvdW5kcyBieSBrZXlzaXplXG4gICAgdmFyIG51bWJlck9mUm91bmRzID0gezE2OiAxMCwgMjQ6IDEyLCAzMjogMTR9XG5cbiAgICAvLyBSb3VuZCBjb25zdGFudCB3b3Jkc1xuICAgIHZhciByY29uID0gWzB4MDEsIDB4MDIsIDB4MDQsIDB4MDgsIDB4MTAsIDB4MjAsIDB4NDAsIDB4ODAsIDB4MWIsIDB4MzYsIDB4NmMsIDB4ZDgsIDB4YWIsIDB4NGQsIDB4OWEsIDB4MmYsIDB4NWUsIDB4YmMsIDB4NjMsIDB4YzYsIDB4OTcsIDB4MzUsIDB4NmEsIDB4ZDQsIDB4YjMsIDB4N2QsIDB4ZmEsIDB4ZWYsIDB4YzUsIDB4OTFdO1xuXG4gICAgLy8gUy1ib3ggYW5kIEludmVyc2UgUy1ib3ggKFMgaXMgZm9yIFN1YnN0aXR1dGlvbilcbiAgICB2YXIgUyA9IFsweDYzLCAweDdjLCAweDc3LCAweDdiLCAweGYyLCAweDZiLCAweDZmLCAweGM1LCAweDMwLCAweDAxLCAweDY3LCAweDJiLCAweGZlLCAweGQ3LCAweGFiLCAweDc2LCAweGNhLCAweDgyLCAweGM5LCAweDdkLCAweGZhLCAweDU5LCAweDQ3LCAweGYwLCAweGFkLCAweGQ0LCAweGEyLCAweGFmLCAweDljLCAweGE0LCAweDcyLCAweGMwLCAweGI3LCAweGZkLCAweDkzLCAweDI2LCAweDM2LCAweDNmLCAweGY3LCAweGNjLCAweDM0LCAweGE1LCAweGU1LCAweGYxLCAweDcxLCAweGQ4LCAweDMxLCAweDE1LCAweDA0LCAweGM3LCAweDIzLCAweGMzLCAweDE4LCAweDk2LCAweDA1LCAweDlhLCAweDA3LCAweDEyLCAweDgwLCAweGUyLCAweGViLCAweDI3LCAweGIyLCAweDc1LCAweDA5LCAweDgzLCAweDJjLCAweDFhLCAweDFiLCAweDZlLCAweDVhLCAweGEwLCAweDUyLCAweDNiLCAweGQ2LCAweGIzLCAweDI5LCAweGUzLCAweDJmLCAweDg0LCAweDUzLCAweGQxLCAweDAwLCAweGVkLCAweDIwLCAweGZjLCAweGIxLCAweDViLCAweDZhLCAweGNiLCAweGJlLCAweDM5LCAweDRhLCAweDRjLCAweDU4LCAweGNmLCAweGQwLCAweGVmLCAweGFhLCAweGZiLCAweDQzLCAweDRkLCAweDMzLCAweDg1LCAweDQ1LCAweGY5LCAweDAyLCAweDdmLCAweDUwLCAweDNjLCAweDlmLCAweGE4LCAweDUxLCAweGEzLCAweDQwLCAweDhmLCAweDkyLCAweDlkLCAweDM4LCAweGY1LCAweGJjLCAweGI2LCAweGRhLCAweDIxLCAweDEwLCAweGZmLCAweGYzLCAweGQyLCAweGNkLCAweDBjLCAweDEzLCAweGVjLCAweDVmLCAweDk3LCAweDQ0LCAweDE3LCAweGM0LCAweGE3LCAweDdlLCAweDNkLCAweDY0LCAweDVkLCAweDE5LCAweDczLCAweDYwLCAweDgxLCAweDRmLCAweGRjLCAweDIyLCAweDJhLCAweDkwLCAweDg4LCAweDQ2LCAweGVlLCAweGI4LCAweDE0LCAweGRlLCAweDVlLCAweDBiLCAweGRiLCAweGUwLCAweDMyLCAweDNhLCAweDBhLCAweDQ5LCAweDA2LCAweDI0LCAweDVjLCAweGMyLCAweGQzLCAweGFjLCAweDYyLCAweDkxLCAweDk1LCAweGU0LCAweDc5LCAweGU3LCAweGM4LCAweDM3LCAweDZkLCAweDhkLCAweGQ1LCAweDRlLCAweGE5LCAweDZjLCAweDU2LCAweGY0LCAweGVhLCAweDY1LCAweDdhLCAweGFlLCAweDA4LCAweGJhLCAweDc4LCAweDI1LCAweDJlLCAweDFjLCAweGE2LCAweGI0LCAweGM2LCAweGU4LCAweGRkLCAweDc0LCAweDFmLCAweDRiLCAweGJkLCAweDhiLCAweDhhLCAweDcwLCAweDNlLCAweGI1LCAweDY2LCAweDQ4LCAweDAzLCAweGY2LCAweDBlLCAweDYxLCAweDM1LCAweDU3LCAweGI5LCAweDg2LCAweGMxLCAweDFkLCAweDllLCAweGUxLCAweGY4LCAweDk4LCAweDExLCAweDY5LCAweGQ5LCAweDhlLCAweDk0LCAweDliLCAweDFlLCAweDg3LCAweGU5LCAweGNlLCAweDU1LCAweDI4LCAweGRmLCAweDhjLCAweGExLCAweDg5LCAweDBkLCAweGJmLCAweGU2LCAweDQyLCAweDY4LCAweDQxLCAweDk5LCAweDJkLCAweDBmLCAweGIwLCAweDU0LCAweGJiLCAweDE2XTtcbiAgICB2YXIgU2kgPVsweDUyLCAweDA5LCAweDZhLCAweGQ1LCAweDMwLCAweDM2LCAweGE1LCAweDM4LCAweGJmLCAweDQwLCAweGEzLCAweDllLCAweDgxLCAweGYzLCAweGQ3LCAweGZiLCAweDdjLCAweGUzLCAweDM5LCAweDgyLCAweDliLCAweDJmLCAweGZmLCAweDg3LCAweDM0LCAweDhlLCAweDQzLCAweDQ0LCAweGM0LCAweGRlLCAweGU5LCAweGNiLCAweDU0LCAweDdiLCAweDk0LCAweDMyLCAweGE2LCAweGMyLCAweDIzLCAweDNkLCAweGVlLCAweDRjLCAweDk1LCAweDBiLCAweDQyLCAweGZhLCAweGMzLCAweDRlLCAweDA4LCAweDJlLCAweGExLCAweDY2LCAweDI4LCAweGQ5LCAweDI0LCAweGIyLCAweDc2LCAweDViLCAweGEyLCAweDQ5LCAweDZkLCAweDhiLCAweGQxLCAweDI1LCAweDcyLCAweGY4LCAweGY2LCAweDY0LCAweDg2LCAweDY4LCAweDk4LCAweDE2LCAweGQ0LCAweGE0LCAweDVjLCAweGNjLCAweDVkLCAweDY1LCAweGI2LCAweDkyLCAweDZjLCAweDcwLCAweDQ4LCAweDUwLCAweGZkLCAweGVkLCAweGI5LCAweGRhLCAweDVlLCAweDE1LCAweDQ2LCAweDU3LCAweGE3LCAweDhkLCAweDlkLCAweDg0LCAweDkwLCAweGQ4LCAweGFiLCAweDAwLCAweDhjLCAweGJjLCAweGQzLCAweDBhLCAweGY3LCAweGU0LCAweDU4LCAweDA1LCAweGI4LCAweGIzLCAweDQ1LCAweDA2LCAweGQwLCAweDJjLCAweDFlLCAweDhmLCAweGNhLCAweDNmLCAweDBmLCAweDAyLCAweGMxLCAweGFmLCAweGJkLCAweDAzLCAweDAxLCAweDEzLCAweDhhLCAweDZiLCAweDNhLCAweDkxLCAweDExLCAweDQxLCAweDRmLCAweDY3LCAweGRjLCAweGVhLCAweDk3LCAweGYyLCAweGNmLCAweGNlLCAweGYwLCAweGI0LCAweGU2LCAweDczLCAweDk2LCAweGFjLCAweDc0LCAweDIyLCAweGU3LCAweGFkLCAweDM1LCAweDg1LCAweGUyLCAweGY5LCAweDM3LCAweGU4LCAweDFjLCAweDc1LCAweGRmLCAweDZlLCAweDQ3LCAweGYxLCAweDFhLCAweDcxLCAweDFkLCAweDI5LCAweGM1LCAweDg5LCAweDZmLCAweGI3LCAweDYyLCAweDBlLCAweGFhLCAweDE4LCAweGJlLCAweDFiLCAweGZjLCAweDU2LCAweDNlLCAweDRiLCAweGM2LCAweGQyLCAweDc5LCAweDIwLCAweDlhLCAweGRiLCAweGMwLCAweGZlLCAweDc4LCAweGNkLCAweDVhLCAweGY0LCAweDFmLCAweGRkLCAweGE4LCAweDMzLCAweDg4LCAweDA3LCAweGM3LCAweDMxLCAweGIxLCAweDEyLCAweDEwLCAweDU5LCAweDI3LCAweDgwLCAweGVjLCAweDVmLCAweDYwLCAweDUxLCAweDdmLCAweGE5LCAweDE5LCAweGI1LCAweDRhLCAweDBkLCAweDJkLCAweGU1LCAweDdhLCAweDlmLCAweDkzLCAweGM5LCAweDljLCAweGVmLCAweGEwLCAweGUwLCAweDNiLCAweDRkLCAweGFlLCAweDJhLCAweGY1LCAweGIwLCAweGM4LCAweGViLCAweGJiLCAweDNjLCAweDgzLCAweDUzLCAweDk5LCAweDYxLCAweDE3LCAweDJiLCAweDA0LCAweDdlLCAweGJhLCAweDc3LCAweGQ2LCAweDI2LCAweGUxLCAweDY5LCAweDE0LCAweDYzLCAweDU1LCAweDIxLCAweDBjLCAweDdkXTtcblxuICAgIC8vIFRyYW5zZm9ybWF0aW9ucyBmb3IgZW5jcnlwdGlvblxuICAgIHZhciBUMSA9IFsweGM2NjM2M2E1LCAweGY4N2M3Yzg0LCAweGVlNzc3Nzk5LCAweGY2N2I3YjhkLCAweGZmZjJmMjBkLCAweGQ2NmI2YmJkLCAweGRlNmY2ZmIxLCAweDkxYzVjNTU0LCAweDYwMzAzMDUwLCAweDAyMDEwMTAzLCAweGNlNjc2N2E5LCAweDU2MmIyYjdkLCAweGU3ZmVmZTE5LCAweGI1ZDdkNzYyLCAweDRkYWJhYmU2LCAweGVjNzY3NjlhLCAweDhmY2FjYTQ1LCAweDFmODI4MjlkLCAweDg5YzljOTQwLCAweGZhN2Q3ZDg3LCAweGVmZmFmYTE1LCAweGIyNTk1OWViLCAweDhlNDc0N2M5LCAweGZiZjBmMDBiLCAweDQxYWRhZGVjLCAweGIzZDRkNDY3LCAweDVmYTJhMmZkLCAweDQ1YWZhZmVhLCAweDIzOWM5Y2JmLCAweDUzYTRhNGY3LCAweGU0NzI3Mjk2LCAweDliYzBjMDViLCAweDc1YjdiN2MyLCAweGUxZmRmZDFjLCAweDNkOTM5M2FlLCAweDRjMjYyNjZhLCAweDZjMzYzNjVhLCAweDdlM2YzZjQxLCAweGY1ZjdmNzAyLCAweDgzY2NjYzRmLCAweDY4MzQzNDVjLCAweDUxYTVhNWY0LCAweGQxZTVlNTM0LCAweGY5ZjFmMTA4LCAweGUyNzE3MTkzLCAweGFiZDhkODczLCAweDYyMzEzMTUzLCAweDJhMTUxNTNmLCAweDA4MDQwNDBjLCAweDk1YzdjNzUyLCAweDQ2MjMyMzY1LCAweDlkYzNjMzVlLCAweDMwMTgxODI4LCAweDM3OTY5NmExLCAweDBhMDUwNTBmLCAweDJmOWE5YWI1LCAweDBlMDcwNzA5LCAweDI0MTIxMjM2LCAweDFiODA4MDliLCAweGRmZTJlMjNkLCAweGNkZWJlYjI2LCAweDRlMjcyNzY5LCAweDdmYjJiMmNkLCAweGVhNzU3NTlmLCAweDEyMDkwOTFiLCAweDFkODM4MzllLCAweDU4MmMyYzc0LCAweDM0MWExYTJlLCAweDM2MWIxYjJkLCAweGRjNmU2ZWIyLCAweGI0NWE1YWVlLCAweDViYTBhMGZiLCAweGE0NTI1MmY2LCAweDc2M2IzYjRkLCAweGI3ZDZkNjYxLCAweDdkYjNiM2NlLCAweDUyMjkyOTdiLCAweGRkZTNlMzNlLCAweDVlMmYyZjcxLCAweDEzODQ4NDk3LCAweGE2NTM1M2Y1LCAweGI5ZDFkMTY4LCAweDAwMDAwMDAwLCAweGMxZWRlZDJjLCAweDQwMjAyMDYwLCAweGUzZmNmYzFmLCAweDc5YjFiMWM4LCAweGI2NWI1YmVkLCAweGQ0NmE2YWJlLCAweDhkY2JjYjQ2LCAweDY3YmViZWQ5LCAweDcyMzkzOTRiLCAweDk0NGE0YWRlLCAweDk4NGM0Y2Q0LCAweGIwNTg1OGU4LCAweDg1Y2ZjZjRhLCAweGJiZDBkMDZiLCAweGM1ZWZlZjJhLCAweDRmYWFhYWU1LCAweGVkZmJmYjE2LCAweDg2NDM0M2M1LCAweDlhNGQ0ZGQ3LCAweDY2MzMzMzU1LCAweDExODU4NTk0LCAweDhhNDU0NWNmLCAweGU5ZjlmOTEwLCAweDA0MDIwMjA2LCAweGZlN2Y3ZjgxLCAweGEwNTA1MGYwLCAweDc4M2MzYzQ0LCAweDI1OWY5ZmJhLCAweDRiYThhOGUzLCAweGEyNTE1MWYzLCAweDVkYTNhM2ZlLCAweDgwNDA0MGMwLCAweDA1OGY4ZjhhLCAweDNmOTI5MmFkLCAweDIxOWQ5ZGJjLCAweDcwMzgzODQ4LCAweGYxZjVmNTA0LCAweDYzYmNiY2RmLCAweDc3YjZiNmMxLCAweGFmZGFkYTc1LCAweDQyMjEyMTYzLCAweDIwMTAxMDMwLCAweGU1ZmZmZjFhLCAweGZkZjNmMzBlLCAweGJmZDJkMjZkLCAweDgxY2RjZDRjLCAweDE4MGMwYzE0LCAweDI2MTMxMzM1LCAweGMzZWNlYzJmLCAweGJlNWY1ZmUxLCAweDM1OTc5N2EyLCAweDg4NDQ0NGNjLCAweDJlMTcxNzM5LCAweDkzYzRjNDU3LCAweDU1YTdhN2YyLCAweGZjN2U3ZTgyLCAweDdhM2QzZDQ3LCAweGM4NjQ2NGFjLCAweGJhNWQ1ZGU3LCAweDMyMTkxOTJiLCAweGU2NzM3Mzk1LCAweGMwNjA2MGEwLCAweDE5ODE4MTk4LCAweDllNGY0ZmQxLCAweGEzZGNkYzdmLCAweDQ0MjIyMjY2LCAweDU0MmEyYTdlLCAweDNiOTA5MGFiLCAweDBiODg4ODgzLCAweDhjNDY0NmNhLCAweGM3ZWVlZTI5LCAweDZiYjhiOGQzLCAweDI4MTQxNDNjLCAweGE3ZGVkZTc5LCAweGJjNWU1ZWUyLCAweDE2MGIwYjFkLCAweGFkZGJkYjc2LCAweGRiZTBlMDNiLCAweDY0MzIzMjU2LCAweDc0M2EzYTRlLCAweDE0MGEwYTFlLCAweDkyNDk0OWRiLCAweDBjMDYwNjBhLCAweDQ4MjQyNDZjLCAweGI4NWM1Y2U0LCAweDlmYzJjMjVkLCAweGJkZDNkMzZlLCAweDQzYWNhY2VmLCAweGM0NjI2MmE2LCAweDM5OTE5MWE4LCAweDMxOTU5NWE0LCAweGQzZTRlNDM3LCAweGYyNzk3OThiLCAweGQ1ZTdlNzMyLCAweDhiYzhjODQzLCAweDZlMzczNzU5LCAweGRhNmQ2ZGI3LCAweDAxOGQ4ZDhjLCAweGIxZDVkNTY0LCAweDljNGU0ZWQyLCAweDQ5YTlhOWUwLCAweGQ4NmM2Y2I0LCAweGFjNTY1NmZhLCAweGYzZjRmNDA3LCAweGNmZWFlYTI1LCAweGNhNjU2NWFmLCAweGY0N2E3YThlLCAweDQ3YWVhZWU5LCAweDEwMDgwODE4LCAweDZmYmFiYWQ1LCAweGYwNzg3ODg4LCAweDRhMjUyNTZmLCAweDVjMmUyZTcyLCAweDM4MWMxYzI0LCAweDU3YTZhNmYxLCAweDczYjRiNGM3LCAweDk3YzZjNjUxLCAweGNiZThlODIzLCAweGExZGRkZDdjLCAweGU4NzQ3NDljLCAweDNlMWYxZjIxLCAweDk2NGI0YmRkLCAweDYxYmRiZGRjLCAweDBkOGI4Yjg2LCAweDBmOGE4YTg1LCAweGUwNzA3MDkwLCAweDdjM2UzZTQyLCAweDcxYjViNWM0LCAweGNjNjY2NmFhLCAweDkwNDg0OGQ4LCAweDA2MDMwMzA1LCAweGY3ZjZmNjAxLCAweDFjMGUwZTEyLCAweGMyNjE2MWEzLCAweDZhMzUzNTVmLCAweGFlNTc1N2Y5LCAweDY5YjliOWQwLCAweDE3ODY4NjkxLCAweDk5YzFjMTU4LCAweDNhMWQxZDI3LCAweDI3OWU5ZWI5LCAweGQ5ZTFlMTM4LCAweGViZjhmODEzLCAweDJiOTg5OGIzLCAweDIyMTExMTMzLCAweGQyNjk2OWJiLCAweGE5ZDlkOTcwLCAweDA3OGU4ZTg5LCAweDMzOTQ5NGE3LCAweDJkOWI5YmI2LCAweDNjMWUxZTIyLCAweDE1ODc4NzkyLCAweGM5ZTllOTIwLCAweDg3Y2VjZTQ5LCAweGFhNTU1NWZmLCAweDUwMjgyODc4LCAweGE1ZGZkZjdhLCAweDAzOGM4YzhmLCAweDU5YTFhMWY4LCAweDA5ODk4OTgwLCAweDFhMGQwZDE3LCAweDY1YmZiZmRhLCAweGQ3ZTZlNjMxLCAweDg0NDI0MmM2LCAweGQwNjg2OGI4LCAweDgyNDE0MWMzLCAweDI5OTk5OWIwLCAweDVhMmQyZDc3LCAweDFlMGYwZjExLCAweDdiYjBiMGNiLCAweGE4NTQ1NGZjLCAweDZkYmJiYmQ2LCAweDJjMTYxNjNhXTtcbiAgICB2YXIgVDIgPSBbMHhhNWM2NjM2MywgMHg4NGY4N2M3YywgMHg5OWVlNzc3NywgMHg4ZGY2N2I3YiwgMHgwZGZmZjJmMiwgMHhiZGQ2NmI2YiwgMHhiMWRlNmY2ZiwgMHg1NDkxYzVjNSwgMHg1MDYwMzAzMCwgMHgwMzAyMDEwMSwgMHhhOWNlNjc2NywgMHg3ZDU2MmIyYiwgMHgxOWU3ZmVmZSwgMHg2MmI1ZDdkNywgMHhlNjRkYWJhYiwgMHg5YWVjNzY3NiwgMHg0NThmY2FjYSwgMHg5ZDFmODI4MiwgMHg0MDg5YzljOSwgMHg4N2ZhN2Q3ZCwgMHgxNWVmZmFmYSwgMHhlYmIyNTk1OSwgMHhjOThlNDc0NywgMHgwYmZiZjBmMCwgMHhlYzQxYWRhZCwgMHg2N2IzZDRkNCwgMHhmZDVmYTJhMiwgMHhlYTQ1YWZhZiwgMHhiZjIzOWM5YywgMHhmNzUzYTRhNCwgMHg5NmU0NzI3MiwgMHg1YjliYzBjMCwgMHhjMjc1YjdiNywgMHgxY2UxZmRmZCwgMHhhZTNkOTM5MywgMHg2YTRjMjYyNiwgMHg1YTZjMzYzNiwgMHg0MTdlM2YzZiwgMHgwMmY1ZjdmNywgMHg0ZjgzY2NjYywgMHg1YzY4MzQzNCwgMHhmNDUxYTVhNSwgMHgzNGQxZTVlNSwgMHgwOGY5ZjFmMSwgMHg5M2UyNzE3MSwgMHg3M2FiZDhkOCwgMHg1MzYyMzEzMSwgMHgzZjJhMTUxNSwgMHgwYzA4MDQwNCwgMHg1Mjk1YzdjNywgMHg2NTQ2MjMyMywgMHg1ZTlkYzNjMywgMHgyODMwMTgxOCwgMHhhMTM3OTY5NiwgMHgwZjBhMDUwNSwgMHhiNTJmOWE5YSwgMHgwOTBlMDcwNywgMHgzNjI0MTIxMiwgMHg5YjFiODA4MCwgMHgzZGRmZTJlMiwgMHgyNmNkZWJlYiwgMHg2OTRlMjcyNywgMHhjZDdmYjJiMiwgMHg5ZmVhNzU3NSwgMHgxYjEyMDkwOSwgMHg5ZTFkODM4MywgMHg3NDU4MmMyYywgMHgyZTM0MWExYSwgMHgyZDM2MWIxYiwgMHhiMmRjNmU2ZSwgMHhlZWI0NWE1YSwgMHhmYjViYTBhMCwgMHhmNmE0NTI1MiwgMHg0ZDc2M2IzYiwgMHg2MWI3ZDZkNiwgMHhjZTdkYjNiMywgMHg3YjUyMjkyOSwgMHgzZWRkZTNlMywgMHg3MTVlMmYyZiwgMHg5NzEzODQ4NCwgMHhmNWE2NTM1MywgMHg2OGI5ZDFkMSwgMHgwMDAwMDAwMCwgMHgyY2MxZWRlZCwgMHg2MDQwMjAyMCwgMHgxZmUzZmNmYywgMHhjODc5YjFiMSwgMHhlZGI2NWI1YiwgMHhiZWQ0NmE2YSwgMHg0NjhkY2JjYiwgMHhkOTY3YmViZSwgMHg0YjcyMzkzOSwgMHhkZTk0NGE0YSwgMHhkNDk4NGM0YywgMHhlOGIwNTg1OCwgMHg0YTg1Y2ZjZiwgMHg2YmJiZDBkMCwgMHgyYWM1ZWZlZiwgMHhlNTRmYWFhYSwgMHgxNmVkZmJmYiwgMHhjNTg2NDM0MywgMHhkNzlhNGQ0ZCwgMHg1NTY2MzMzMywgMHg5NDExODU4NSwgMHhjZjhhNDU0NSwgMHgxMGU5ZjlmOSwgMHgwNjA0MDIwMiwgMHg4MWZlN2Y3ZiwgMHhmMGEwNTA1MCwgMHg0NDc4M2MzYywgMHhiYTI1OWY5ZiwgMHhlMzRiYThhOCwgMHhmM2EyNTE1MSwgMHhmZTVkYTNhMywgMHhjMDgwNDA0MCwgMHg4YTA1OGY4ZiwgMHhhZDNmOTI5MiwgMHhiYzIxOWQ5ZCwgMHg0ODcwMzgzOCwgMHgwNGYxZjVmNSwgMHhkZjYzYmNiYywgMHhjMTc3YjZiNiwgMHg3NWFmZGFkYSwgMHg2MzQyMjEyMSwgMHgzMDIwMTAxMCwgMHgxYWU1ZmZmZiwgMHgwZWZkZjNmMywgMHg2ZGJmZDJkMiwgMHg0YzgxY2RjZCwgMHgxNDE4MGMwYywgMHgzNTI2MTMxMywgMHgyZmMzZWNlYywgMHhlMWJlNWY1ZiwgMHhhMjM1OTc5NywgMHhjYzg4NDQ0NCwgMHgzOTJlMTcxNywgMHg1NzkzYzRjNCwgMHhmMjU1YTdhNywgMHg4MmZjN2U3ZSwgMHg0NzdhM2QzZCwgMHhhY2M4NjQ2NCwgMHhlN2JhNWQ1ZCwgMHgyYjMyMTkxOSwgMHg5NWU2NzM3MywgMHhhMGMwNjA2MCwgMHg5ODE5ODE4MSwgMHhkMTllNGY0ZiwgMHg3ZmEzZGNkYywgMHg2NjQ0MjIyMiwgMHg3ZTU0MmEyYSwgMHhhYjNiOTA5MCwgMHg4MzBiODg4OCwgMHhjYThjNDY0NiwgMHgyOWM3ZWVlZSwgMHhkMzZiYjhiOCwgMHgzYzI4MTQxNCwgMHg3OWE3ZGVkZSwgMHhlMmJjNWU1ZSwgMHgxZDE2MGIwYiwgMHg3NmFkZGJkYiwgMHgzYmRiZTBlMCwgMHg1NjY0MzIzMiwgMHg0ZTc0M2EzYSwgMHgxZTE0MGEwYSwgMHhkYjkyNDk0OSwgMHgwYTBjMDYwNiwgMHg2YzQ4MjQyNCwgMHhlNGI4NWM1YywgMHg1ZDlmYzJjMiwgMHg2ZWJkZDNkMywgMHhlZjQzYWNhYywgMHhhNmM0NjI2MiwgMHhhODM5OTE5MSwgMHhhNDMxOTU5NSwgMHgzN2QzZTRlNCwgMHg4YmYyNzk3OSwgMHgzMmQ1ZTdlNywgMHg0MzhiYzhjOCwgMHg1OTZlMzczNywgMHhiN2RhNmQ2ZCwgMHg4YzAxOGQ4ZCwgMHg2NGIxZDVkNSwgMHhkMjljNGU0ZSwgMHhlMDQ5YTlhOSwgMHhiNGQ4NmM2YywgMHhmYWFjNTY1NiwgMHgwN2YzZjRmNCwgMHgyNWNmZWFlYSwgMHhhZmNhNjU2NSwgMHg4ZWY0N2E3YSwgMHhlOTQ3YWVhZSwgMHgxODEwMDgwOCwgMHhkNTZmYmFiYSwgMHg4OGYwNzg3OCwgMHg2ZjRhMjUyNSwgMHg3MjVjMmUyZSwgMHgyNDM4MWMxYywgMHhmMTU3YTZhNiwgMHhjNzczYjRiNCwgMHg1MTk3YzZjNiwgMHgyM2NiZThlOCwgMHg3Y2ExZGRkZCwgMHg5Y2U4NzQ3NCwgMHgyMTNlMWYxZiwgMHhkZDk2NGI0YiwgMHhkYzYxYmRiZCwgMHg4NjBkOGI4YiwgMHg4NTBmOGE4YSwgMHg5MGUwNzA3MCwgMHg0MjdjM2UzZSwgMHhjNDcxYjViNSwgMHhhYWNjNjY2NiwgMHhkODkwNDg0OCwgMHgwNTA2MDMwMywgMHgwMWY3ZjZmNiwgMHgxMjFjMGUwZSwgMHhhM2MyNjE2MSwgMHg1ZjZhMzUzNSwgMHhmOWFlNTc1NywgMHhkMDY5YjliOSwgMHg5MTE3ODY4NiwgMHg1ODk5YzFjMSwgMHgyNzNhMWQxZCwgMHhiOTI3OWU5ZSwgMHgzOGQ5ZTFlMSwgMHgxM2ViZjhmOCwgMHhiMzJiOTg5OCwgMHgzMzIyMTExMSwgMHhiYmQyNjk2OSwgMHg3MGE5ZDlkOSwgMHg4OTA3OGU4ZSwgMHhhNzMzOTQ5NCwgMHhiNjJkOWI5YiwgMHgyMjNjMWUxZSwgMHg5MjE1ODc4NywgMHgyMGM5ZTllOSwgMHg0OTg3Y2VjZSwgMHhmZmFhNTU1NSwgMHg3ODUwMjgyOCwgMHg3YWE1ZGZkZiwgMHg4ZjAzOGM4YywgMHhmODU5YTFhMSwgMHg4MDA5ODk4OSwgMHgxNzFhMGQwZCwgMHhkYTY1YmZiZiwgMHgzMWQ3ZTZlNiwgMHhjNjg0NDI0MiwgMHhiOGQwNjg2OCwgMHhjMzgyNDE0MSwgMHhiMDI5OTk5OSwgMHg3NzVhMmQyZCwgMHgxMTFlMGYwZiwgMHhjYjdiYjBiMCwgMHhmY2E4NTQ1NCwgMHhkNjZkYmJiYiwgMHgzYTJjMTYxNl07XG4gICAgdmFyIFQzID0gWzB4NjNhNWM2NjMsIDB4N2M4NGY4N2MsIDB4Nzc5OWVlNzcsIDB4N2I4ZGY2N2IsIDB4ZjIwZGZmZjIsIDB4NmJiZGQ2NmIsIDB4NmZiMWRlNmYsIDB4YzU1NDkxYzUsIDB4MzA1MDYwMzAsIDB4MDEwMzAyMDEsIDB4NjdhOWNlNjcsIDB4MmI3ZDU2MmIsIDB4ZmUxOWU3ZmUsIDB4ZDc2MmI1ZDcsIDB4YWJlNjRkYWIsIDB4NzY5YWVjNzYsIDB4Y2E0NThmY2EsIDB4ODI5ZDFmODIsIDB4Yzk0MDg5YzksIDB4N2Q4N2ZhN2QsIDB4ZmExNWVmZmEsIDB4NTllYmIyNTksIDB4NDdjOThlNDcsIDB4ZjAwYmZiZjAsIDB4YWRlYzQxYWQsIDB4ZDQ2N2IzZDQsIDB4YTJmZDVmYTIsIDB4YWZlYTQ1YWYsIDB4OWNiZjIzOWMsIDB4YTRmNzUzYTQsIDB4NzI5NmU0NzIsIDB4YzA1YjliYzAsIDB4YjdjMjc1YjcsIDB4ZmQxY2UxZmQsIDB4OTNhZTNkOTMsIDB4MjY2YTRjMjYsIDB4MzY1YTZjMzYsIDB4M2Y0MTdlM2YsIDB4ZjcwMmY1ZjcsIDB4Y2M0ZjgzY2MsIDB4MzQ1YzY4MzQsIDB4YTVmNDUxYTUsIDB4ZTUzNGQxZTUsIDB4ZjEwOGY5ZjEsIDB4NzE5M2UyNzEsIDB4ZDg3M2FiZDgsIDB4MzE1MzYyMzEsIDB4MTUzZjJhMTUsIDB4MDQwYzA4MDQsIDB4Yzc1Mjk1YzcsIDB4MjM2NTQ2MjMsIDB4YzM1ZTlkYzMsIDB4MTgyODMwMTgsIDB4OTZhMTM3OTYsIDB4MDUwZjBhMDUsIDB4OWFiNTJmOWEsIDB4MDcwOTBlMDcsIDB4MTIzNjI0MTIsIDB4ODA5YjFiODAsIDB4ZTIzZGRmZTIsIDB4ZWIyNmNkZWIsIDB4Mjc2OTRlMjcsIDB4YjJjZDdmYjIsIDB4NzU5ZmVhNzUsIDB4MDkxYjEyMDksIDB4ODM5ZTFkODMsIDB4MmM3NDU4MmMsIDB4MWEyZTM0MWEsIDB4MWIyZDM2MWIsIDB4NmViMmRjNmUsIDB4NWFlZWI0NWEsIDB4YTBmYjViYTAsIDB4NTJmNmE0NTIsIDB4M2I0ZDc2M2IsIDB4ZDY2MWI3ZDYsIDB4YjNjZTdkYjMsIDB4Mjk3YjUyMjksIDB4ZTMzZWRkZTMsIDB4MmY3MTVlMmYsIDB4ODQ5NzEzODQsIDB4NTNmNWE2NTMsIDB4ZDE2OGI5ZDEsIDB4MDAwMDAwMDAsIDB4ZWQyY2MxZWQsIDB4MjA2MDQwMjAsIDB4ZmMxZmUzZmMsIDB4YjFjODc5YjEsIDB4NWJlZGI2NWIsIDB4NmFiZWQ0NmEsIDB4Y2I0NjhkY2IsIDB4YmVkOTY3YmUsIDB4Mzk0YjcyMzksIDB4NGFkZTk0NGEsIDB4NGNkNDk4NGMsIDB4NThlOGIwNTgsIDB4Y2Y0YTg1Y2YsIDB4ZDA2YmJiZDAsIDB4ZWYyYWM1ZWYsIDB4YWFlNTRmYWEsIDB4ZmIxNmVkZmIsIDB4NDNjNTg2NDMsIDB4NGRkNzlhNGQsIDB4MzM1NTY2MzMsIDB4ODU5NDExODUsIDB4NDVjZjhhNDUsIDB4ZjkxMGU5ZjksIDB4MDIwNjA0MDIsIDB4N2Y4MWZlN2YsIDB4NTBmMGEwNTAsIDB4M2M0NDc4M2MsIDB4OWZiYTI1OWYsIDB4YThlMzRiYTgsIDB4NTFmM2EyNTEsIDB4YTNmZTVkYTMsIDB4NDBjMDgwNDAsIDB4OGY4YTA1OGYsIDB4OTJhZDNmOTIsIDB4OWRiYzIxOWQsIDB4Mzg0ODcwMzgsIDB4ZjUwNGYxZjUsIDB4YmNkZjYzYmMsIDB4YjZjMTc3YjYsIDB4ZGE3NWFmZGEsIDB4MjE2MzQyMjEsIDB4MTAzMDIwMTAsIDB4ZmYxYWU1ZmYsIDB4ZjMwZWZkZjMsIDB4ZDI2ZGJmZDIsIDB4Y2Q0YzgxY2QsIDB4MGMxNDE4MGMsIDB4MTMzNTI2MTMsIDB4ZWMyZmMzZWMsIDB4NWZlMWJlNWYsIDB4OTdhMjM1OTcsIDB4NDRjYzg4NDQsIDB4MTczOTJlMTcsIDB4YzQ1NzkzYzQsIDB4YTdmMjU1YTcsIDB4N2U4MmZjN2UsIDB4M2Q0NzdhM2QsIDB4NjRhY2M4NjQsIDB4NWRlN2JhNWQsIDB4MTkyYjMyMTksIDB4NzM5NWU2NzMsIDB4NjBhMGMwNjAsIDB4ODE5ODE5ODEsIDB4NGZkMTllNGYsIDB4ZGM3ZmEzZGMsIDB4MjI2NjQ0MjIsIDB4MmE3ZTU0MmEsIDB4OTBhYjNiOTAsIDB4ODg4MzBiODgsIDB4NDZjYThjNDYsIDB4ZWUyOWM3ZWUsIDB4YjhkMzZiYjgsIDB4MTQzYzI4MTQsIDB4ZGU3OWE3ZGUsIDB4NWVlMmJjNWUsIDB4MGIxZDE2MGIsIDB4ZGI3NmFkZGIsIDB4ZTAzYmRiZTAsIDB4MzI1NjY0MzIsIDB4M2E0ZTc0M2EsIDB4MGExZTE0MGEsIDB4NDlkYjkyNDksIDB4MDYwYTBjMDYsIDB4MjQ2YzQ4MjQsIDB4NWNlNGI4NWMsIDB4YzI1ZDlmYzIsIDB4ZDM2ZWJkZDMsIDB4YWNlZjQzYWMsIDB4NjJhNmM0NjIsIDB4OTFhODM5OTEsIDB4OTVhNDMxOTUsIDB4ZTQzN2QzZTQsIDB4Nzk4YmYyNzksIDB4ZTczMmQ1ZTcsIDB4Yzg0MzhiYzgsIDB4Mzc1OTZlMzcsIDB4NmRiN2RhNmQsIDB4OGQ4YzAxOGQsIDB4ZDU2NGIxZDUsIDB4NGVkMjljNGUsIDB4YTllMDQ5YTksIDB4NmNiNGQ4NmMsIDB4NTZmYWFjNTYsIDB4ZjQwN2YzZjQsIDB4ZWEyNWNmZWEsIDB4NjVhZmNhNjUsIDB4N2E4ZWY0N2EsIDB4YWVlOTQ3YWUsIDB4MDgxODEwMDgsIDB4YmFkNTZmYmEsIDB4Nzg4OGYwNzgsIDB4MjU2ZjRhMjUsIDB4MmU3MjVjMmUsIDB4MWMyNDM4MWMsIDB4YTZmMTU3YTYsIDB4YjRjNzczYjQsIDB4YzY1MTk3YzYsIDB4ZTgyM2NiZTgsIDB4ZGQ3Y2ExZGQsIDB4NzQ5Y2U4NzQsIDB4MWYyMTNlMWYsIDB4NGJkZDk2NGIsIDB4YmRkYzYxYmQsIDB4OGI4NjBkOGIsIDB4OGE4NTBmOGEsIDB4NzA5MGUwNzAsIDB4M2U0MjdjM2UsIDB4YjVjNDcxYjUsIDB4NjZhYWNjNjYsIDB4NDhkODkwNDgsIDB4MDMwNTA2MDMsIDB4ZjYwMWY3ZjYsIDB4MGUxMjFjMGUsIDB4NjFhM2MyNjEsIDB4MzU1ZjZhMzUsIDB4NTdmOWFlNTcsIDB4YjlkMDY5YjksIDB4ODY5MTE3ODYsIDB4YzE1ODk5YzEsIDB4MWQyNzNhMWQsIDB4OWViOTI3OWUsIDB4ZTEzOGQ5ZTEsIDB4ZjgxM2ViZjgsIDB4OThiMzJiOTgsIDB4MTEzMzIyMTEsIDB4NjliYmQyNjksIDB4ZDk3MGE5ZDksIDB4OGU4OTA3OGUsIDB4OTRhNzMzOTQsIDB4OWJiNjJkOWIsIDB4MWUyMjNjMWUsIDB4ODc5MjE1ODcsIDB4ZTkyMGM5ZTksIDB4Y2U0OTg3Y2UsIDB4NTVmZmFhNTUsIDB4Mjg3ODUwMjgsIDB4ZGY3YWE1ZGYsIDB4OGM4ZjAzOGMsIDB4YTFmODU5YTEsIDB4ODk4MDA5ODksIDB4MGQxNzFhMGQsIDB4YmZkYTY1YmYsIDB4ZTYzMWQ3ZTYsIDB4NDJjNjg0NDIsIDB4NjhiOGQwNjgsIDB4NDFjMzgyNDEsIDB4OTliMDI5OTksIDB4MmQ3NzVhMmQsIDB4MGYxMTFlMGYsIDB4YjBjYjdiYjAsIDB4NTRmY2E4NTQsIDB4YmJkNjZkYmIsIDB4MTYzYTJjMTZdO1xuICAgIHZhciBUNCA9IFsweDYzNjNhNWM2LCAweDdjN2M4NGY4LCAweDc3Nzc5OWVlLCAweDdiN2I4ZGY2LCAweGYyZjIwZGZmLCAweDZiNmJiZGQ2LCAweDZmNmZiMWRlLCAweGM1YzU1NDkxLCAweDMwMzA1MDYwLCAweDAxMDEwMzAyLCAweDY3NjdhOWNlLCAweDJiMmI3ZDU2LCAweGZlZmUxOWU3LCAweGQ3ZDc2MmI1LCAweGFiYWJlNjRkLCAweDc2NzY5YWVjLCAweGNhY2E0NThmLCAweDgyODI5ZDFmLCAweGM5Yzk0MDg5LCAweDdkN2Q4N2ZhLCAweGZhZmExNWVmLCAweDU5NTllYmIyLCAweDQ3NDdjOThlLCAweGYwZjAwYmZiLCAweGFkYWRlYzQxLCAweGQ0ZDQ2N2IzLCAweGEyYTJmZDVmLCAweGFmYWZlYTQ1LCAweDljOWNiZjIzLCAweGE0YTRmNzUzLCAweDcyNzI5NmU0LCAweGMwYzA1YjliLCAweGI3YjdjMjc1LCAweGZkZmQxY2UxLCAweDkzOTNhZTNkLCAweDI2MjY2YTRjLCAweDM2MzY1YTZjLCAweDNmM2Y0MTdlLCAweGY3ZjcwMmY1LCAweGNjY2M0ZjgzLCAweDM0MzQ1YzY4LCAweGE1YTVmNDUxLCAweGU1ZTUzNGQxLCAweGYxZjEwOGY5LCAweDcxNzE5M2UyLCAweGQ4ZDg3M2FiLCAweDMxMzE1MzYyLCAweDE1MTUzZjJhLCAweDA0MDQwYzA4LCAweGM3Yzc1Mjk1LCAweDIzMjM2NTQ2LCAweGMzYzM1ZTlkLCAweDE4MTgyODMwLCAweDk2OTZhMTM3LCAweDA1MDUwZjBhLCAweDlhOWFiNTJmLCAweDA3MDcwOTBlLCAweDEyMTIzNjI0LCAweDgwODA5YjFiLCAweGUyZTIzZGRmLCAweGViZWIyNmNkLCAweDI3Mjc2OTRlLCAweGIyYjJjZDdmLCAweDc1NzU5ZmVhLCAweDA5MDkxYjEyLCAweDgzODM5ZTFkLCAweDJjMmM3NDU4LCAweDFhMWEyZTM0LCAweDFiMWIyZDM2LCAweDZlNmViMmRjLCAweDVhNWFlZWI0LCAweGEwYTBmYjViLCAweDUyNTJmNmE0LCAweDNiM2I0ZDc2LCAweGQ2ZDY2MWI3LCAweGIzYjNjZTdkLCAweDI5Mjk3YjUyLCAweGUzZTMzZWRkLCAweDJmMmY3MTVlLCAweDg0ODQ5NzEzLCAweDUzNTNmNWE2LCAweGQxZDE2OGI5LCAweDAwMDAwMDAwLCAweGVkZWQyY2MxLCAweDIwMjA2MDQwLCAweGZjZmMxZmUzLCAweGIxYjFjODc5LCAweDViNWJlZGI2LCAweDZhNmFiZWQ0LCAweGNiY2I0NjhkLCAweGJlYmVkOTY3LCAweDM5Mzk0YjcyLCAweDRhNGFkZTk0LCAweDRjNGNkNDk4LCAweDU4NThlOGIwLCAweGNmY2Y0YTg1LCAweGQwZDA2YmJiLCAweGVmZWYyYWM1LCAweGFhYWFlNTRmLCAweGZiZmIxNmVkLCAweDQzNDNjNTg2LCAweDRkNGRkNzlhLCAweDMzMzM1NTY2LCAweDg1ODU5NDExLCAweDQ1NDVjZjhhLCAweGY5ZjkxMGU5LCAweDAyMDIwNjA0LCAweDdmN2Y4MWZlLCAweDUwNTBmMGEwLCAweDNjM2M0NDc4LCAweDlmOWZiYTI1LCAweGE4YThlMzRiLCAweDUxNTFmM2EyLCAweGEzYTNmZTVkLCAweDQwNDBjMDgwLCAweDhmOGY4YTA1LCAweDkyOTJhZDNmLCAweDlkOWRiYzIxLCAweDM4Mzg0ODcwLCAweGY1ZjUwNGYxLCAweGJjYmNkZjYzLCAweGI2YjZjMTc3LCAweGRhZGE3NWFmLCAweDIxMjE2MzQyLCAweDEwMTAzMDIwLCAweGZmZmYxYWU1LCAweGYzZjMwZWZkLCAweGQyZDI2ZGJmLCAweGNkY2Q0YzgxLCAweDBjMGMxNDE4LCAweDEzMTMzNTI2LCAweGVjZWMyZmMzLCAweDVmNWZlMWJlLCAweDk3OTdhMjM1LCAweDQ0NDRjYzg4LCAweDE3MTczOTJlLCAweGM0YzQ1NzkzLCAweGE3YTdmMjU1LCAweDdlN2U4MmZjLCAweDNkM2Q0NzdhLCAweDY0NjRhY2M4LCAweDVkNWRlN2JhLCAweDE5MTkyYjMyLCAweDczNzM5NWU2LCAweDYwNjBhMGMwLCAweDgxODE5ODE5LCAweDRmNGZkMTllLCAweGRjZGM3ZmEzLCAweDIyMjI2NjQ0LCAweDJhMmE3ZTU0LCAweDkwOTBhYjNiLCAweDg4ODg4MzBiLCAweDQ2NDZjYThjLCAweGVlZWUyOWM3LCAweGI4YjhkMzZiLCAweDE0MTQzYzI4LCAweGRlZGU3OWE3LCAweDVlNWVlMmJjLCAweDBiMGIxZDE2LCAweGRiZGI3NmFkLCAweGUwZTAzYmRiLCAweDMyMzI1NjY0LCAweDNhM2E0ZTc0LCAweDBhMGExZTE0LCAweDQ5NDlkYjkyLCAweDA2MDYwYTBjLCAweDI0MjQ2YzQ4LCAweDVjNWNlNGI4LCAweGMyYzI1ZDlmLCAweGQzZDM2ZWJkLCAweGFjYWNlZjQzLCAweDYyNjJhNmM0LCAweDkxOTFhODM5LCAweDk1OTVhNDMxLCAweGU0ZTQzN2QzLCAweDc5Nzk4YmYyLCAweGU3ZTczMmQ1LCAweGM4Yzg0MzhiLCAweDM3Mzc1OTZlLCAweDZkNmRiN2RhLCAweDhkOGQ4YzAxLCAweGQ1ZDU2NGIxLCAweDRlNGVkMjljLCAweGE5YTllMDQ5LCAweDZjNmNiNGQ4LCAweDU2NTZmYWFjLCAweGY0ZjQwN2YzLCAweGVhZWEyNWNmLCAweDY1NjVhZmNhLCAweDdhN2E4ZWY0LCAweGFlYWVlOTQ3LCAweDA4MDgxODEwLCAweGJhYmFkNTZmLCAweDc4Nzg4OGYwLCAweDI1MjU2ZjRhLCAweDJlMmU3MjVjLCAweDFjMWMyNDM4LCAweGE2YTZmMTU3LCAweGI0YjRjNzczLCAweGM2YzY1MTk3LCAweGU4ZTgyM2NiLCAweGRkZGQ3Y2ExLCAweDc0NzQ5Y2U4LCAweDFmMWYyMTNlLCAweDRiNGJkZDk2LCAweGJkYmRkYzYxLCAweDhiOGI4NjBkLCAweDhhOGE4NTBmLCAweDcwNzA5MGUwLCAweDNlM2U0MjdjLCAweGI1YjVjNDcxLCAweDY2NjZhYWNjLCAweDQ4NDhkODkwLCAweDAzMDMwNTA2LCAweGY2ZjYwMWY3LCAweDBlMGUxMjFjLCAweDYxNjFhM2MyLCAweDM1MzU1ZjZhLCAweDU3NTdmOWFlLCAweGI5YjlkMDY5LCAweDg2ODY5MTE3LCAweGMxYzE1ODk5LCAweDFkMWQyNzNhLCAweDllOWViOTI3LCAweGUxZTEzOGQ5LCAweGY4ZjgxM2ViLCAweDk4OThiMzJiLCAweDExMTEzMzIyLCAweDY5NjliYmQyLCAweGQ5ZDk3MGE5LCAweDhlOGU4OTA3LCAweDk0OTRhNzMzLCAweDliOWJiNjJkLCAweDFlMWUyMjNjLCAweDg3ODc5MjE1LCAweGU5ZTkyMGM5LCAweGNlY2U0OTg3LCAweDU1NTVmZmFhLCAweDI4Mjg3ODUwLCAweGRmZGY3YWE1LCAweDhjOGM4ZjAzLCAweGExYTFmODU5LCAweDg5ODk4MDA5LCAweDBkMGQxNzFhLCAweGJmYmZkYTY1LCAweGU2ZTYzMWQ3LCAweDQyNDJjNjg0LCAweDY4NjhiOGQwLCAweDQxNDFjMzgyLCAweDk5OTliMDI5LCAweDJkMmQ3NzVhLCAweDBmMGYxMTFlLCAweGIwYjBjYjdiLCAweDU0NTRmY2E4LCAweGJiYmJkNjZkLCAweDE2MTYzYTJjXTtcblxuICAgIC8vIFRyYW5zZm9ybWF0aW9ucyBmb3IgZGVjcnlwdGlvblxuICAgIHZhciBUNSA9IFsweDUxZjRhNzUwLCAweDdlNDE2NTUzLCAweDFhMTdhNGMzLCAweDNhMjc1ZTk2LCAweDNiYWI2YmNiLCAweDFmOWQ0NWYxLCAweGFjZmE1OGFiLCAweDRiZTMwMzkzLCAweDIwMzBmYTU1LCAweGFkNzY2ZGY2LCAweDg4Y2M3NjkxLCAweGY1MDI0YzI1LCAweDRmZTVkN2ZjLCAweGM1MmFjYmQ3LCAweDI2MzU0NDgwLCAweGI1NjJhMzhmLCAweGRlYjE1YTQ5LCAweDI1YmExYjY3LCAweDQ1ZWEwZTk4LCAweDVkZmVjMGUxLCAweGMzMmY3NTAyLCAweDgxNGNmMDEyLCAweDhkNDY5N2EzLCAweDZiZDNmOWM2LCAweDAzOGY1ZmU3LCAweDE1OTI5Yzk1LCAweGJmNmQ3YWViLCAweDk1NTI1OWRhLCAweGQ0YmU4MzJkLCAweDU4NzQyMWQzLCAweDQ5ZTA2OTI5LCAweDhlYzljODQ0LCAweDc1YzI4OTZhLCAweGY0OGU3OTc4LCAweDk5NTgzZTZiLCAweDI3Yjk3MWRkLCAweGJlZTE0ZmI2LCAweGYwODhhZDE3LCAweGM5MjBhYzY2LCAweDdkY2UzYWI0LCAweDYzZGY0YTE4LCAweGU1MWEzMTgyLCAweDk3NTEzMzYwLCAweDYyNTM3ZjQ1LCAweGIxNjQ3N2UwLCAweGJiNmJhZTg0LCAweGZlODFhMDFjLCAweGY5MDgyYjk0LCAweDcwNDg2ODU4LCAweDhmNDVmZDE5LCAweDk0ZGU2Yzg3LCAweDUyN2JmOGI3LCAweGFiNzNkMzIzLCAweDcyNGIwMmUyLCAweGUzMWY4ZjU3LCAweDY2NTVhYjJhLCAweGIyZWIyODA3LCAweDJmYjVjMjAzLCAweDg2YzU3YjlhLCAweGQzMzcwOGE1LCAweDMwMjg4N2YyLCAweDIzYmZhNWIyLCAweDAyMDM2YWJhLCAweGVkMTY4MjVjLCAweDhhY2YxYzJiLCAweGE3NzliNDkyLCAweGYzMDdmMmYwLCAweDRlNjllMmExLCAweDY1ZGFmNGNkLCAweDA2MDViZWQ1LCAweGQxMzQ2MjFmLCAweGM0YTZmZThhLCAweDM0MmU1MzlkLCAweGEyZjM1NWEwLCAweDA1OGFlMTMyLCAweGE0ZjZlYjc1LCAweDBiODNlYzM5LCAweDQwNjBlZmFhLCAweDVlNzE5ZjA2LCAweGJkNmUxMDUxLCAweDNlMjE4YWY5LCAweDk2ZGQwNjNkLCAweGRkM2UwNWFlLCAweDRkZTZiZDQ2LCAweDkxNTQ4ZGI1LCAweDcxYzQ1ZDA1LCAweDA0MDZkNDZmLCAweDYwNTAxNWZmLCAweDE5OThmYjI0LCAweGQ2YmRlOTk3LCAweDg5NDA0M2NjLCAweDY3ZDk5ZTc3LCAweGIwZTg0MmJkLCAweDA3ODk4Yjg4LCAweGU3MTk1YjM4LCAweDc5YzhlZWRiLCAweGExN2MwYTQ3LCAweDdjNDIwZmU5LCAweGY4ODQxZWM5LCAweDAwMDAwMDAwLCAweDA5ODA4NjgzLCAweDMyMmJlZDQ4LCAweDFlMTE3MGFjLCAweDZjNWE3MjRlLCAweGZkMGVmZmZiLCAweDBmODUzODU2LCAweDNkYWVkNTFlLCAweDM2MmQzOTI3LCAweDBhMGZkOTY0LCAweDY4NWNhNjIxLCAweDliNWI1NGQxLCAweDI0MzYyZTNhLCAweDBjMGE2N2IxLCAweDkzNTdlNzBmLCAweGI0ZWU5NmQyLCAweDFiOWI5MTllLCAweDgwYzBjNTRmLCAweDYxZGMyMGEyLCAweDVhNzc0YjY5LCAweDFjMTIxYTE2LCAweGUyOTNiYTBhLCAweGMwYTAyYWU1LCAweDNjMjJlMDQzLCAweDEyMWIxNzFkLCAweDBlMDkwZDBiLCAweGYyOGJjN2FkLCAweDJkYjZhOGI5LCAweDE0MWVhOWM4LCAweDU3ZjExOTg1LCAweGFmNzUwNzRjLCAweGVlOTlkZGJiLCAweGEzN2Y2MGZkLCAweGY3MDEyNjlmLCAweDVjNzJmNWJjLCAweDQ0NjYzYmM1LCAweDViZmI3ZTM0LCAweDhiNDMyOTc2LCAweGNiMjNjNmRjLCAweGI2ZWRmYzY4LCAweGI4ZTRmMTYzLCAweGQ3MzFkY2NhLCAweDQyNjM4NTEwLCAweDEzOTcyMjQwLCAweDg0YzYxMTIwLCAweDg1NGEyNDdkLCAweGQyYmIzZGY4LCAweGFlZjkzMjExLCAweGM3MjlhMTZkLCAweDFkOWUyZjRiLCAweGRjYjIzMGYzLCAweDBkODY1MmVjLCAweDc3YzFlM2QwLCAweDJiYjMxNjZjLCAweGE5NzBiOTk5LCAweDExOTQ0OGZhLCAweDQ3ZTk2NDIyLCAweGE4ZmM4Y2M0LCAweGEwZjAzZjFhLCAweDU2N2QyY2Q4LCAweDIyMzM5MGVmLCAweDg3NDk0ZWM3LCAweGQ5MzhkMWMxLCAweDhjY2FhMmZlLCAweDk4ZDQwYjM2LCAweGE2ZjU4MWNmLCAweGE1N2FkZTI4LCAweGRhYjc4ZTI2LCAweDNmYWRiZmE0LCAweDJjM2E5ZGU0LCAweDUwNzg5MjBkLCAweDZhNWZjYzliLCAweDU0N2U0NjYyLCAweGY2OGQxM2MyLCAweDkwZDhiOGU4LCAweDJlMzlmNzVlLCAweDgyYzNhZmY1LCAweDlmNWQ4MGJlLCAweDY5ZDA5MzdjLCAweDZmZDUyZGE5LCAweGNmMjUxMmIzLCAweGM4YWM5OTNiLCAweDEwMTg3ZGE3LCAweGU4OWM2MzZlLCAweGRiM2JiYjdiLCAweGNkMjY3ODA5LCAweDZlNTkxOGY0LCAweGVjOWFiNzAxLCAweDgzNGY5YWE4LCAweGU2OTU2ZTY1LCAweGFhZmZlNjdlLCAweDIxYmNjZjA4LCAweGVmMTVlOGU2LCAweGJhZTc5YmQ5LCAweDRhNmYzNmNlLCAweGVhOWYwOWQ0LCAweDI5YjA3Y2Q2LCAweDMxYTRiMmFmLCAweDJhM2YyMzMxLCAweGM2YTU5NDMwLCAweDM1YTI2NmMwLCAweDc0NGViYzM3LCAweGZjODJjYWE2LCAweGUwOTBkMGIwLCAweDMzYTdkODE1LCAweGYxMDQ5ODRhLCAweDQxZWNkYWY3LCAweDdmY2Q1MDBlLCAweDE3OTFmNjJmLCAweDc2NGRkNjhkLCAweDQzZWZiMDRkLCAweGNjYWE0ZDU0LCAweGU0OTYwNGRmLCAweDllZDFiNWUzLCAweDRjNmE4ODFiLCAweGMxMmMxZmI4LCAweDQ2NjU1MTdmLCAweDlkNWVlYTA0LCAweDAxOGMzNTVkLCAweGZhODc3NDczLCAweGZiMGI0MTJlLCAweGIzNjcxZDVhLCAweDkyZGJkMjUyLCAweGU5MTA1NjMzLCAweDZkZDY0NzEzLCAweDlhZDc2MThjLCAweDM3YTEwYzdhLCAweDU5ZjgxNDhlLCAweGViMTMzYzg5LCAweGNlYTkyN2VlLCAweGI3NjFjOTM1LCAweGUxMWNlNWVkLCAweDdhNDdiMTNjLCAweDljZDJkZjU5LCAweDU1ZjI3MzNmLCAweDE4MTRjZTc5LCAweDczYzczN2JmLCAweDUzZjdjZGVhLCAweDVmZmRhYTViLCAweGRmM2Q2ZjE0LCAweDc4NDRkYjg2LCAweGNhYWZmMzgxLCAweGI5NjhjNDNlLCAweDM4MjQzNDJjLCAweGMyYTM0MDVmLCAweDE2MWRjMzcyLCAweGJjZTIyNTBjLCAweDI4M2M0OThiLCAweGZmMGQ5NTQxLCAweDM5YTgwMTcxLCAweDA4MGNiM2RlLCAweGQ4YjRlNDljLCAweDY0NTZjMTkwLCAweDdiY2I4NDYxLCAweGQ1MzJiNjcwLCAweDQ4NmM1Yzc0LCAweGQwYjg1NzQyXTtcbiAgICB2YXIgVDYgPSBbMHg1MDUxZjRhNywgMHg1MzdlNDE2NSwgMHhjMzFhMTdhNCwgMHg5NjNhMjc1ZSwgMHhjYjNiYWI2YiwgMHhmMTFmOWQ0NSwgMHhhYmFjZmE1OCwgMHg5MzRiZTMwMywgMHg1NTIwMzBmYSwgMHhmNmFkNzY2ZCwgMHg5MTg4Y2M3NiwgMHgyNWY1MDI0YywgMHhmYzRmZTVkNywgMHhkN2M1MmFjYiwgMHg4MDI2MzU0NCwgMHg4ZmI1NjJhMywgMHg0OWRlYjE1YSwgMHg2NzI1YmExYiwgMHg5ODQ1ZWEwZSwgMHhlMTVkZmVjMCwgMHgwMmMzMmY3NSwgMHgxMjgxNGNmMCwgMHhhMzhkNDY5NywgMHhjNjZiZDNmOSwgMHhlNzAzOGY1ZiwgMHg5NTE1OTI5YywgMHhlYmJmNmQ3YSwgMHhkYTk1NTI1OSwgMHgyZGQ0YmU4MywgMHhkMzU4NzQyMSwgMHgyOTQ5ZTA2OSwgMHg0NDhlYzljOCwgMHg2YTc1YzI4OSwgMHg3OGY0OGU3OSwgMHg2Yjk5NTgzZSwgMHhkZDI3Yjk3MSwgMHhiNmJlZTE0ZiwgMHgxN2YwODhhZCwgMHg2NmM5MjBhYywgMHhiNDdkY2UzYSwgMHgxODYzZGY0YSwgMHg4MmU1MWEzMSwgMHg2MDk3NTEzMywgMHg0NTYyNTM3ZiwgMHhlMGIxNjQ3NywgMHg4NGJiNmJhZSwgMHgxY2ZlODFhMCwgMHg5NGY5MDgyYiwgMHg1ODcwNDg2OCwgMHgxOThmNDVmZCwgMHg4Nzk0ZGU2YywgMHhiNzUyN2JmOCwgMHgyM2FiNzNkMywgMHhlMjcyNGIwMiwgMHg1N2UzMWY4ZiwgMHgyYTY2NTVhYiwgMHgwN2IyZWIyOCwgMHgwMzJmYjVjMiwgMHg5YTg2YzU3YiwgMHhhNWQzMzcwOCwgMHhmMjMwMjg4NywgMHhiMjIzYmZhNSwgMHhiYTAyMDM2YSwgMHg1Y2VkMTY4MiwgMHgyYjhhY2YxYywgMHg5MmE3NzliNCwgMHhmMGYzMDdmMiwgMHhhMTRlNjllMiwgMHhjZDY1ZGFmNCwgMHhkNTA2MDViZSwgMHgxZmQxMzQ2MiwgMHg4YWM0YTZmZSwgMHg5ZDM0MmU1MywgMHhhMGEyZjM1NSwgMHgzMjA1OGFlMSwgMHg3NWE0ZjZlYiwgMHgzOTBiODNlYywgMHhhYTQwNjBlZiwgMHgwNjVlNzE5ZiwgMHg1MWJkNmUxMCwgMHhmOTNlMjE4YSwgMHgzZDk2ZGQwNiwgMHhhZWRkM2UwNSwgMHg0NjRkZTZiZCwgMHhiNTkxNTQ4ZCwgMHgwNTcxYzQ1ZCwgMHg2ZjA0MDZkNCwgMHhmZjYwNTAxNSwgMHgyNDE5OThmYiwgMHg5N2Q2YmRlOSwgMHhjYzg5NDA0MywgMHg3NzY3ZDk5ZSwgMHhiZGIwZTg0MiwgMHg4ODA3ODk4YiwgMHgzOGU3MTk1YiwgMHhkYjc5YzhlZSwgMHg0N2ExN2MwYSwgMHhlOTdjNDIwZiwgMHhjOWY4ODQxZSwgMHgwMDAwMDAwMCwgMHg4MzA5ODA4NiwgMHg0ODMyMmJlZCwgMHhhYzFlMTE3MCwgMHg0ZTZjNWE3MiwgMHhmYmZkMGVmZiwgMHg1NjBmODUzOCwgMHgxZTNkYWVkNSwgMHgyNzM2MmQzOSwgMHg2NDBhMGZkOSwgMHgyMTY4NWNhNiwgMHhkMTliNWI1NCwgMHgzYTI0MzYyZSwgMHhiMTBjMGE2NywgMHgwZjkzNTdlNywgMHhkMmI0ZWU5NiwgMHg5ZTFiOWI5MSwgMHg0ZjgwYzBjNSwgMHhhMjYxZGMyMCwgMHg2OTVhNzc0YiwgMHgxNjFjMTIxYSwgMHgwYWUyOTNiYSwgMHhlNWMwYTAyYSwgMHg0MzNjMjJlMCwgMHgxZDEyMWIxNywgMHgwYjBlMDkwZCwgMHhhZGYyOGJjNywgMHhiOTJkYjZhOCwgMHhjODE0MWVhOSwgMHg4NTU3ZjExOSwgMHg0Y2FmNzUwNywgMHhiYmVlOTlkZCwgMHhmZGEzN2Y2MCwgMHg5ZmY3MDEyNiwgMHhiYzVjNzJmNSwgMHhjNTQ0NjYzYiwgMHgzNDViZmI3ZSwgMHg3NjhiNDMyOSwgMHhkY2NiMjNjNiwgMHg2OGI2ZWRmYywgMHg2M2I4ZTRmMSwgMHhjYWQ3MzFkYywgMHgxMDQyNjM4NSwgMHg0MDEzOTcyMiwgMHgyMDg0YzYxMSwgMHg3ZDg1NGEyNCwgMHhmOGQyYmIzZCwgMHgxMWFlZjkzMiwgMHg2ZGM3MjlhMSwgMHg0YjFkOWUyZiwgMHhmM2RjYjIzMCwgMHhlYzBkODY1MiwgMHhkMDc3YzFlMywgMHg2YzJiYjMxNiwgMHg5OWE5NzBiOSwgMHhmYTExOTQ0OCwgMHgyMjQ3ZTk2NCwgMHhjNGE4ZmM4YywgMHgxYWEwZjAzZiwgMHhkODU2N2QyYywgMHhlZjIyMzM5MCwgMHhjNzg3NDk0ZSwgMHhjMWQ5MzhkMSwgMHhmZThjY2FhMiwgMHgzNjk4ZDQwYiwgMHhjZmE2ZjU4MSwgMHgyOGE1N2FkZSwgMHgyNmRhYjc4ZSwgMHhhNDNmYWRiZiwgMHhlNDJjM2E5ZCwgMHgwZDUwNzg5MiwgMHg5YjZhNWZjYywgMHg2MjU0N2U0NiwgMHhjMmY2OGQxMywgMHhlODkwZDhiOCwgMHg1ZTJlMzlmNywgMHhmNTgyYzNhZiwgMHhiZTlmNWQ4MCwgMHg3YzY5ZDA5MywgMHhhOTZmZDUyZCwgMHhiM2NmMjUxMiwgMHgzYmM4YWM5OSwgMHhhNzEwMTg3ZCwgMHg2ZWU4OWM2MywgMHg3YmRiM2JiYiwgMHgwOWNkMjY3OCwgMHhmNDZlNTkxOCwgMHgwMWVjOWFiNywgMHhhODgzNGY5YSwgMHg2NWU2OTU2ZSwgMHg3ZWFhZmZlNiwgMHgwODIxYmNjZiwgMHhlNmVmMTVlOCwgMHhkOWJhZTc5YiwgMHhjZTRhNmYzNiwgMHhkNGVhOWYwOSwgMHhkNjI5YjA3YywgMHhhZjMxYTRiMiwgMHgzMTJhM2YyMywgMHgzMGM2YTU5NCwgMHhjMDM1YTI2NiwgMHgzNzc0NGViYywgMHhhNmZjODJjYSwgMHhiMGUwOTBkMCwgMHgxNTMzYTdkOCwgMHg0YWYxMDQ5OCwgMHhmNzQxZWNkYSwgMHgwZTdmY2Q1MCwgMHgyZjE3OTFmNiwgMHg4ZDc2NGRkNiwgMHg0ZDQzZWZiMCwgMHg1NGNjYWE0ZCwgMHhkZmU0OTYwNCwgMHhlMzllZDFiNSwgMHgxYjRjNmE4OCwgMHhiOGMxMmMxZiwgMHg3ZjQ2NjU1MSwgMHgwNDlkNWVlYSwgMHg1ZDAxOGMzNSwgMHg3M2ZhODc3NCwgMHgyZWZiMGI0MSwgMHg1YWIzNjcxZCwgMHg1MjkyZGJkMiwgMHgzM2U5MTA1NiwgMHgxMzZkZDY0NywgMHg4YzlhZDc2MSwgMHg3YTM3YTEwYywgMHg4ZTU5ZjgxNCwgMHg4OWViMTMzYywgMHhlZWNlYTkyNywgMHgzNWI3NjFjOSwgMHhlZGUxMWNlNSwgMHgzYzdhNDdiMSwgMHg1OTljZDJkZiwgMHgzZjU1ZjI3MywgMHg3OTE4MTRjZSwgMHhiZjczYzczNywgMHhlYTUzZjdjZCwgMHg1YjVmZmRhYSwgMHgxNGRmM2Q2ZiwgMHg4Njc4NDRkYiwgMHg4MWNhYWZmMywgMHgzZWI5NjhjNCwgMHgyYzM4MjQzNCwgMHg1ZmMyYTM0MCwgMHg3MjE2MWRjMywgMHgwY2JjZTIyNSwgMHg4YjI4M2M0OSwgMHg0MWZmMGQ5NSwgMHg3MTM5YTgwMSwgMHhkZTA4MGNiMywgMHg5Y2Q4YjRlNCwgMHg5MDY0NTZjMSwgMHg2MTdiY2I4NCwgMHg3MGQ1MzJiNiwgMHg3NDQ4NmM1YywgMHg0MmQwYjg1N107XG4gICAgdmFyIFQ3ID0gWzB4YTc1MDUxZjQsIDB4NjU1MzdlNDEsIDB4YTRjMzFhMTcsIDB4NWU5NjNhMjcsIDB4NmJjYjNiYWIsIDB4NDVmMTFmOWQsIDB4NThhYmFjZmEsIDB4MDM5MzRiZTMsIDB4ZmE1NTIwMzAsIDB4NmRmNmFkNzYsIDB4NzY5MTg4Y2MsIDB4NGMyNWY1MDIsIDB4ZDdmYzRmZTUsIDB4Y2JkN2M1MmEsIDB4NDQ4MDI2MzUsIDB4YTM4ZmI1NjIsIDB4NWE0OWRlYjEsIDB4MWI2NzI1YmEsIDB4MGU5ODQ1ZWEsIDB4YzBlMTVkZmUsIDB4NzUwMmMzMmYsIDB4ZjAxMjgxNGMsIDB4OTdhMzhkNDYsIDB4ZjljNjZiZDMsIDB4NWZlNzAzOGYsIDB4OWM5NTE1OTIsIDB4N2FlYmJmNmQsIDB4NTlkYTk1NTIsIDB4ODMyZGQ0YmUsIDB4MjFkMzU4NzQsIDB4NjkyOTQ5ZTAsIDB4Yzg0NDhlYzksIDB4ODk2YTc1YzIsIDB4Nzk3OGY0OGUsIDB4M2U2Yjk5NTgsIDB4NzFkZDI3YjksIDB4NGZiNmJlZTEsIDB4YWQxN2YwODgsIDB4YWM2NmM5MjAsIDB4M2FiNDdkY2UsIDB4NGExODYzZGYsIDB4MzE4MmU1MWEsIDB4MzM2MDk3NTEsIDB4N2Y0NTYyNTMsIDB4NzdlMGIxNjQsIDB4YWU4NGJiNmIsIDB4YTAxY2ZlODEsIDB4MmI5NGY5MDgsIDB4Njg1ODcwNDgsIDB4ZmQxOThmNDUsIDB4NmM4Nzk0ZGUsIDB4ZjhiNzUyN2IsIDB4ZDMyM2FiNzMsIDB4MDJlMjcyNGIsIDB4OGY1N2UzMWYsIDB4YWIyYTY2NTUsIDB4MjgwN2IyZWIsIDB4YzIwMzJmYjUsIDB4N2I5YTg2YzUsIDB4MDhhNWQzMzcsIDB4ODdmMjMwMjgsIDB4YTViMjIzYmYsIDB4NmFiYTAyMDMsIDB4ODI1Y2VkMTYsIDB4MWMyYjhhY2YsIDB4YjQ5MmE3NzksIDB4ZjJmMGYzMDcsIDB4ZTJhMTRlNjksIDB4ZjRjZDY1ZGEsIDB4YmVkNTA2MDUsIDB4NjIxZmQxMzQsIDB4ZmU4YWM0YTYsIDB4NTM5ZDM0MmUsIDB4NTVhMGEyZjMsIDB4ZTEzMjA1OGEsIDB4ZWI3NWE0ZjYsIDB4ZWMzOTBiODMsIDB4ZWZhYTQwNjAsIDB4OWYwNjVlNzEsIDB4MTA1MWJkNmUsIDB4OGFmOTNlMjEsIDB4MDYzZDk2ZGQsIDB4MDVhZWRkM2UsIDB4YmQ0NjRkZTYsIDB4OGRiNTkxNTQsIDB4NWQwNTcxYzQsIDB4ZDQ2ZjA0MDYsIDB4MTVmZjYwNTAsIDB4ZmIyNDE5OTgsIDB4ZTk5N2Q2YmQsIDB4NDNjYzg5NDAsIDB4OWU3NzY3ZDksIDB4NDJiZGIwZTgsIDB4OGI4ODA3ODksIDB4NWIzOGU3MTksIDB4ZWVkYjc5YzgsIDB4MGE0N2ExN2MsIDB4MGZlOTdjNDIsIDB4MWVjOWY4ODQsIDB4MDAwMDAwMDAsIDB4ODY4MzA5ODAsIDB4ZWQ0ODMyMmIsIDB4NzBhYzFlMTEsIDB4NzI0ZTZjNWEsIDB4ZmZmYmZkMGUsIDB4Mzg1NjBmODUsIDB4ZDUxZTNkYWUsIDB4MzkyNzM2MmQsIDB4ZDk2NDBhMGYsIDB4YTYyMTY4NWMsIDB4NTRkMTliNWIsIDB4MmUzYTI0MzYsIDB4NjdiMTBjMGEsIDB4ZTcwZjkzNTcsIDB4OTZkMmI0ZWUsIDB4OTE5ZTFiOWIsIDB4YzU0ZjgwYzAsIDB4MjBhMjYxZGMsIDB4NGI2OTVhNzcsIDB4MWExNjFjMTIsIDB4YmEwYWUyOTMsIDB4MmFlNWMwYTAsIDB4ZTA0MzNjMjIsIDB4MTcxZDEyMWIsIDB4MGQwYjBlMDksIDB4YzdhZGYyOGIsIDB4YThiOTJkYjYsIDB4YTljODE0MWUsIDB4MTk4NTU3ZjEsIDB4MDc0Y2FmNzUsIDB4ZGRiYmVlOTksIDB4NjBmZGEzN2YsIDB4MjY5ZmY3MDEsIDB4ZjViYzVjNzIsIDB4M2JjNTQ0NjYsIDB4N2UzNDViZmIsIDB4Mjk3NjhiNDMsIDB4YzZkY2NiMjMsIDB4ZmM2OGI2ZWQsIDB4ZjE2M2I4ZTQsIDB4ZGNjYWQ3MzEsIDB4ODUxMDQyNjMsIDB4MjI0MDEzOTcsIDB4MTEyMDg0YzYsIDB4MjQ3ZDg1NGEsIDB4M2RmOGQyYmIsIDB4MzIxMWFlZjksIDB4YTE2ZGM3MjksIDB4MmY0YjFkOWUsIDB4MzBmM2RjYjIsIDB4NTJlYzBkODYsIDB4ZTNkMDc3YzEsIDB4MTY2YzJiYjMsIDB4Yjk5OWE5NzAsIDB4NDhmYTExOTQsIDB4NjQyMjQ3ZTksIDB4OGNjNGE4ZmMsIDB4M2YxYWEwZjAsIDB4MmNkODU2N2QsIDB4OTBlZjIyMzMsIDB4NGVjNzg3NDksIDB4ZDFjMWQ5MzgsIDB4YTJmZThjY2EsIDB4MGIzNjk4ZDQsIDB4ODFjZmE2ZjUsIDB4ZGUyOGE1N2EsIDB4OGUyNmRhYjcsIDB4YmZhNDNmYWQsIDB4OWRlNDJjM2EsIDB4OTIwZDUwNzgsIDB4Y2M5YjZhNWYsIDB4NDY2MjU0N2UsIDB4MTNjMmY2OGQsIDB4YjhlODkwZDgsIDB4Zjc1ZTJlMzksIDB4YWZmNTgyYzMsIDB4ODBiZTlmNWQsIDB4OTM3YzY5ZDAsIDB4MmRhOTZmZDUsIDB4MTJiM2NmMjUsIDB4OTkzYmM4YWMsIDB4N2RhNzEwMTgsIDB4NjM2ZWU4OWMsIDB4YmI3YmRiM2IsIDB4NzgwOWNkMjYsIDB4MThmNDZlNTksIDB4YjcwMWVjOWEsIDB4OWFhODgzNGYsIDB4NmU2NWU2OTUsIDB4ZTY3ZWFhZmYsIDB4Y2YwODIxYmMsIDB4ZThlNmVmMTUsIDB4OWJkOWJhZTcsIDB4MzZjZTRhNmYsIDB4MDlkNGVhOWYsIDB4N2NkNjI5YjAsIDB4YjJhZjMxYTQsIDB4MjMzMTJhM2YsIDB4OTQzMGM2YTUsIDB4NjZjMDM1YTIsIDB4YmMzNzc0NGUsIDB4Y2FhNmZjODIsIDB4ZDBiMGUwOTAsIDB4ZDgxNTMzYTcsIDB4OTg0YWYxMDQsIDB4ZGFmNzQxZWMsIDB4NTAwZTdmY2QsIDB4ZjYyZjE3OTEsIDB4ZDY4ZDc2NGQsIDB4YjA0ZDQzZWYsIDB4NGQ1NGNjYWEsIDB4MDRkZmU0OTYsIDB4YjVlMzllZDEsIDB4ODgxYjRjNmEsIDB4MWZiOGMxMmMsIDB4NTE3ZjQ2NjUsIDB4ZWEwNDlkNWUsIDB4MzU1ZDAxOGMsIDB4NzQ3M2ZhODcsIDB4NDEyZWZiMGIsIDB4MWQ1YWIzNjcsIDB4ZDI1MjkyZGIsIDB4NTYzM2U5MTAsIDB4NDcxMzZkZDYsIDB4NjE4YzlhZDcsIDB4MGM3YTM3YTEsIDB4MTQ4ZTU5ZjgsIDB4M2M4OWViMTMsIDB4MjdlZWNlYTksIDB4YzkzNWI3NjEsIDB4ZTVlZGUxMWMsIDB4YjEzYzdhNDcsIDB4ZGY1OTljZDIsIDB4NzMzZjU1ZjIsIDB4Y2U3OTE4MTQsIDB4MzdiZjczYzcsIDB4Y2RlYTUzZjcsIDB4YWE1YjVmZmQsIDB4NmYxNGRmM2QsIDB4ZGI4Njc4NDQsIDB4ZjM4MWNhYWYsIDB4YzQzZWI5NjgsIDB4MzQyYzM4MjQsIDB4NDA1ZmMyYTMsIDB4YzM3MjE2MWQsIDB4MjUwY2JjZTIsIDB4NDk4YjI4M2MsIDB4OTU0MWZmMGQsIDB4MDE3MTM5YTgsIDB4YjNkZTA4MGMsIDB4ZTQ5Y2Q4YjQsIDB4YzE5MDY0NTYsIDB4ODQ2MTdiY2IsIDB4YjY3MGQ1MzIsIDB4NWM3NDQ4NmMsIDB4NTc0MmQwYjhdO1xuICAgIHZhciBUOCA9IFsweGY0YTc1MDUxLCAweDQxNjU1MzdlLCAweDE3YTRjMzFhLCAweDI3NWU5NjNhLCAweGFiNmJjYjNiLCAweDlkNDVmMTFmLCAweGZhNThhYmFjLCAweGUzMDM5MzRiLCAweDMwZmE1NTIwLCAweDc2NmRmNmFkLCAweGNjNzY5MTg4LCAweDAyNGMyNWY1LCAweGU1ZDdmYzRmLCAweDJhY2JkN2M1LCAweDM1NDQ4MDI2LCAweDYyYTM4ZmI1LCAweGIxNWE0OWRlLCAweGJhMWI2NzI1LCAweGVhMGU5ODQ1LCAweGZlYzBlMTVkLCAweDJmNzUwMmMzLCAweDRjZjAxMjgxLCAweDQ2OTdhMzhkLCAweGQzZjljNjZiLCAweDhmNWZlNzAzLCAweDkyOWM5NTE1LCAweDZkN2FlYmJmLCAweDUyNTlkYTk1LCAweGJlODMyZGQ0LCAweDc0MjFkMzU4LCAweGUwNjkyOTQ5LCAweGM5Yzg0NDhlLCAweGMyODk2YTc1LCAweDhlNzk3OGY0LCAweDU4M2U2Yjk5LCAweGI5NzFkZDI3LCAweGUxNGZiNmJlLCAweDg4YWQxN2YwLCAweDIwYWM2NmM5LCAweGNlM2FiNDdkLCAweGRmNGExODYzLCAweDFhMzE4MmU1LCAweDUxMzM2MDk3LCAweDUzN2Y0NTYyLCAweDY0NzdlMGIxLCAweDZiYWU4NGJiLCAweDgxYTAxY2ZlLCAweDA4MmI5NGY5LCAweDQ4Njg1ODcwLCAweDQ1ZmQxOThmLCAweGRlNmM4Nzk0LCAweDdiZjhiNzUyLCAweDczZDMyM2FiLCAweDRiMDJlMjcyLCAweDFmOGY1N2UzLCAweDU1YWIyYTY2LCAweGViMjgwN2IyLCAweGI1YzIwMzJmLCAweGM1N2I5YTg2LCAweDM3MDhhNWQzLCAweDI4ODdmMjMwLCAweGJmYTViMjIzLCAweDAzNmFiYTAyLCAweDE2ODI1Y2VkLCAweGNmMWMyYjhhLCAweDc5YjQ5MmE3LCAweDA3ZjJmMGYzLCAweDY5ZTJhMTRlLCAweGRhZjRjZDY1LCAweDA1YmVkNTA2LCAweDM0NjIxZmQxLCAweGE2ZmU4YWM0LCAweDJlNTM5ZDM0LCAweGYzNTVhMGEyLCAweDhhZTEzMjA1LCAweGY2ZWI3NWE0LCAweDgzZWMzOTBiLCAweDYwZWZhYTQwLCAweDcxOWYwNjVlLCAweDZlMTA1MWJkLCAweDIxOGFmOTNlLCAweGRkMDYzZDk2LCAweDNlMDVhZWRkLCAweGU2YmQ0NjRkLCAweDU0OGRiNTkxLCAweGM0NWQwNTcxLCAweDA2ZDQ2ZjA0LCAweDUwMTVmZjYwLCAweDk4ZmIyNDE5LCAweGJkZTk5N2Q2LCAweDQwNDNjYzg5LCAweGQ5OWU3NzY3LCAweGU4NDJiZGIwLCAweDg5OGI4ODA3LCAweDE5NWIzOGU3LCAweGM4ZWVkYjc5LCAweDdjMGE0N2ExLCAweDQyMGZlOTdjLCAweDg0MWVjOWY4LCAweDAwMDAwMDAwLCAweDgwODY4MzA5LCAweDJiZWQ0ODMyLCAweDExNzBhYzFlLCAweDVhNzI0ZTZjLCAweDBlZmZmYmZkLCAweDg1Mzg1NjBmLCAweGFlZDUxZTNkLCAweDJkMzkyNzM2LCAweDBmZDk2NDBhLCAweDVjYTYyMTY4LCAweDViNTRkMTliLCAweDM2MmUzYTI0LCAweDBhNjdiMTBjLCAweDU3ZTcwZjkzLCAweGVlOTZkMmI0LCAweDliOTE5ZTFiLCAweGMwYzU0ZjgwLCAweGRjMjBhMjYxLCAweDc3NGI2OTVhLCAweDEyMWExNjFjLCAweDkzYmEwYWUyLCAweGEwMmFlNWMwLCAweDIyZTA0MzNjLCAweDFiMTcxZDEyLCAweDA5MGQwYjBlLCAweDhiYzdhZGYyLCAweGI2YThiOTJkLCAweDFlYTljODE0LCAweGYxMTk4NTU3LCAweDc1MDc0Y2FmLCAweDk5ZGRiYmVlLCAweDdmNjBmZGEzLCAweDAxMjY5ZmY3LCAweDcyZjViYzVjLCAweDY2M2JjNTQ0LCAweGZiN2UzNDViLCAweDQzMjk3NjhiLCAweDIzYzZkY2NiLCAweGVkZmM2OGI2LCAweGU0ZjE2M2I4LCAweDMxZGNjYWQ3LCAweDYzODUxMDQyLCAweDk3MjI0MDEzLCAweGM2MTEyMDg0LCAweDRhMjQ3ZDg1LCAweGJiM2RmOGQyLCAweGY5MzIxMWFlLCAweDI5YTE2ZGM3LCAweDllMmY0YjFkLCAweGIyMzBmM2RjLCAweDg2NTJlYzBkLCAweGMxZTNkMDc3LCAweGIzMTY2YzJiLCAweDcwYjk5OWE5LCAweDk0NDhmYTExLCAweGU5NjQyMjQ3LCAweGZjOGNjNGE4LCAweGYwM2YxYWEwLCAweDdkMmNkODU2LCAweDMzOTBlZjIyLCAweDQ5NGVjNzg3LCAweDM4ZDFjMWQ5LCAweGNhYTJmZThjLCAweGQ0MGIzNjk4LCAweGY1ODFjZmE2LCAweDdhZGUyOGE1LCAweGI3OGUyNmRhLCAweGFkYmZhNDNmLCAweDNhOWRlNDJjLCAweDc4OTIwZDUwLCAweDVmY2M5YjZhLCAweDdlNDY2MjU0LCAweDhkMTNjMmY2LCAweGQ4YjhlODkwLCAweDM5Zjc1ZTJlLCAweGMzYWZmNTgyLCAweDVkODBiZTlmLCAweGQwOTM3YzY5LCAweGQ1MmRhOTZmLCAweDI1MTJiM2NmLCAweGFjOTkzYmM4LCAweDE4N2RhNzEwLCAweDljNjM2ZWU4LCAweDNiYmI3YmRiLCAweDI2NzgwOWNkLCAweDU5MThmNDZlLCAweDlhYjcwMWVjLCAweDRmOWFhODgzLCAweDk1NmU2NWU2LCAweGZmZTY3ZWFhLCAweGJjY2YwODIxLCAweDE1ZThlNmVmLCAweGU3OWJkOWJhLCAweDZmMzZjZTRhLCAweDlmMDlkNGVhLCAweGIwN2NkNjI5LCAweGE0YjJhZjMxLCAweDNmMjMzMTJhLCAweGE1OTQzMGM2LCAweGEyNjZjMDM1LCAweDRlYmMzNzc0LCAweDgyY2FhNmZjLCAweDkwZDBiMGUwLCAweGE3ZDgxNTMzLCAweDA0OTg0YWYxLCAweGVjZGFmNzQxLCAweGNkNTAwZTdmLCAweDkxZjYyZjE3LCAweDRkZDY4ZDc2LCAweGVmYjA0ZDQzLCAweGFhNGQ1NGNjLCAweDk2MDRkZmU0LCAweGQxYjVlMzllLCAweDZhODgxYjRjLCAweDJjMWZiOGMxLCAweDY1NTE3ZjQ2LCAweDVlZWEwNDlkLCAweDhjMzU1ZDAxLCAweDg3NzQ3M2ZhLCAweDBiNDEyZWZiLCAweDY3MWQ1YWIzLCAweGRiZDI1MjkyLCAweDEwNTYzM2U5LCAweGQ2NDcxMzZkLCAweGQ3NjE4YzlhLCAweGExMGM3YTM3LCAweGY4MTQ4ZTU5LCAweDEzM2M4OWViLCAweGE5MjdlZWNlLCAweDYxYzkzNWI3LCAweDFjZTVlZGUxLCAweDQ3YjEzYzdhLCAweGQyZGY1OTljLCAweGYyNzMzZjU1LCAweDE0Y2U3OTE4LCAweGM3MzdiZjczLCAweGY3Y2RlYTUzLCAweGZkYWE1YjVmLCAweDNkNmYxNGRmLCAweDQ0ZGI4Njc4LCAweGFmZjM4MWNhLCAweDY4YzQzZWI5LCAweDI0MzQyYzM4LCAweGEzNDA1ZmMyLCAweDFkYzM3MjE2LCAweGUyMjUwY2JjLCAweDNjNDk4YjI4LCAweDBkOTU0MWZmLCAweGE4MDE3MTM5LCAweDBjYjNkZTA4LCAweGI0ZTQ5Y2Q4LCAweDU2YzE5MDY0LCAweGNiODQ2MTdiLCAweDMyYjY3MGQ1LCAweDZjNWM3NDQ4LCAweGI4NTc0MmQwXTtcblxuICAgIC8vIFRyYW5zZm9ybWF0aW9ucyBmb3IgZGVjcnlwdGlvbiBrZXkgZXhwYW5zaW9uXG4gICAgdmFyIFUxID0gWzB4MDAwMDAwMDAsIDB4MGUwOTBkMGIsIDB4MWMxMjFhMTYsIDB4MTIxYjE3MWQsIDB4MzgyNDM0MmMsIDB4MzYyZDM5MjcsIDB4MjQzNjJlM2EsIDB4MmEzZjIzMzEsIDB4NzA0ODY4NTgsIDB4N2U0MTY1NTMsIDB4NmM1YTcyNGUsIDB4NjI1MzdmNDUsIDB4NDg2YzVjNzQsIDB4NDY2NTUxN2YsIDB4NTQ3ZTQ2NjIsIDB4NWE3NzRiNjksIDB4ZTA5MGQwYjAsIDB4ZWU5OWRkYmIsIDB4ZmM4MmNhYTYsIDB4ZjI4YmM3YWQsIDB4ZDhiNGU0OWMsIDB4ZDZiZGU5OTcsIDB4YzRhNmZlOGEsIDB4Y2FhZmYzODEsIDB4OTBkOGI4ZTgsIDB4OWVkMWI1ZTMsIDB4OGNjYWEyZmUsIDB4ODJjM2FmZjUsIDB4YThmYzhjYzQsIDB4YTZmNTgxY2YsIDB4YjRlZTk2ZDIsIDB4YmFlNzliZDksIDB4ZGIzYmJiN2IsIDB4ZDUzMmI2NzAsIDB4YzcyOWExNmQsIDB4YzkyMGFjNjYsIDB4ZTMxZjhmNTcsIDB4ZWQxNjgyNWMsIDB4ZmYwZDk1NDEsIDB4ZjEwNDk4NGEsIDB4YWI3M2QzMjMsIDB4YTU3YWRlMjgsIDB4Yjc2MWM5MzUsIDB4Yjk2OGM0M2UsIDB4OTM1N2U3MGYsIDB4OWQ1ZWVhMDQsIDB4OGY0NWZkMTksIDB4ODE0Y2YwMTIsIDB4M2JhYjZiY2IsIDB4MzVhMjY2YzAsIDB4MjdiOTcxZGQsIDB4MjliMDdjZDYsIDB4MDM4ZjVmZTcsIDB4MGQ4NjUyZWMsIDB4MWY5ZDQ1ZjEsIDB4MTE5NDQ4ZmEsIDB4NGJlMzAzOTMsIDB4NDVlYTBlOTgsIDB4NTdmMTE5ODUsIDB4NTlmODE0OGUsIDB4NzNjNzM3YmYsIDB4N2RjZTNhYjQsIDB4NmZkNTJkYTksIDB4NjFkYzIwYTIsIDB4YWQ3NjZkZjYsIDB4YTM3ZjYwZmQsIDB4YjE2NDc3ZTAsIDB4YmY2ZDdhZWIsIDB4OTU1MjU5ZGEsIDB4OWI1YjU0ZDEsIDB4ODk0MDQzY2MsIDB4ODc0OTRlYzcsIDB4ZGQzZTA1YWUsIDB4ZDMzNzA4YTUsIDB4YzEyYzFmYjgsIDB4Y2YyNTEyYjMsIDB4ZTUxYTMxODIsIDB4ZWIxMzNjODksIDB4ZjkwODJiOTQsIDB4ZjcwMTI2OWYsIDB4NGRlNmJkNDYsIDB4NDNlZmIwNGQsIDB4NTFmNGE3NTAsIDB4NWZmZGFhNWIsIDB4NzVjMjg5NmEsIDB4N2JjYjg0NjEsIDB4NjlkMDkzN2MsIDB4NjdkOTllNzcsIDB4M2RhZWQ1MWUsIDB4MzNhN2Q4MTUsIDB4MjFiY2NmMDgsIDB4MmZiNWMyMDMsIDB4MDU4YWUxMzIsIDB4MGI4M2VjMzksIDB4MTk5OGZiMjQsIDB4MTc5MWY2MmYsIDB4NzY0ZGQ2OGQsIDB4Nzg0NGRiODYsIDB4NmE1ZmNjOWIsIDB4NjQ1NmMxOTAsIDB4NGU2OWUyYTEsIDB4NDA2MGVmYWEsIDB4NTI3YmY4YjcsIDB4NWM3MmY1YmMsIDB4MDYwNWJlZDUsIDB4MDgwY2IzZGUsIDB4MWExN2E0YzMsIDB4MTQxZWE5YzgsIDB4M2UyMThhZjksIDB4MzAyODg3ZjIsIDB4MjIzMzkwZWYsIDB4MmMzYTlkZTQsIDB4OTZkZDA2M2QsIDB4OThkNDBiMzYsIDB4OGFjZjFjMmIsIDB4ODRjNjExMjAsIDB4YWVmOTMyMTEsIDB4YTBmMDNmMWEsIDB4YjJlYjI4MDcsIDB4YmNlMjI1MGMsIDB4ZTY5NTZlNjUsIDB4ZTg5YzYzNmUsIDB4ZmE4Nzc0NzMsIDB4ZjQ4ZTc5NzgsIDB4ZGViMTVhNDksIDB4ZDBiODU3NDIsIDB4YzJhMzQwNWYsIDB4Y2NhYTRkNTQsIDB4NDFlY2RhZjcsIDB4NGZlNWQ3ZmMsIDB4NWRmZWMwZTEsIDB4NTNmN2NkZWEsIDB4NzljOGVlZGIsIDB4NzdjMWUzZDAsIDB4NjVkYWY0Y2QsIDB4NmJkM2Y5YzYsIDB4MzFhNGIyYWYsIDB4M2ZhZGJmYTQsIDB4MmRiNmE4YjksIDB4MjNiZmE1YjIsIDB4MDk4MDg2ODMsIDB4MDc4OThiODgsIDB4MTU5MjljOTUsIDB4MWI5YjkxOWUsIDB4YTE3YzBhNDcsIDB4YWY3NTA3NGMsIDB4YmQ2ZTEwNTEsIDB4YjM2NzFkNWEsIDB4OTk1ODNlNmIsIDB4OTc1MTMzNjAsIDB4ODU0YTI0N2QsIDB4OGI0MzI5NzYsIDB4ZDEzNDYyMWYsIDB4ZGYzZDZmMTQsIDB4Y2QyNjc4MDksIDB4YzMyZjc1MDIsIDB4ZTkxMDU2MzMsIDB4ZTcxOTViMzgsIDB4ZjUwMjRjMjUsIDB4ZmIwYjQxMmUsIDB4OWFkNzYxOGMsIDB4OTRkZTZjODcsIDB4ODZjNTdiOWEsIDB4ODhjYzc2OTEsIDB4YTJmMzU1YTAsIDB4YWNmYTU4YWIsIDB4YmVlMTRmYjYsIDB4YjBlODQyYmQsIDB4ZWE5ZjA5ZDQsIDB4ZTQ5NjA0ZGYsIDB4ZjY4ZDEzYzIsIDB4Zjg4NDFlYzksIDB4ZDJiYjNkZjgsIDB4ZGNiMjMwZjMsIDB4Y2VhOTI3ZWUsIDB4YzBhMDJhZTUsIDB4N2E0N2IxM2MsIDB4NzQ0ZWJjMzcsIDB4NjY1NWFiMmEsIDB4Njg1Y2E2MjEsIDB4NDI2Mzg1MTAsIDB4NGM2YTg4MWIsIDB4NWU3MTlmMDYsIDB4NTA3ODkyMGQsIDB4MGEwZmQ5NjQsIDB4MDQwNmQ0NmYsIDB4MTYxZGMzNzIsIDB4MTgxNGNlNzksIDB4MzIyYmVkNDgsIDB4M2MyMmUwNDMsIDB4MmUzOWY3NWUsIDB4MjAzMGZhNTUsIDB4ZWM5YWI3MDEsIDB4ZTI5M2JhMGEsIDB4ZjA4OGFkMTcsIDB4ZmU4MWEwMWMsIDB4ZDRiZTgzMmQsIDB4ZGFiNzhlMjYsIDB4YzhhYzk5M2IsIDB4YzZhNTk0MzAsIDB4OWNkMmRmNTksIDB4OTJkYmQyNTIsIDB4ODBjMGM1NGYsIDB4OGVjOWM4NDQsIDB4YTRmNmViNzUsIDB4YWFmZmU2N2UsIDB4YjhlNGYxNjMsIDB4YjZlZGZjNjgsIDB4MGMwYTY3YjEsIDB4MDIwMzZhYmEsIDB4MTAxODdkYTcsIDB4MWUxMTcwYWMsIDB4MzQyZTUzOWQsIDB4M2EyNzVlOTYsIDB4MjgzYzQ5OGIsIDB4MjYzNTQ0ODAsIDB4N2M0MjBmZTksIDB4NzI0YjAyZTIsIDB4NjA1MDE1ZmYsIDB4NmU1OTE4ZjQsIDB4NDQ2NjNiYzUsIDB4NGE2ZjM2Y2UsIDB4NTg3NDIxZDMsIDB4NTY3ZDJjZDgsIDB4MzdhMTBjN2EsIDB4MzlhODAxNzEsIDB4MmJiMzE2NmMsIDB4MjViYTFiNjcsIDB4MGY4NTM4NTYsIDB4MDE4YzM1NWQsIDB4MTM5NzIyNDAsIDB4MWQ5ZTJmNGIsIDB4NDdlOTY0MjIsIDB4NDllMDY5MjksIDB4NWJmYjdlMzQsIDB4NTVmMjczM2YsIDB4N2ZjZDUwMGUsIDB4NzFjNDVkMDUsIDB4NjNkZjRhMTgsIDB4NmRkNjQ3MTMsIDB4ZDczMWRjY2EsIDB4ZDkzOGQxYzEsIDB4Y2IyM2M2ZGMsIDB4YzUyYWNiZDcsIDB4ZWYxNWU4ZTYsIDB4ZTExY2U1ZWQsIDB4ZjMwN2YyZjAsIDB4ZmQwZWZmZmIsIDB4YTc3OWI0OTIsIDB4YTk3MGI5OTksIDB4YmI2YmFlODQsIDB4YjU2MmEzOGYsIDB4OWY1ZDgwYmUsIDB4OTE1NDhkYjUsIDB4ODM0ZjlhYTgsIDB4OGQ0Njk3YTNdO1xuICAgIHZhciBVMiA9IFsweDAwMDAwMDAwLCAweDBiMGUwOTBkLCAweDE2MWMxMjFhLCAweDFkMTIxYjE3LCAweDJjMzgyNDM0LCAweDI3MzYyZDM5LCAweDNhMjQzNjJlLCAweDMxMmEzZjIzLCAweDU4NzA0ODY4LCAweDUzN2U0MTY1LCAweDRlNmM1YTcyLCAweDQ1NjI1MzdmLCAweDc0NDg2YzVjLCAweDdmNDY2NTUxLCAweDYyNTQ3ZTQ2LCAweDY5NWE3NzRiLCAweGIwZTA5MGQwLCAweGJiZWU5OWRkLCAweGE2ZmM4MmNhLCAweGFkZjI4YmM3LCAweDljZDhiNGU0LCAweDk3ZDZiZGU5LCAweDhhYzRhNmZlLCAweDgxY2FhZmYzLCAweGU4OTBkOGI4LCAweGUzOWVkMWI1LCAweGZlOGNjYWEyLCAweGY1ODJjM2FmLCAweGM0YThmYzhjLCAweGNmYTZmNTgxLCAweGQyYjRlZTk2LCAweGQ5YmFlNzliLCAweDdiZGIzYmJiLCAweDcwZDUzMmI2LCAweDZkYzcyOWExLCAweDY2YzkyMGFjLCAweDU3ZTMxZjhmLCAweDVjZWQxNjgyLCAweDQxZmYwZDk1LCAweDRhZjEwNDk4LCAweDIzYWI3M2QzLCAweDI4YTU3YWRlLCAweDM1Yjc2MWM5LCAweDNlYjk2OGM0LCAweDBmOTM1N2U3LCAweDA0OWQ1ZWVhLCAweDE5OGY0NWZkLCAweDEyODE0Y2YwLCAweGNiM2JhYjZiLCAweGMwMzVhMjY2LCAweGRkMjdiOTcxLCAweGQ2MjliMDdjLCAweGU3MDM4ZjVmLCAweGVjMGQ4NjUyLCAweGYxMWY5ZDQ1LCAweGZhMTE5NDQ4LCAweDkzNGJlMzAzLCAweDk4NDVlYTBlLCAweDg1NTdmMTE5LCAweDhlNTlmODE0LCAweGJmNzNjNzM3LCAweGI0N2RjZTNhLCAweGE5NmZkNTJkLCAweGEyNjFkYzIwLCAweGY2YWQ3NjZkLCAweGZkYTM3ZjYwLCAweGUwYjE2NDc3LCAweGViYmY2ZDdhLCAweGRhOTU1MjU5LCAweGQxOWI1YjU0LCAweGNjODk0MDQzLCAweGM3ODc0OTRlLCAweGFlZGQzZTA1LCAweGE1ZDMzNzA4LCAweGI4YzEyYzFmLCAweGIzY2YyNTEyLCAweDgyZTUxYTMxLCAweDg5ZWIxMzNjLCAweDk0ZjkwODJiLCAweDlmZjcwMTI2LCAweDQ2NGRlNmJkLCAweDRkNDNlZmIwLCAweDUwNTFmNGE3LCAweDViNWZmZGFhLCAweDZhNzVjMjg5LCAweDYxN2JjYjg0LCAweDdjNjlkMDkzLCAweDc3NjdkOTllLCAweDFlM2RhZWQ1LCAweDE1MzNhN2Q4LCAweDA4MjFiY2NmLCAweDAzMmZiNWMyLCAweDMyMDU4YWUxLCAweDM5MGI4M2VjLCAweDI0MTk5OGZiLCAweDJmMTc5MWY2LCAweDhkNzY0ZGQ2LCAweDg2Nzg0NGRiLCAweDliNmE1ZmNjLCAweDkwNjQ1NmMxLCAweGExNGU2OWUyLCAweGFhNDA2MGVmLCAweGI3NTI3YmY4LCAweGJjNWM3MmY1LCAweGQ1MDYwNWJlLCAweGRlMDgwY2IzLCAweGMzMWExN2E0LCAweGM4MTQxZWE5LCAweGY5M2UyMThhLCAweGYyMzAyODg3LCAweGVmMjIzMzkwLCAweGU0MmMzYTlkLCAweDNkOTZkZDA2LCAweDM2OThkNDBiLCAweDJiOGFjZjFjLCAweDIwODRjNjExLCAweDExYWVmOTMyLCAweDFhYTBmMDNmLCAweDA3YjJlYjI4LCAweDBjYmNlMjI1LCAweDY1ZTY5NTZlLCAweDZlZTg5YzYzLCAweDczZmE4Nzc0LCAweDc4ZjQ4ZTc5LCAweDQ5ZGViMTVhLCAweDQyZDBiODU3LCAweDVmYzJhMzQwLCAweDU0Y2NhYTRkLCAweGY3NDFlY2RhLCAweGZjNGZlNWQ3LCAweGUxNWRmZWMwLCAweGVhNTNmN2NkLCAweGRiNzljOGVlLCAweGQwNzdjMWUzLCAweGNkNjVkYWY0LCAweGM2NmJkM2Y5LCAweGFmMzFhNGIyLCAweGE0M2ZhZGJmLCAweGI5MmRiNmE4LCAweGIyMjNiZmE1LCAweDgzMDk4MDg2LCAweDg4MDc4OThiLCAweDk1MTU5MjljLCAweDllMWI5YjkxLCAweDQ3YTE3YzBhLCAweDRjYWY3NTA3LCAweDUxYmQ2ZTEwLCAweDVhYjM2NzFkLCAweDZiOTk1ODNlLCAweDYwOTc1MTMzLCAweDdkODU0YTI0LCAweDc2OGI0MzI5LCAweDFmZDEzNDYyLCAweDE0ZGYzZDZmLCAweDA5Y2QyNjc4LCAweDAyYzMyZjc1LCAweDMzZTkxMDU2LCAweDM4ZTcxOTViLCAweDI1ZjUwMjRjLCAweDJlZmIwYjQxLCAweDhjOWFkNzYxLCAweDg3OTRkZTZjLCAweDlhODZjNTdiLCAweDkxODhjYzc2LCAweGEwYTJmMzU1LCAweGFiYWNmYTU4LCAweGI2YmVlMTRmLCAweGJkYjBlODQyLCAweGQ0ZWE5ZjA5LCAweGRmZTQ5NjA0LCAweGMyZjY4ZDEzLCAweGM5Zjg4NDFlLCAweGY4ZDJiYjNkLCAweGYzZGNiMjMwLCAweGVlY2VhOTI3LCAweGU1YzBhMDJhLCAweDNjN2E0N2IxLCAweDM3NzQ0ZWJjLCAweDJhNjY1NWFiLCAweDIxNjg1Y2E2LCAweDEwNDI2Mzg1LCAweDFiNGM2YTg4LCAweDA2NWU3MTlmLCAweDBkNTA3ODkyLCAweDY0MGEwZmQ5LCAweDZmMDQwNmQ0LCAweDcyMTYxZGMzLCAweDc5MTgxNGNlLCAweDQ4MzIyYmVkLCAweDQzM2MyMmUwLCAweDVlMmUzOWY3LCAweDU1MjAzMGZhLCAweDAxZWM5YWI3LCAweDBhZTI5M2JhLCAweDE3ZjA4OGFkLCAweDFjZmU4MWEwLCAweDJkZDRiZTgzLCAweDI2ZGFiNzhlLCAweDNiYzhhYzk5LCAweDMwYzZhNTk0LCAweDU5OWNkMmRmLCAweDUyOTJkYmQyLCAweDRmODBjMGM1LCAweDQ0OGVjOWM4LCAweDc1YTRmNmViLCAweDdlYWFmZmU2LCAweDYzYjhlNGYxLCAweDY4YjZlZGZjLCAweGIxMGMwYTY3LCAweGJhMDIwMzZhLCAweGE3MTAxODdkLCAweGFjMWUxMTcwLCAweDlkMzQyZTUzLCAweDk2M2EyNzVlLCAweDhiMjgzYzQ5LCAweDgwMjYzNTQ0LCAweGU5N2M0MjBmLCAweGUyNzI0YjAyLCAweGZmNjA1MDE1LCAweGY0NmU1OTE4LCAweGM1NDQ2NjNiLCAweGNlNGE2ZjM2LCAweGQzNTg3NDIxLCAweGQ4NTY3ZDJjLCAweDdhMzdhMTBjLCAweDcxMzlhODAxLCAweDZjMmJiMzE2LCAweDY3MjViYTFiLCAweDU2MGY4NTM4LCAweDVkMDE4YzM1LCAweDQwMTM5NzIyLCAweDRiMWQ5ZTJmLCAweDIyNDdlOTY0LCAweDI5NDllMDY5LCAweDM0NWJmYjdlLCAweDNmNTVmMjczLCAweDBlN2ZjZDUwLCAweDA1NzFjNDVkLCAweDE4NjNkZjRhLCAweDEzNmRkNjQ3LCAweGNhZDczMWRjLCAweGMxZDkzOGQxLCAweGRjY2IyM2M2LCAweGQ3YzUyYWNiLCAweGU2ZWYxNWU4LCAweGVkZTExY2U1LCAweGYwZjMwN2YyLCAweGZiZmQwZWZmLCAweDkyYTc3OWI0LCAweDk5YTk3MGI5LCAweDg0YmI2YmFlLCAweDhmYjU2MmEzLCAweGJlOWY1ZDgwLCAweGI1OTE1NDhkLCAweGE4ODM0ZjlhLCAweGEzOGQ0Njk3XTtcbiAgICB2YXIgVTMgPSBbMHgwMDAwMDAwMCwgMHgwZDBiMGUwOSwgMHgxYTE2MWMxMiwgMHgxNzFkMTIxYiwgMHgzNDJjMzgyNCwgMHgzOTI3MzYyZCwgMHgyZTNhMjQzNiwgMHgyMzMxMmEzZiwgMHg2ODU4NzA0OCwgMHg2NTUzN2U0MSwgMHg3MjRlNmM1YSwgMHg3ZjQ1NjI1MywgMHg1Yzc0NDg2YywgMHg1MTdmNDY2NSwgMHg0NjYyNTQ3ZSwgMHg0YjY5NWE3NywgMHhkMGIwZTA5MCwgMHhkZGJiZWU5OSwgMHhjYWE2ZmM4MiwgMHhjN2FkZjI4YiwgMHhlNDljZDhiNCwgMHhlOTk3ZDZiZCwgMHhmZThhYzRhNiwgMHhmMzgxY2FhZiwgMHhiOGU4OTBkOCwgMHhiNWUzOWVkMSwgMHhhMmZlOGNjYSwgMHhhZmY1ODJjMywgMHg4Y2M0YThmYywgMHg4MWNmYTZmNSwgMHg5NmQyYjRlZSwgMHg5YmQ5YmFlNywgMHhiYjdiZGIzYiwgMHhiNjcwZDUzMiwgMHhhMTZkYzcyOSwgMHhhYzY2YzkyMCwgMHg4ZjU3ZTMxZiwgMHg4MjVjZWQxNiwgMHg5NTQxZmYwZCwgMHg5ODRhZjEwNCwgMHhkMzIzYWI3MywgMHhkZTI4YTU3YSwgMHhjOTM1Yjc2MSwgMHhjNDNlYjk2OCwgMHhlNzBmOTM1NywgMHhlYTA0OWQ1ZSwgMHhmZDE5OGY0NSwgMHhmMDEyODE0YywgMHg2YmNiM2JhYiwgMHg2NmMwMzVhMiwgMHg3MWRkMjdiOSwgMHg3Y2Q2MjliMCwgMHg1ZmU3MDM4ZiwgMHg1MmVjMGQ4NiwgMHg0NWYxMWY5ZCwgMHg0OGZhMTE5NCwgMHgwMzkzNGJlMywgMHgwZTk4NDVlYSwgMHgxOTg1NTdmMSwgMHgxNDhlNTlmOCwgMHgzN2JmNzNjNywgMHgzYWI0N2RjZSwgMHgyZGE5NmZkNSwgMHgyMGEyNjFkYywgMHg2ZGY2YWQ3NiwgMHg2MGZkYTM3ZiwgMHg3N2UwYjE2NCwgMHg3YWViYmY2ZCwgMHg1OWRhOTU1MiwgMHg1NGQxOWI1YiwgMHg0M2NjODk0MCwgMHg0ZWM3ODc0OSwgMHgwNWFlZGQzZSwgMHgwOGE1ZDMzNywgMHgxZmI4YzEyYywgMHgxMmIzY2YyNSwgMHgzMTgyZTUxYSwgMHgzYzg5ZWIxMywgMHgyYjk0ZjkwOCwgMHgyNjlmZjcwMSwgMHhiZDQ2NGRlNiwgMHhiMDRkNDNlZiwgMHhhNzUwNTFmNCwgMHhhYTViNWZmZCwgMHg4OTZhNzVjMiwgMHg4NDYxN2JjYiwgMHg5MzdjNjlkMCwgMHg5ZTc3NjdkOSwgMHhkNTFlM2RhZSwgMHhkODE1MzNhNywgMHhjZjA4MjFiYywgMHhjMjAzMmZiNSwgMHhlMTMyMDU4YSwgMHhlYzM5MGI4MywgMHhmYjI0MTk5OCwgMHhmNjJmMTc5MSwgMHhkNjhkNzY0ZCwgMHhkYjg2Nzg0NCwgMHhjYzliNmE1ZiwgMHhjMTkwNjQ1NiwgMHhlMmExNGU2OSwgMHhlZmFhNDA2MCwgMHhmOGI3NTI3YiwgMHhmNWJjNWM3MiwgMHhiZWQ1MDYwNSwgMHhiM2RlMDgwYywgMHhhNGMzMWExNywgMHhhOWM4MTQxZSwgMHg4YWY5M2UyMSwgMHg4N2YyMzAyOCwgMHg5MGVmMjIzMywgMHg5ZGU0MmMzYSwgMHgwNjNkOTZkZCwgMHgwYjM2OThkNCwgMHgxYzJiOGFjZiwgMHgxMTIwODRjNiwgMHgzMjExYWVmOSwgMHgzZjFhYTBmMCwgMHgyODA3YjJlYiwgMHgyNTBjYmNlMiwgMHg2ZTY1ZTY5NSwgMHg2MzZlZTg5YywgMHg3NDczZmE4NywgMHg3OTc4ZjQ4ZSwgMHg1YTQ5ZGViMSwgMHg1NzQyZDBiOCwgMHg0MDVmYzJhMywgMHg0ZDU0Y2NhYSwgMHhkYWY3NDFlYywgMHhkN2ZjNGZlNSwgMHhjMGUxNWRmZSwgMHhjZGVhNTNmNywgMHhlZWRiNzljOCwgMHhlM2QwNzdjMSwgMHhmNGNkNjVkYSwgMHhmOWM2NmJkMywgMHhiMmFmMzFhNCwgMHhiZmE0M2ZhZCwgMHhhOGI5MmRiNiwgMHhhNWIyMjNiZiwgMHg4NjgzMDk4MCwgMHg4Yjg4MDc4OSwgMHg5Yzk1MTU5MiwgMHg5MTllMWI5YiwgMHgwYTQ3YTE3YywgMHgwNzRjYWY3NSwgMHgxMDUxYmQ2ZSwgMHgxZDVhYjM2NywgMHgzZTZiOTk1OCwgMHgzMzYwOTc1MSwgMHgyNDdkODU0YSwgMHgyOTc2OGI0MywgMHg2MjFmZDEzNCwgMHg2ZjE0ZGYzZCwgMHg3ODA5Y2QyNiwgMHg3NTAyYzMyZiwgMHg1NjMzZTkxMCwgMHg1YjM4ZTcxOSwgMHg0YzI1ZjUwMiwgMHg0MTJlZmIwYiwgMHg2MThjOWFkNywgMHg2Yzg3OTRkZSwgMHg3YjlhODZjNSwgMHg3NjkxODhjYywgMHg1NWEwYTJmMywgMHg1OGFiYWNmYSwgMHg0ZmI2YmVlMSwgMHg0MmJkYjBlOCwgMHgwOWQ0ZWE5ZiwgMHgwNGRmZTQ5NiwgMHgxM2MyZjY4ZCwgMHgxZWM5Zjg4NCwgMHgzZGY4ZDJiYiwgMHgzMGYzZGNiMiwgMHgyN2VlY2VhOSwgMHgyYWU1YzBhMCwgMHhiMTNjN2E0NywgMHhiYzM3NzQ0ZSwgMHhhYjJhNjY1NSwgMHhhNjIxNjg1YywgMHg4NTEwNDI2MywgMHg4ODFiNGM2YSwgMHg5ZjA2NWU3MSwgMHg5MjBkNTA3OCwgMHhkOTY0MGEwZiwgMHhkNDZmMDQwNiwgMHhjMzcyMTYxZCwgMHhjZTc5MTgxNCwgMHhlZDQ4MzIyYiwgMHhlMDQzM2MyMiwgMHhmNzVlMmUzOSwgMHhmYTU1MjAzMCwgMHhiNzAxZWM5YSwgMHhiYTBhZTI5MywgMHhhZDE3ZjA4OCwgMHhhMDFjZmU4MSwgMHg4MzJkZDRiZSwgMHg4ZTI2ZGFiNywgMHg5OTNiYzhhYywgMHg5NDMwYzZhNSwgMHhkZjU5OWNkMiwgMHhkMjUyOTJkYiwgMHhjNTRmODBjMCwgMHhjODQ0OGVjOSwgMHhlYjc1YTRmNiwgMHhlNjdlYWFmZiwgMHhmMTYzYjhlNCwgMHhmYzY4YjZlZCwgMHg2N2IxMGMwYSwgMHg2YWJhMDIwMywgMHg3ZGE3MTAxOCwgMHg3MGFjMWUxMSwgMHg1MzlkMzQyZSwgMHg1ZTk2M2EyNywgMHg0OThiMjgzYywgMHg0NDgwMjYzNSwgMHgwZmU5N2M0MiwgMHgwMmUyNzI0YiwgMHgxNWZmNjA1MCwgMHgxOGY0NmU1OSwgMHgzYmM1NDQ2NiwgMHgzNmNlNGE2ZiwgMHgyMWQzNTg3NCwgMHgyY2Q4NTY3ZCwgMHgwYzdhMzdhMSwgMHgwMTcxMzlhOCwgMHgxNjZjMmJiMywgMHgxYjY3MjViYSwgMHgzODU2MGY4NSwgMHgzNTVkMDE4YywgMHgyMjQwMTM5NywgMHgyZjRiMWQ5ZSwgMHg2NDIyNDdlOSwgMHg2OTI5NDllMCwgMHg3ZTM0NWJmYiwgMHg3MzNmNTVmMiwgMHg1MDBlN2ZjZCwgMHg1ZDA1NzFjNCwgMHg0YTE4NjNkZiwgMHg0NzEzNmRkNiwgMHhkY2NhZDczMSwgMHhkMWMxZDkzOCwgMHhjNmRjY2IyMywgMHhjYmQ3YzUyYSwgMHhlOGU2ZWYxNSwgMHhlNWVkZTExYywgMHhmMmYwZjMwNywgMHhmZmZiZmQwZSwgMHhiNDkyYTc3OSwgMHhiOTk5YTk3MCwgMHhhZTg0YmI2YiwgMHhhMzhmYjU2MiwgMHg4MGJlOWY1ZCwgMHg4ZGI1OTE1NCwgMHg5YWE4ODM0ZiwgMHg5N2EzOGQ0Nl07XG4gICAgdmFyIFU0ID0gWzB4MDAwMDAwMDAsIDB4MDkwZDBiMGUsIDB4MTIxYTE2MWMsIDB4MWIxNzFkMTIsIDB4MjQzNDJjMzgsIDB4MmQzOTI3MzYsIDB4MzYyZTNhMjQsIDB4M2YyMzMxMmEsIDB4NDg2ODU4NzAsIDB4NDE2NTUzN2UsIDB4NWE3MjRlNmMsIDB4NTM3ZjQ1NjIsIDB4NmM1Yzc0NDgsIDB4NjU1MTdmNDYsIDB4N2U0NjYyNTQsIDB4Nzc0YjY5NWEsIDB4OTBkMGIwZTAsIDB4OTlkZGJiZWUsIDB4ODJjYWE2ZmMsIDB4OGJjN2FkZjIsIDB4YjRlNDljZDgsIDB4YmRlOTk3ZDYsIDB4YTZmZThhYzQsIDB4YWZmMzgxY2EsIDB4ZDhiOGU4OTAsIDB4ZDFiNWUzOWUsIDB4Y2FhMmZlOGMsIDB4YzNhZmY1ODIsIDB4ZmM4Y2M0YTgsIDB4ZjU4MWNmYTYsIDB4ZWU5NmQyYjQsIDB4ZTc5YmQ5YmEsIDB4M2JiYjdiZGIsIDB4MzJiNjcwZDUsIDB4MjlhMTZkYzcsIDB4MjBhYzY2YzksIDB4MWY4ZjU3ZTMsIDB4MTY4MjVjZWQsIDB4MGQ5NTQxZmYsIDB4MDQ5ODRhZjEsIDB4NzNkMzIzYWIsIDB4N2FkZTI4YTUsIDB4NjFjOTM1YjcsIDB4NjhjNDNlYjksIDB4NTdlNzBmOTMsIDB4NWVlYTA0OWQsIDB4NDVmZDE5OGYsIDB4NGNmMDEyODEsIDB4YWI2YmNiM2IsIDB4YTI2NmMwMzUsIDB4Yjk3MWRkMjcsIDB4YjA3Y2Q2MjksIDB4OGY1ZmU3MDMsIDB4ODY1MmVjMGQsIDB4OWQ0NWYxMWYsIDB4OTQ0OGZhMTEsIDB4ZTMwMzkzNGIsIDB4ZWEwZTk4NDUsIDB4ZjExOTg1NTcsIDB4ZjgxNDhlNTksIDB4YzczN2JmNzMsIDB4Y2UzYWI0N2QsIDB4ZDUyZGE5NmYsIDB4ZGMyMGEyNjEsIDB4NzY2ZGY2YWQsIDB4N2Y2MGZkYTMsIDB4NjQ3N2UwYjEsIDB4NmQ3YWViYmYsIDB4NTI1OWRhOTUsIDB4NWI1NGQxOWIsIDB4NDA0M2NjODksIDB4NDk0ZWM3ODcsIDB4M2UwNWFlZGQsIDB4MzcwOGE1ZDMsIDB4MmMxZmI4YzEsIDB4MjUxMmIzY2YsIDB4MWEzMTgyZTUsIDB4MTMzYzg5ZWIsIDB4MDgyYjk0ZjksIDB4MDEyNjlmZjcsIDB4ZTZiZDQ2NGQsIDB4ZWZiMDRkNDMsIDB4ZjRhNzUwNTEsIDB4ZmRhYTViNWYsIDB4YzI4OTZhNzUsIDB4Y2I4NDYxN2IsIDB4ZDA5MzdjNjksIDB4ZDk5ZTc3NjcsIDB4YWVkNTFlM2QsIDB4YTdkODE1MzMsIDB4YmNjZjA4MjEsIDB4YjVjMjAzMmYsIDB4OGFlMTMyMDUsIDB4ODNlYzM5MGIsIDB4OThmYjI0MTksIDB4OTFmNjJmMTcsIDB4NGRkNjhkNzYsIDB4NDRkYjg2NzgsIDB4NWZjYzliNmEsIDB4NTZjMTkwNjQsIDB4NjllMmExNGUsIDB4NjBlZmFhNDAsIDB4N2JmOGI3NTIsIDB4NzJmNWJjNWMsIDB4MDViZWQ1MDYsIDB4MGNiM2RlMDgsIDB4MTdhNGMzMWEsIDB4MWVhOWM4MTQsIDB4MjE4YWY5M2UsIDB4Mjg4N2YyMzAsIDB4MzM5MGVmMjIsIDB4M2E5ZGU0MmMsIDB4ZGQwNjNkOTYsIDB4ZDQwYjM2OTgsIDB4Y2YxYzJiOGEsIDB4YzYxMTIwODQsIDB4ZjkzMjExYWUsIDB4ZjAzZjFhYTAsIDB4ZWIyODA3YjIsIDB4ZTIyNTBjYmMsIDB4OTU2ZTY1ZTYsIDB4OWM2MzZlZTgsIDB4ODc3NDczZmEsIDB4OGU3OTc4ZjQsIDB4YjE1YTQ5ZGUsIDB4Yjg1NzQyZDAsIDB4YTM0MDVmYzIsIDB4YWE0ZDU0Y2MsIDB4ZWNkYWY3NDEsIDB4ZTVkN2ZjNGYsIDB4ZmVjMGUxNWQsIDB4ZjdjZGVhNTMsIDB4YzhlZWRiNzksIDB4YzFlM2QwNzcsIDB4ZGFmNGNkNjUsIDB4ZDNmOWM2NmIsIDB4YTRiMmFmMzEsIDB4YWRiZmE0M2YsIDB4YjZhOGI5MmQsIDB4YmZhNWIyMjMsIDB4ODA4NjgzMDksIDB4ODk4Yjg4MDcsIDB4OTI5Yzk1MTUsIDB4OWI5MTllMWIsIDB4N2MwYTQ3YTEsIDB4NzUwNzRjYWYsIDB4NmUxMDUxYmQsIDB4NjcxZDVhYjMsIDB4NTgzZTZiOTksIDB4NTEzMzYwOTcsIDB4NGEyNDdkODUsIDB4NDMyOTc2OGIsIDB4MzQ2MjFmZDEsIDB4M2Q2ZjE0ZGYsIDB4MjY3ODA5Y2QsIDB4MmY3NTAyYzMsIDB4MTA1NjMzZTksIDB4MTk1YjM4ZTcsIDB4MDI0YzI1ZjUsIDB4MGI0MTJlZmIsIDB4ZDc2MThjOWEsIDB4ZGU2Yzg3OTQsIDB4YzU3YjlhODYsIDB4Y2M3NjkxODgsIDB4ZjM1NWEwYTIsIDB4ZmE1OGFiYWMsIDB4ZTE0ZmI2YmUsIDB4ZTg0MmJkYjAsIDB4OWYwOWQ0ZWEsIDB4OTYwNGRmZTQsIDB4OGQxM2MyZjYsIDB4ODQxZWM5ZjgsIDB4YmIzZGY4ZDIsIDB4YjIzMGYzZGMsIDB4YTkyN2VlY2UsIDB4YTAyYWU1YzAsIDB4NDdiMTNjN2EsIDB4NGViYzM3NzQsIDB4NTVhYjJhNjYsIDB4NWNhNjIxNjgsIDB4NjM4NTEwNDIsIDB4NmE4ODFiNGMsIDB4NzE5ZjA2NWUsIDB4Nzg5MjBkNTAsIDB4MGZkOTY0MGEsIDB4MDZkNDZmMDQsIDB4MWRjMzcyMTYsIDB4MTRjZTc5MTgsIDB4MmJlZDQ4MzIsIDB4MjJlMDQzM2MsIDB4MzlmNzVlMmUsIDB4MzBmYTU1MjAsIDB4OWFiNzAxZWMsIDB4OTNiYTBhZTIsIDB4ODhhZDE3ZjAsIDB4ODFhMDFjZmUsIDB4YmU4MzJkZDQsIDB4Yjc4ZTI2ZGEsIDB4YWM5OTNiYzgsIDB4YTU5NDMwYzYsIDB4ZDJkZjU5OWMsIDB4ZGJkMjUyOTIsIDB4YzBjNTRmODAsIDB4YzljODQ0OGUsIDB4ZjZlYjc1YTQsIDB4ZmZlNjdlYWEsIDB4ZTRmMTYzYjgsIDB4ZWRmYzY4YjYsIDB4MGE2N2IxMGMsIDB4MDM2YWJhMDIsIDB4MTg3ZGE3MTAsIDB4MTE3MGFjMWUsIDB4MmU1MzlkMzQsIDB4Mjc1ZTk2M2EsIDB4M2M0OThiMjgsIDB4MzU0NDgwMjYsIDB4NDIwZmU5N2MsIDB4NGIwMmUyNzIsIDB4NTAxNWZmNjAsIDB4NTkxOGY0NmUsIDB4NjYzYmM1NDQsIDB4NmYzNmNlNGEsIDB4NzQyMWQzNTgsIDB4N2QyY2Q4NTYsIDB4YTEwYzdhMzcsIDB4YTgwMTcxMzksIDB4YjMxNjZjMmIsIDB4YmExYjY3MjUsIDB4ODUzODU2MGYsIDB4OGMzNTVkMDEsIDB4OTcyMjQwMTMsIDB4OWUyZjRiMWQsIDB4ZTk2NDIyNDcsIDB4ZTA2OTI5NDksIDB4ZmI3ZTM0NWIsIDB4ZjI3MzNmNTUsIDB4Y2Q1MDBlN2YsIDB4YzQ1ZDA1NzEsIDB4ZGY0YTE4NjMsIDB4ZDY0NzEzNmQsIDB4MzFkY2NhZDcsIDB4MzhkMWMxZDksIDB4MjNjNmRjY2IsIDB4MmFjYmQ3YzUsIDB4MTVlOGU2ZWYsIDB4MWNlNWVkZTEsIDB4MDdmMmYwZjMsIDB4MGVmZmZiZmQsIDB4NzliNDkyYTcsIDB4NzBiOTk5YTksIDB4NmJhZTg0YmIsIDB4NjJhMzhmYjUsIDB4NWQ4MGJlOWYsIDB4NTQ4ZGI1OTEsIDB4NGY5YWE4ODMsIDB4NDY5N2EzOGRdO1xuXG4gICAgZnVuY3Rpb24gY29udmVydFRvSW50MzIoYnl0ZXMpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSA0KSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChcbiAgICAgICAgICAgICAgICAoYnl0ZXNbaSAgICBdIDw8IDI0KSB8XG4gICAgICAgICAgICAgICAgKGJ5dGVzW2kgKyAxXSA8PCAxNikgfFxuICAgICAgICAgICAgICAgIChieXRlc1tpICsgMl0gPDwgIDgpIHxcbiAgICAgICAgICAgICAgICAgYnl0ZXNbaSArIDNdXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgdmFyIEFFUyA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgQUVTKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0FFUyBtdXN0IGJlIGluc3Rhbml0YXRlZCB3aXRoIGBuZXdgJyk7XG4gICAgICAgIH1cblxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2tleScsIHtcbiAgICAgICAgICAgIHZhbHVlOiBjb2VyY2VBcnJheShrZXksIHRydWUpXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuX3ByZXBhcmUoKTtcbiAgICB9XG5cblxuICAgIEFFUy5wcm90b3R5cGUuX3ByZXBhcmUgPSBmdW5jdGlvbigpIHtcblxuICAgICAgICB2YXIgcm91bmRzID0gbnVtYmVyT2ZSb3VuZHNbdGhpcy5rZXkubGVuZ3RoXTtcbiAgICAgICAgaWYgKHJvdW5kcyA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQga2V5IHNpemUgKG11c3QgYmUgMTYsIDI0IG9yIDMyIGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZW5jcnlwdGlvbiByb3VuZCBrZXlzXG4gICAgICAgIHRoaXMuX0tlID0gW107XG5cbiAgICAgICAgLy8gZGVjcnlwdGlvbiByb3VuZCBrZXlzXG4gICAgICAgIHRoaXMuX0tkID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPD0gcm91bmRzOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuX0tlLnB1c2goWzAsIDAsIDAsIDBdKTtcbiAgICAgICAgICAgIHRoaXMuX0tkLnB1c2goWzAsIDAsIDAsIDBdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByb3VuZEtleUNvdW50ID0gKHJvdW5kcyArIDEpICogNDtcbiAgICAgICAgdmFyIEtDID0gdGhpcy5rZXkubGVuZ3RoIC8gNDtcblxuICAgICAgICAvLyBjb252ZXJ0IHRoZSBrZXkgaW50byBpbnRzXG4gICAgICAgIHZhciB0ayA9IGNvbnZlcnRUb0ludDMyKHRoaXMua2V5KTtcblxuICAgICAgICAvLyBjb3B5IHZhbHVlcyBpbnRvIHJvdW5kIGtleSBhcnJheXNcbiAgICAgICAgdmFyIGluZGV4O1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IEtDOyBpKyspIHtcbiAgICAgICAgICAgIGluZGV4ID0gaSA+PiAyO1xuICAgICAgICAgICAgdGhpcy5fS2VbaW5kZXhdW2kgJSA0XSA9IHRrW2ldO1xuICAgICAgICAgICAgdGhpcy5fS2Rbcm91bmRzIC0gaW5kZXhdW2kgJSA0XSA9IHRrW2ldO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8ga2V5IGV4cGFuc2lvbiAoZmlwcy0xOTcgc2VjdGlvbiA1LjIpXG4gICAgICAgIHZhciByY29ucG9pbnRlciA9IDA7XG4gICAgICAgIHZhciB0ID0gS0MsIHR0O1xuICAgICAgICB3aGlsZSAodCA8IHJvdW5kS2V5Q291bnQpIHtcbiAgICAgICAgICAgIHR0ID0gdGtbS0MgLSAxXTtcbiAgICAgICAgICAgIHRrWzBdIF49ICgoU1sodHQgPj4gMTYpICYgMHhGRl0gPDwgMjQpIF5cbiAgICAgICAgICAgICAgICAgICAgICAoU1sodHQgPj4gIDgpICYgMHhGRl0gPDwgMTYpIF5cbiAgICAgICAgICAgICAgICAgICAgICAoU1sgdHQgICAgICAgICYgMHhGRl0gPDwgIDgpIF5cbiAgICAgICAgICAgICAgICAgICAgICAgU1sodHQgPj4gMjQpICYgMHhGRl0gICAgICAgIF5cbiAgICAgICAgICAgICAgICAgICAgICAocmNvbltyY29ucG9pbnRlcl0gPDwgMjQpKTtcbiAgICAgICAgICAgIHJjb25wb2ludGVyICs9IDE7XG5cbiAgICAgICAgICAgIC8vIGtleSBleHBhbnNpb24gKGZvciBub24tMjU2IGJpdClcbiAgICAgICAgICAgIGlmIChLQyAhPSA4KSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBLQzsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRrW2ldIF49IHRrW2kgLSAxXTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGtleSBleHBhbnNpb24gZm9yIDI1Ni1iaXQga2V5cyBpcyBcInNsaWdodGx5IGRpZmZlcmVudFwiIChmaXBzLTE5NylcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCAoS0MgLyAyKTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRrW2ldIF49IHRrW2kgLSAxXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdHQgPSB0a1soS0MgLyAyKSAtIDFdO1xuXG4gICAgICAgICAgICAgICAgdGtbS0MgLyAyXSBePSAoU1sgdHQgICAgICAgICYgMHhGRl0gICAgICAgIF5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChTWyh0dCA+PiAgOCkgJiAweEZGXSA8PCAgOCkgXlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKFNbKHR0ID4+IDE2KSAmIDB4RkZdIDw8IDE2KSBeXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoU1sodHQgPj4gMjQpICYgMHhGRl0gPDwgMjQpKTtcblxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAoS0MgLyAyKSArIDE7IGkgPCBLQzsgaSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRrW2ldIF49IHRrW2kgLSAxXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGNvcHkgdmFsdWVzIGludG8gcm91bmQga2V5IGFycmF5c1xuICAgICAgICAgICAgdmFyIGkgPSAwLCByLCBjO1xuICAgICAgICAgICAgd2hpbGUgKGkgPCBLQyAmJiB0IDwgcm91bmRLZXlDb3VudCkge1xuICAgICAgICAgICAgICAgIHIgPSB0ID4+IDI7XG4gICAgICAgICAgICAgICAgYyA9IHQgJSA0O1xuICAgICAgICAgICAgICAgIHRoaXMuX0tlW3JdW2NdID0gdGtbaV07XG4gICAgICAgICAgICAgICAgdGhpcy5fS2Rbcm91bmRzIC0gcl1bY10gPSB0a1tpKytdO1xuICAgICAgICAgICAgICAgIHQrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGludmVyc2UtY2lwaGVyLWlmeSB0aGUgZGVjcnlwdGlvbiByb3VuZCBrZXkgKGZpcHMtMTk3IHNlY3Rpb24gNS4zKVxuICAgICAgICBmb3IgKHZhciByID0gMTsgciA8IHJvdW5kczsgcisrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBjID0gMDsgYyA8IDQ7IGMrKykge1xuICAgICAgICAgICAgICAgIHR0ID0gdGhpcy5fS2Rbcl1bY107XG4gICAgICAgICAgICAgICAgdGhpcy5fS2Rbcl1bY10gPSAoVTFbKHR0ID4+IDI0KSAmIDB4RkZdIF5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBVMlsodHQgPj4gMTYpICYgMHhGRl0gXlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFUzWyh0dCA+PiAgOCkgJiAweEZGXSBeXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgVTRbIHR0ICAgICAgICAmIDB4RkZdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIEFFUy5wcm90b3R5cGUuZW5jcnlwdCA9IGZ1bmN0aW9uKHBsYWludGV4dCkge1xuICAgICAgICBpZiAocGxhaW50ZXh0Lmxlbmd0aCAhPSAxNikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHBsYWludGV4dCBzaXplIChtdXN0IGJlIDE2IGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHJvdW5kcyA9IHRoaXMuX0tlLmxlbmd0aCAtIDE7XG4gICAgICAgIHZhciBhID0gWzAsIDAsIDAsIDBdO1xuXG4gICAgICAgIC8vIGNvbnZlcnQgcGxhaW50ZXh0IHRvIChpbnRzIF4ga2V5KVxuICAgICAgICB2YXIgdCA9IGNvbnZlcnRUb0ludDMyKHBsYWludGV4dCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICAgICAgICB0W2ldIF49IHRoaXMuX0tlWzBdW2ldO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gYXBwbHkgcm91bmQgdHJhbnNmb3Jtc1xuICAgICAgICBmb3IgKHZhciByID0gMTsgciA8IHJvdW5kczsgcisrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgICAgICAgICAgICAgIGFbaV0gPSAoVDFbKHRbIGkgICAgICAgICBdID4+IDI0KSAmIDB4ZmZdIF5cbiAgICAgICAgICAgICAgICAgICAgICAgIFQyWyh0WyhpICsgMSkgJSA0XSA+PiAxNikgJiAweGZmXSBeXG4gICAgICAgICAgICAgICAgICAgICAgICBUM1sodFsoaSArIDIpICUgNF0gPj4gIDgpICYgMHhmZl0gXlxuICAgICAgICAgICAgICAgICAgICAgICAgVDRbIHRbKGkgKyAzKSAlIDRdICAgICAgICAmIDB4ZmZdIF5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX0tlW3JdW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHQgPSBhLnNsaWNlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0aGUgbGFzdCByb3VuZCBpcyBzcGVjaWFsXG4gICAgICAgIHZhciByZXN1bHQgPSBjcmVhdGVBcnJheSgxNiksIHR0O1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgICAgICAgICAgdHQgPSB0aGlzLl9LZVtyb3VuZHNdW2ldO1xuICAgICAgICAgICAgcmVzdWx0WzQgKiBpICAgIF0gPSAoU1sodFsgaSAgICAgICAgIF0gPj4gMjQpICYgMHhmZl0gXiAodHQgPj4gMjQpKSAmIDB4ZmY7XG4gICAgICAgICAgICByZXN1bHRbNCAqIGkgKyAxXSA9IChTWyh0WyhpICsgMSkgJSA0XSA+PiAxNikgJiAweGZmXSBeICh0dCA+PiAxNikpICYgMHhmZjtcbiAgICAgICAgICAgIHJlc3VsdFs0ICogaSArIDJdID0gKFNbKHRbKGkgKyAyKSAlIDRdID4+ICA4KSAmIDB4ZmZdIF4gKHR0ID4+ICA4KSkgJiAweGZmO1xuICAgICAgICAgICAgcmVzdWx0WzQgKiBpICsgM10gPSAoU1sgdFsoaSArIDMpICUgNF0gICAgICAgICYgMHhmZl0gXiAgdHQgICAgICAgKSAmIDB4ZmY7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICAgIEFFUy5wcm90b3R5cGUuZGVjcnlwdCA9IGZ1bmN0aW9uKGNpcGhlcnRleHQpIHtcbiAgICAgICAgaWYgKGNpcGhlcnRleHQubGVuZ3RoICE9IDE2KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgY2lwaGVydGV4dCBzaXplIChtdXN0IGJlIDE2IGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHJvdW5kcyA9IHRoaXMuX0tkLmxlbmd0aCAtIDE7XG4gICAgICAgIHZhciBhID0gWzAsIDAsIDAsIDBdO1xuXG4gICAgICAgIC8vIGNvbnZlcnQgcGxhaW50ZXh0IHRvIChpbnRzIF4ga2V5KVxuICAgICAgICB2YXIgdCA9IGNvbnZlcnRUb0ludDMyKGNpcGhlcnRleHQpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykge1xuICAgICAgICAgICAgdFtpXSBePSB0aGlzLl9LZFswXVtpXTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGFwcGx5IHJvdW5kIHRyYW5zZm9ybXNcbiAgICAgICAgZm9yICh2YXIgciA9IDE7IHIgPCByb3VuZHM7IHIrKykge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA0OyBpKyspIHtcbiAgICAgICAgICAgICAgICBhW2ldID0gKFQ1Wyh0WyBpICAgICAgICAgIF0gPj4gMjQpICYgMHhmZl0gXlxuICAgICAgICAgICAgICAgICAgICAgICAgVDZbKHRbKGkgKyAzKSAlIDRdID4+IDE2KSAmIDB4ZmZdIF5cbiAgICAgICAgICAgICAgICAgICAgICAgIFQ3Wyh0WyhpICsgMikgJSA0XSA+PiAgOCkgJiAweGZmXSBeXG4gICAgICAgICAgICAgICAgICAgICAgICBUOFsgdFsoaSArIDEpICUgNF0gICAgICAgICYgMHhmZl0gXlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fS2Rbcl1baV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdCA9IGEuc2xpY2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHRoZSBsYXN0IHJvdW5kIGlzIHNwZWNpYWxcbiAgICAgICAgdmFyIHJlc3VsdCA9IGNyZWF0ZUFycmF5KDE2KSwgdHQ7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICAgICAgICB0dCA9IHRoaXMuX0tkW3JvdW5kc11baV07XG4gICAgICAgICAgICByZXN1bHRbNCAqIGkgICAgXSA9IChTaVsodFsgaSAgICAgICAgIF0gPj4gMjQpICYgMHhmZl0gXiAodHQgPj4gMjQpKSAmIDB4ZmY7XG4gICAgICAgICAgICByZXN1bHRbNCAqIGkgKyAxXSA9IChTaVsodFsoaSArIDMpICUgNF0gPj4gMTYpICYgMHhmZl0gXiAodHQgPj4gMTYpKSAmIDB4ZmY7XG4gICAgICAgICAgICByZXN1bHRbNCAqIGkgKyAyXSA9IChTaVsodFsoaSArIDIpICUgNF0gPj4gIDgpICYgMHhmZl0gXiAodHQgPj4gIDgpKSAmIDB4ZmY7XG4gICAgICAgICAgICByZXN1bHRbNCAqIGkgKyAzXSA9IChTaVsgdFsoaSArIDEpICUgNF0gICAgICAgICYgMHhmZl0gXiAgdHQgICAgICAgKSAmIDB4ZmY7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogIE1vZGUgT2YgT3BlcmF0aW9uIC0gRWxlY3RvbmljIENvZGVib29rIChFQ0IpXG4gICAgICovXG4gICAgdmFyIE1vZGVPZk9wZXJhdGlvbkVDQiA9IGZ1bmN0aW9uKGtleSkge1xuICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTW9kZU9mT3BlcmF0aW9uRUNCKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0FFUyBtdXN0IGJlIGluc3Rhbml0YXRlZCB3aXRoIGBuZXdgJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gXCJFbGVjdHJvbmljIENvZGUgQmxvY2tcIjtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJlY2JcIjtcblxuICAgICAgICB0aGlzLl9hZXMgPSBuZXcgQUVTKGtleSk7XG4gICAgfVxuXG4gICAgTW9kZU9mT3BlcmF0aW9uRUNCLnByb3RvdHlwZS5lbmNyeXB0ID0gZnVuY3Rpb24ocGxhaW50ZXh0KSB7XG4gICAgICAgIHBsYWludGV4dCA9IGNvZXJjZUFycmF5KHBsYWludGV4dCk7XG5cbiAgICAgICAgaWYgKChwbGFpbnRleHQubGVuZ3RoICUgMTYpICE9PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgcGxhaW50ZXh0IHNpemUgKG11c3QgYmUgbXVsdGlwbGUgb2YgMTYgYnl0ZXMpJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgY2lwaGVydGV4dCA9IGNyZWF0ZUFycmF5KHBsYWludGV4dC5sZW5ndGgpO1xuICAgICAgICB2YXIgYmxvY2sgPSBjcmVhdGVBcnJheSgxNik7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwbGFpbnRleHQubGVuZ3RoOyBpICs9IDE2KSB7XG4gICAgICAgICAgICBjb3B5QXJyYXkocGxhaW50ZXh0LCBibG9jaywgMCwgaSwgaSArIDE2KTtcbiAgICAgICAgICAgIGJsb2NrID0gdGhpcy5fYWVzLmVuY3J5cHQoYmxvY2spO1xuICAgICAgICAgICAgY29weUFycmF5KGJsb2NrLCBjaXBoZXJ0ZXh0LCBpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjaXBoZXJ0ZXh0O1xuICAgIH1cblxuICAgIE1vZGVPZk9wZXJhdGlvbkVDQi5wcm90b3R5cGUuZGVjcnlwdCA9IGZ1bmN0aW9uKGNpcGhlcnRleHQpIHtcbiAgICAgICAgY2lwaGVydGV4dCA9IGNvZXJjZUFycmF5KGNpcGhlcnRleHQpO1xuXG4gICAgICAgIGlmICgoY2lwaGVydGV4dC5sZW5ndGggJSAxNikgIT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBjaXBoZXJ0ZXh0IHNpemUgKG11c3QgYmUgbXVsdGlwbGUgb2YgMTYgYnl0ZXMpJyk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcGxhaW50ZXh0ID0gY3JlYXRlQXJyYXkoY2lwaGVydGV4dC5sZW5ndGgpO1xuICAgICAgICB2YXIgYmxvY2sgPSBjcmVhdGVBcnJheSgxNik7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaXBoZXJ0ZXh0Lmxlbmd0aDsgaSArPSAxNikge1xuICAgICAgICAgICAgY29weUFycmF5KGNpcGhlcnRleHQsIGJsb2NrLCAwLCBpLCBpICsgMTYpO1xuICAgICAgICAgICAgYmxvY2sgPSB0aGlzLl9hZXMuZGVjcnlwdChibG9jayk7XG4gICAgICAgICAgICBjb3B5QXJyYXkoYmxvY2ssIHBsYWludGV4dCwgaSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcGxhaW50ZXh0O1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogIE1vZGUgT2YgT3BlcmF0aW9uIC0gQ2lwaGVyIEJsb2NrIENoYWluaW5nIChDQkMpXG4gICAgICovXG4gICAgdmFyIE1vZGVPZk9wZXJhdGlvbkNCQyA9IGZ1bmN0aW9uKGtleSwgaXYpIHtcbiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIE1vZGVPZk9wZXJhdGlvbkNCQykpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdBRVMgbXVzdCBiZSBpbnN0YW5pdGF0ZWQgd2l0aCBgbmV3YCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5kZXNjcmlwdGlvbiA9IFwiQ2lwaGVyIEJsb2NrIENoYWluaW5nXCI7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiY2JjXCI7XG5cbiAgICAgICAgaWYgKCFpdikge1xuICAgICAgICAgICAgaXYgPSBjcmVhdGVBcnJheSgxNik7XG5cbiAgICAgICAgfSBlbHNlIGlmIChpdi5sZW5ndGggIT0gMTYpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBpbml0aWFsYXRpb24gdmVjdG9yIHNpemUgKG11c3QgYmUgMTYgYnl0ZXMpJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9sYXN0Q2lwaGVyYmxvY2sgPSBjb2VyY2VBcnJheShpdiwgdHJ1ZSk7XG5cbiAgICAgICAgdGhpcy5fYWVzID0gbmV3IEFFUyhrZXkpO1xuICAgIH1cblxuICAgIE1vZGVPZk9wZXJhdGlvbkNCQy5wcm90b3R5cGUuZW5jcnlwdCA9IGZ1bmN0aW9uKHBsYWludGV4dCkge1xuICAgICAgICBwbGFpbnRleHQgPSBjb2VyY2VBcnJheShwbGFpbnRleHQpO1xuXG4gICAgICAgIGlmICgocGxhaW50ZXh0Lmxlbmd0aCAlIDE2KSAhPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHBsYWludGV4dCBzaXplIChtdXN0IGJlIG11bHRpcGxlIG9mIDE2IGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGNpcGhlcnRleHQgPSBjcmVhdGVBcnJheShwbGFpbnRleHQubGVuZ3RoKTtcbiAgICAgICAgdmFyIGJsb2NrID0gY3JlYXRlQXJyYXkoMTYpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGxhaW50ZXh0Lmxlbmd0aDsgaSArPSAxNikge1xuICAgICAgICAgICAgY29weUFycmF5KHBsYWludGV4dCwgYmxvY2ssIDAsIGksIGkgKyAxNik7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgMTY7IGorKykge1xuICAgICAgICAgICAgICAgIGJsb2NrW2pdIF49IHRoaXMuX2xhc3RDaXBoZXJibG9ja1tqXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy5fbGFzdENpcGhlcmJsb2NrID0gdGhpcy5fYWVzLmVuY3J5cHQoYmxvY2spO1xuICAgICAgICAgICAgY29weUFycmF5KHRoaXMuX2xhc3RDaXBoZXJibG9jaywgY2lwaGVydGV4dCwgaSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY2lwaGVydGV4dDtcbiAgICB9XG5cbiAgICBNb2RlT2ZPcGVyYXRpb25DQkMucHJvdG90eXBlLmRlY3J5cHQgPSBmdW5jdGlvbihjaXBoZXJ0ZXh0KSB7XG4gICAgICAgIGNpcGhlcnRleHQgPSBjb2VyY2VBcnJheShjaXBoZXJ0ZXh0KTtcblxuICAgICAgICBpZiAoKGNpcGhlcnRleHQubGVuZ3RoICUgMTYpICE9PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgY2lwaGVydGV4dCBzaXplIChtdXN0IGJlIG11bHRpcGxlIG9mIDE2IGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHBsYWludGV4dCA9IGNyZWF0ZUFycmF5KGNpcGhlcnRleHQubGVuZ3RoKTtcbiAgICAgICAgdmFyIGJsb2NrID0gY3JlYXRlQXJyYXkoMTYpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2lwaGVydGV4dC5sZW5ndGg7IGkgKz0gMTYpIHtcbiAgICAgICAgICAgIGNvcHlBcnJheShjaXBoZXJ0ZXh0LCBibG9jaywgMCwgaSwgaSArIDE2KTtcbiAgICAgICAgICAgIGJsb2NrID0gdGhpcy5fYWVzLmRlY3J5cHQoYmxvY2spO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IDE2OyBqKyspIHtcbiAgICAgICAgICAgICAgICBwbGFpbnRleHRbaSArIGpdID0gYmxvY2tbal0gXiB0aGlzLl9sYXN0Q2lwaGVyYmxvY2tbal07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvcHlBcnJheShjaXBoZXJ0ZXh0LCB0aGlzLl9sYXN0Q2lwaGVyYmxvY2ssIDAsIGksIGkgKyAxNik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcGxhaW50ZXh0O1xuICAgIH1cblxuXG4gICAgLyoqXG4gICAgICogIE1vZGUgT2YgT3BlcmF0aW9uIC0gQ2lwaGVyIEZlZWRiYWNrIChDRkIpXG4gICAgICovXG4gICAgdmFyIE1vZGVPZk9wZXJhdGlvbkNGQiA9IGZ1bmN0aW9uKGtleSwgaXYsIHNlZ21lbnRTaXplKSB7XG4gICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBNb2RlT2ZPcGVyYXRpb25DRkIpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQUVTIG11c3QgYmUgaW5zdGFuaXRhdGVkIHdpdGggYG5ld2AnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBcIkNpcGhlciBGZWVkYmFja1wiO1xuICAgICAgICB0aGlzLm5hbWUgPSBcImNmYlwiO1xuXG4gICAgICAgIGlmICghaXYpIHtcbiAgICAgICAgICAgIGl2ID0gY3JlYXRlQXJyYXkoMTYpO1xuXG4gICAgICAgIH0gZWxzZSBpZiAoaXYubGVuZ3RoICE9IDE2KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgaW5pdGlhbGF0aW9uIHZlY3RvciBzaXplIChtdXN0IGJlIDE2IHNpemUpJyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXNlZ21lbnRTaXplKSB7IHNlZ21lbnRTaXplID0gMTsgfVxuXG4gICAgICAgIHRoaXMuc2VnbWVudFNpemUgPSBzZWdtZW50U2l6ZTtcblxuICAgICAgICB0aGlzLl9zaGlmdFJlZ2lzdGVyID0gY29lcmNlQXJyYXkoaXYsIHRydWUpO1xuXG4gICAgICAgIHRoaXMuX2FlcyA9IG5ldyBBRVMoa2V5KTtcbiAgICB9XG5cbiAgICBNb2RlT2ZPcGVyYXRpb25DRkIucHJvdG90eXBlLmVuY3J5cHQgPSBmdW5jdGlvbihwbGFpbnRleHQpIHtcbiAgICAgICAgaWYgKChwbGFpbnRleHQubGVuZ3RoICUgdGhpcy5zZWdtZW50U2l6ZSkgIT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIHBsYWludGV4dCBzaXplIChtdXN0IGJlIHNlZ21lbnRTaXplIGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGVuY3J5cHRlZCA9IGNvZXJjZUFycmF5KHBsYWludGV4dCwgdHJ1ZSk7XG5cbiAgICAgICAgdmFyIHhvclNlZ21lbnQ7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZW5jcnlwdGVkLmxlbmd0aDsgaSArPSB0aGlzLnNlZ21lbnRTaXplKSB7XG4gICAgICAgICAgICB4b3JTZWdtZW50ID0gdGhpcy5fYWVzLmVuY3J5cHQodGhpcy5fc2hpZnRSZWdpc3Rlcik7XG4gICAgICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHRoaXMuc2VnbWVudFNpemU7IGorKykge1xuICAgICAgICAgICAgICAgIGVuY3J5cHRlZFtpICsgal0gXj0geG9yU2VnbWVudFtqXTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gU2hpZnQgdGhlIHJlZ2lzdGVyXG4gICAgICAgICAgICBjb3B5QXJyYXkodGhpcy5fc2hpZnRSZWdpc3RlciwgdGhpcy5fc2hpZnRSZWdpc3RlciwgMCwgdGhpcy5zZWdtZW50U2l6ZSk7XG4gICAgICAgICAgICBjb3B5QXJyYXkoZW5jcnlwdGVkLCB0aGlzLl9zaGlmdFJlZ2lzdGVyLCAxNiAtIHRoaXMuc2VnbWVudFNpemUsIGksIGkgKyB0aGlzLnNlZ21lbnRTaXplKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbmNyeXB0ZWQ7XG4gICAgfVxuXG4gICAgTW9kZU9mT3BlcmF0aW9uQ0ZCLnByb3RvdHlwZS5kZWNyeXB0ID0gZnVuY3Rpb24oY2lwaGVydGV4dCkge1xuICAgICAgICBpZiAoKGNpcGhlcnRleHQubGVuZ3RoICUgdGhpcy5zZWdtZW50U2l6ZSkgIT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGNpcGhlcnRleHQgc2l6ZSAobXVzdCBiZSBzZWdtZW50U2l6ZSBieXRlcyknKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBwbGFpbnRleHQgPSBjb2VyY2VBcnJheShjaXBoZXJ0ZXh0LCB0cnVlKTtcblxuICAgICAgICB2YXIgeG9yU2VnbWVudDtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwbGFpbnRleHQubGVuZ3RoOyBpICs9IHRoaXMuc2VnbWVudFNpemUpIHtcbiAgICAgICAgICAgIHhvclNlZ21lbnQgPSB0aGlzLl9hZXMuZW5jcnlwdCh0aGlzLl9zaGlmdFJlZ2lzdGVyKTtcblxuICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB0aGlzLnNlZ21lbnRTaXplOyBqKyspIHtcbiAgICAgICAgICAgICAgICBwbGFpbnRleHRbaSArIGpdIF49IHhvclNlZ21lbnRbal07XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIFNoaWZ0IHRoZSByZWdpc3RlclxuICAgICAgICAgICAgY29weUFycmF5KHRoaXMuX3NoaWZ0UmVnaXN0ZXIsIHRoaXMuX3NoaWZ0UmVnaXN0ZXIsIDAsIHRoaXMuc2VnbWVudFNpemUpO1xuICAgICAgICAgICAgY29weUFycmF5KGNpcGhlcnRleHQsIHRoaXMuX3NoaWZ0UmVnaXN0ZXIsIDE2IC0gdGhpcy5zZWdtZW50U2l6ZSwgaSwgaSArIHRoaXMuc2VnbWVudFNpemUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHBsYWludGV4dDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAgTW9kZSBPZiBPcGVyYXRpb24gLSBPdXRwdXQgRmVlZGJhY2sgKE9GQilcbiAgICAgKi9cbiAgICB2YXIgTW9kZU9mT3BlcmF0aW9uT0ZCID0gZnVuY3Rpb24oa2V5LCBpdikge1xuICAgICAgICBpZiAoISh0aGlzIGluc3RhbmNlb2YgTW9kZU9mT3BlcmF0aW9uT0ZCKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0FFUyBtdXN0IGJlIGluc3Rhbml0YXRlZCB3aXRoIGBuZXdgJyk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gXCJPdXRwdXQgRmVlZGJhY2tcIjtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJvZmJcIjtcblxuICAgICAgICBpZiAoIWl2KSB7XG4gICAgICAgICAgICBpdiA9IGNyZWF0ZUFycmF5KDE2KTtcblxuICAgICAgICB9IGVsc2UgaWYgKGl2Lmxlbmd0aCAhPSAxNikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhbGlkIGluaXRpYWxhdGlvbiB2ZWN0b3Igc2l6ZSAobXVzdCBiZSAxNiBieXRlcyknKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2xhc3RQcmVjaXBoZXIgPSBjb2VyY2VBcnJheShpdiwgdHJ1ZSk7XG4gICAgICAgIHRoaXMuX2xhc3RQcmVjaXBoZXJJbmRleCA9IDE2O1xuXG4gICAgICAgIHRoaXMuX2FlcyA9IG5ldyBBRVMoa2V5KTtcbiAgICB9XG5cbiAgICBNb2RlT2ZPcGVyYXRpb25PRkIucHJvdG90eXBlLmVuY3J5cHQgPSBmdW5jdGlvbihwbGFpbnRleHQpIHtcbiAgICAgICAgdmFyIGVuY3J5cHRlZCA9IGNvZXJjZUFycmF5KHBsYWludGV4dCwgdHJ1ZSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmNyeXB0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9sYXN0UHJlY2lwaGVySW5kZXggPT09IDE2KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbGFzdFByZWNpcGhlciA9IHRoaXMuX2Flcy5lbmNyeXB0KHRoaXMuX2xhc3RQcmVjaXBoZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuX2xhc3RQcmVjaXBoZXJJbmRleCA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbmNyeXB0ZWRbaV0gXj0gdGhpcy5fbGFzdFByZWNpcGhlclt0aGlzLl9sYXN0UHJlY2lwaGVySW5kZXgrK107XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZW5jcnlwdGVkO1xuICAgIH1cblxuICAgIC8vIERlY3J5cHRpb24gaXMgc3ltZXRyaWNcbiAgICBNb2RlT2ZPcGVyYXRpb25PRkIucHJvdG90eXBlLmRlY3J5cHQgPSBNb2RlT2ZPcGVyYXRpb25PRkIucHJvdG90eXBlLmVuY3J5cHQ7XG5cblxuICAgIC8qKlxuICAgICAqICBDb3VudGVyIG9iamVjdCBmb3IgQ1RSIGNvbW1vbiBtb2RlIG9mIG9wZXJhdGlvblxuICAgICAqL1xuICAgIHZhciBDb3VudGVyID0gZnVuY3Rpb24oaW5pdGlhbFZhbHVlKSB7XG4gICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBDb3VudGVyKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ0NvdW50ZXIgbXVzdCBiZSBpbnN0YW5pdGF0ZWQgd2l0aCBgbmV3YCcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gV2UgYWxsb3cgMCwgYnV0IGFueXRoaW5nIGZhbHNlLWlzaCB1c2VzIHRoZSBkZWZhdWx0IDFcbiAgICAgICAgaWYgKGluaXRpYWxWYWx1ZSAhPT0gMCAmJiAhaW5pdGlhbFZhbHVlKSB7IGluaXRpYWxWYWx1ZSA9IDE7IH1cblxuICAgICAgICBpZiAodHlwZW9mKGluaXRpYWxWYWx1ZSkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB0aGlzLl9jb3VudGVyID0gY3JlYXRlQXJyYXkoMTYpO1xuICAgICAgICAgICAgdGhpcy5zZXRWYWx1ZShpbml0aWFsVmFsdWUpO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNldEJ5dGVzKGluaXRpYWxWYWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBDb3VudGVyLnByb3RvdHlwZS5zZXRWYWx1ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgIGlmICh0eXBlb2YodmFsdWUpICE9PSAnbnVtYmVyJyB8fCBwYXJzZUludCh2YWx1ZSkgIT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBjb3VudGVyIHZhbHVlIChtdXN0IGJlIGFuIGludGVnZXIpJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBXZSBjYW5ub3Qgc2FmZWx5IGhhbmRsZSBudW1iZXJzIGJleW9uZCB0aGUgc2FmZSByYW5nZSBmb3IgaW50ZWdlcnNcbiAgICAgICAgaWYgKHZhbHVlID4gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW50ZWdlciB2YWx1ZSBvdXQgb2Ygc2FmZSByYW5nZScpO1xuICAgICAgICB9XG5cbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAxNTsgaW5kZXggPj0gMDsgLS1pbmRleCkge1xuICAgICAgICAgICAgdGhpcy5fY291bnRlcltpbmRleF0gPSB2YWx1ZSAlIDI1NjtcbiAgICAgICAgICAgIHZhbHVlID0gcGFyc2VJbnQodmFsdWUgLyAyNTYpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQ291bnRlci5wcm90b3R5cGUuc2V0Qnl0ZXMgPSBmdW5jdGlvbihieXRlcykge1xuICAgICAgICBieXRlcyA9IGNvZXJjZUFycmF5KGJ5dGVzLCB0cnVlKTtcblxuICAgICAgICBpZiAoYnl0ZXMubGVuZ3RoICE9IDE2KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgY291bnRlciBieXRlcyBzaXplIChtdXN0IGJlIDE2IGJ5dGVzKScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fY291bnRlciA9IGJ5dGVzO1xuICAgIH07XG5cbiAgICBDb3VudGVyLnByb3RvdHlwZS5pbmNyZW1lbnQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZm9yICh2YXIgaSA9IDE1OyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2NvdW50ZXJbaV0gPT09IDI1NSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NvdW50ZXJbaV0gPSAwO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb3VudGVyW2ldKys7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqICBNb2RlIE9mIE9wZXJhdGlvbiAtIENvdW50ZXIgKENUUilcbiAgICAgKi9cbiAgICB2YXIgTW9kZU9mT3BlcmF0aW9uQ1RSID0gZnVuY3Rpb24oa2V5LCBjb3VudGVyKSB7XG4gICAgICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBNb2RlT2ZPcGVyYXRpb25DVFIpKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignQUVTIG11c3QgYmUgaW5zdGFuaXRhdGVkIHdpdGggYG5ld2AnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBcIkNvdW50ZXJcIjtcbiAgICAgICAgdGhpcy5uYW1lID0gXCJjdHJcIjtcblxuICAgICAgICBpZiAoIShjb3VudGVyIGluc3RhbmNlb2YgQ291bnRlcikpIHtcbiAgICAgICAgICAgIGNvdW50ZXIgPSBuZXcgQ291bnRlcihjb3VudGVyKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fY291bnRlciA9IGNvdW50ZXI7XG5cbiAgICAgICAgdGhpcy5fcmVtYWluaW5nQ291bnRlciA9IG51bGw7XG4gICAgICAgIHRoaXMuX3JlbWFpbmluZ0NvdW50ZXJJbmRleCA9IDE2O1xuXG4gICAgICAgIHRoaXMuX2FlcyA9IG5ldyBBRVMoa2V5KTtcbiAgICB9XG5cbiAgICBNb2RlT2ZPcGVyYXRpb25DVFIucHJvdG90eXBlLmVuY3J5cHQgPSBmdW5jdGlvbihwbGFpbnRleHQpIHtcbiAgICAgICAgdmFyIGVuY3J5cHRlZCA9IGNvZXJjZUFycmF5KHBsYWludGV4dCwgdHJ1ZSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbmNyeXB0ZWQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9yZW1haW5pbmdDb3VudGVySW5kZXggPT09IDE2KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtYWluaW5nQ291bnRlciA9IHRoaXMuX2Flcy5lbmNyeXB0KHRoaXMuX2NvdW50ZXIuX2NvdW50ZXIpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3JlbWFpbmluZ0NvdW50ZXJJbmRleCA9IDA7XG4gICAgICAgICAgICAgICAgdGhpcy5fY291bnRlci5pbmNyZW1lbnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVuY3J5cHRlZFtpXSBePSB0aGlzLl9yZW1haW5pbmdDb3VudGVyW3RoaXMuX3JlbWFpbmluZ0NvdW50ZXJJbmRleCsrXTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBlbmNyeXB0ZWQ7XG4gICAgfVxuXG4gICAgLy8gRGVjcnlwdGlvbiBpcyBzeW1ldHJpY1xuICAgIE1vZGVPZk9wZXJhdGlvbkNUUi5wcm90b3R5cGUuZGVjcnlwdCA9IE1vZGVPZk9wZXJhdGlvbkNUUi5wcm90b3R5cGUuZW5jcnlwdDtcblxuXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLyBQYWRkaW5nXG5cbiAgICAvLyBTZWU6aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzIzMTVcbiAgICBmdW5jdGlvbiBwa2NzN3BhZChkYXRhKSB7XG4gICAgICAgIGRhdGEgPSBjb2VyY2VBcnJheShkYXRhLCB0cnVlKTtcbiAgICAgICAgdmFyIHBhZGRlciA9IDE2IC0gKGRhdGEubGVuZ3RoICUgMTYpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gY3JlYXRlQXJyYXkoZGF0YS5sZW5ndGggKyBwYWRkZXIpO1xuICAgICAgICBjb3B5QXJyYXkoZGF0YSwgcmVzdWx0KTtcbiAgICAgICAgZm9yICh2YXIgaSA9IGRhdGEubGVuZ3RoOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICByZXN1bHRbaV0gPSBwYWRkZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwa2NzN3N0cmlwKGRhdGEpIHtcbiAgICAgICAgZGF0YSA9IGNvZXJjZUFycmF5KGRhdGEsIHRydWUpO1xuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPCAxNikgeyB0aHJvdyBuZXcgRXJyb3IoJ1BLQ1MjNyBpbnZhbGlkIGxlbmd0aCcpOyB9XG5cbiAgICAgICAgdmFyIHBhZGRlciA9IGRhdGFbZGF0YS5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKHBhZGRlciA+IDE2KSB7IHRocm93IG5ldyBFcnJvcignUEtDUyM3IHBhZGRpbmcgYnl0ZSBvdXQgb2YgcmFuZ2UnKTsgfVxuXG4gICAgICAgIHZhciBsZW5ndGggPSBkYXRhLmxlbmd0aCAtIHBhZGRlcjtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYWRkZXI7IGkrKykge1xuICAgICAgICAgICAgaWYgKGRhdGFbbGVuZ3RoICsgaV0gIT09IHBhZGRlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUEtDUyM3IGludmFsaWQgcGFkZGluZyBieXRlJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgcmVzdWx0ID0gY3JlYXRlQXJyYXkobGVuZ3RoKTtcbiAgICAgICAgY29weUFycmF5KGRhdGEsIHJlc3VsdCwgMCwgMCwgbGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgIC8vIEV4cG9ydGluZ1xuXG5cbiAgICAvLyBUaGUgYmxvY2sgY2lwaGVyXG4gICAgdmFyIGFlc2pzID0ge1xuICAgICAgICBBRVM6IEFFUyxcbiAgICAgICAgQ291bnRlcjogQ291bnRlcixcblxuICAgICAgICBNb2RlT2ZPcGVyYXRpb246IHtcbiAgICAgICAgICAgIGVjYjogTW9kZU9mT3BlcmF0aW9uRUNCLFxuICAgICAgICAgICAgY2JjOiBNb2RlT2ZPcGVyYXRpb25DQkMsXG4gICAgICAgICAgICBjZmI6IE1vZGVPZk9wZXJhdGlvbkNGQixcbiAgICAgICAgICAgIG9mYjogTW9kZU9mT3BlcmF0aW9uT0ZCLFxuICAgICAgICAgICAgY3RyOiBNb2RlT2ZPcGVyYXRpb25DVFJcbiAgICAgICAgfSxcblxuICAgICAgICB1dGlsczoge1xuICAgICAgICAgICAgaGV4OiBjb252ZXJ0SGV4LFxuICAgICAgICAgICAgdXRmODogY29udmVydFV0ZjhcbiAgICAgICAgfSxcblxuICAgICAgICBwYWRkaW5nOiB7XG4gICAgICAgICAgICBwa2NzNzoge1xuICAgICAgICAgICAgICAgIHBhZDogcGtjczdwYWQsXG4gICAgICAgICAgICAgICAgc3RyaXA6IHBrY3M3c3RyaXBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBfYXJyYXlUZXN0OiB7XG4gICAgICAgICAgICBjb2VyY2VBcnJheTogY29lcmNlQXJyYXksXG4gICAgICAgICAgICBjcmVhdGVBcnJheTogY3JlYXRlQXJyYXksXG4gICAgICAgICAgICBjb3B5QXJyYXk6IGNvcHlBcnJheSxcbiAgICAgICAgfVxuICAgIH07XG5cblxuICAgIC8vIG5vZGUuanNcbiAgICBpZiAodHlwZW9mIGV4cG9ydHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gYWVzanNcblxuICAgIC8vIFJlcXVpcmVKUy9BTURcbiAgICAvLyBodHRwOi8vd3d3LnJlcXVpcmVqcy5vcmcvZG9jcy9hcGkuaHRtbFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbWRqcy9hbWRqcy1hcGkvd2lraS9BTURcbiAgICB9IGVsc2UgaWYgKHR5cGVvZihkZWZpbmUpID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIHtcbiAgICAgICAgZGVmaW5lKGFlc2pzKTtcblxuICAgIC8vIFdlYiBCcm93c2Vyc1xuICAgIH0gZWxzZSB7XG5cbiAgICAgICAgLy8gSWYgdGhlcmUgd2FzIGFuIGV4aXN0aW5nIGxpYnJhcnkgYXQgXCJhZXNqc1wiIG1ha2Ugc3VyZSBpdCdzIHN0aWxsIGF2YWlsYWJsZVxuICAgICAgICBpZiAocm9vdC5hZXNqcykge1xuICAgICAgICAgICAgYWVzanMuX2Flc2pzID0gcm9vdC5hZXNqcztcbiAgICAgICAgfVxuXG4gICAgICAgIHJvb3QuYWVzanMgPSBhZXNqcztcbiAgICB9XG5cblxufSkodGhpcyk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9hZXMtanMvaW5kZXguanNcbi8vIG1vZHVsZSBpZCA9IDE3MDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1708\n");

/***/ }),

/***/ 1709:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(1597);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(1710);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(1711);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(1712);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(1599);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(1598);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_0__createStore__[\"b\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__combineReducers__[\"a\"]; });\n/* unused harmony reexport bindActionCreators */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__[\"a\"]; });\n/* unused harmony reexport compose */\n\n\n\n\n\n\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (\"development\" !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  Object(__WEBPACK_IMPORTED_MODULE_5__utils_warning__[\"a\" /* default */])('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9pbmRleC5qcz80NThjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjE3MDkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3JlYXRlU3RvcmUgZnJvbSAnLi9jcmVhdGVTdG9yZSc7XG5pbXBvcnQgY29tYmluZVJlZHVjZXJzIGZyb20gJy4vY29tYmluZVJlZHVjZXJzJztcbmltcG9ydCBiaW5kQWN0aW9uQ3JlYXRvcnMgZnJvbSAnLi9iaW5kQWN0aW9uQ3JlYXRvcnMnO1xuaW1wb3J0IGFwcGx5TWlkZGxld2FyZSBmcm9tICcuL2FwcGx5TWlkZGxld2FyZSc7XG5pbXBvcnQgY29tcG9zZSBmcm9tICcuL2NvbXBvc2UnO1xuaW1wb3J0IHdhcm5pbmcgZnJvbSAnLi91dGlscy93YXJuaW5nJztcblxuLypcbiogVGhpcyBpcyBhIGR1bW15IGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBmdW5jdGlvbiBuYW1lIGhhcyBiZWVuIGFsdGVyZWQgYnkgbWluaWZpY2F0aW9uLlxuKiBJZiB0aGUgZnVuY3Rpb24gaGFzIGJlZW4gbWluaWZpZWQgYW5kIE5PREVfRU5WICE9PSAncHJvZHVjdGlvbicsIHdhcm4gdGhlIHVzZXIuXG4qL1xuZnVuY3Rpb24gaXNDcnVzaGVkKCkge31cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgdHlwZW9mIGlzQ3J1c2hlZC5uYW1lID09PSAnc3RyaW5nJyAmJiBpc0NydXNoZWQubmFtZSAhPT0gJ2lzQ3J1c2hlZCcpIHtcbiAgd2FybmluZygnWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSBcXCdwcm9kdWN0aW9uXFwnLiAnICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3IgRGVmaW5lUGx1Z2luIGZvciB3ZWJwYWNrIChodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMwMDMwMDMxKSAnICsgJ3RvIGVuc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCBjb2RlIGZvciB5b3VyIHByb2R1Y3Rpb24gYnVpbGQuJyk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGJpbmRBY3Rpb25DcmVhdG9ycywgYXBwbHlNaWRkbGV3YXJlLCBjb21wb3NlIH07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9pbmRleC5qc1xuLy8gbW9kdWxlIGlkID0gMTcwOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1709\n");

/***/ }),

/***/ 1710:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = combineReducers;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(1597);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(1598);\n\n\n\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__[\"a\" /* default */])(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + __WEBPACK_IMPORTED_MODULE_0__createStore__[\"a\" /* ActionTypes */].INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (true) {\n      if (typeof reducers[key] === 'undefined') {\n        Object(__WEBPACK_IMPORTED_MODULE_2__utils_warning__[\"a\" /* default */])('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (true) {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (true) {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        Object(__WEBPACK_IMPORTED_MODULE_2__utils_warning__[\"a\" /* default */])(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1710\n");

/***/ }),

/***/ 1711:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9iaW5kQWN0aW9uQ3JlYXRvcnMuanM/MmE0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCO0FBQ0E7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLGlCQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjE3MTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHVuZGVmaW5lZCwgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgIT09ICdvYmplY3QnIHx8IGFjdGlvbkNyZWF0b3JzID09PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGluc3RlYWQgcmVjZWl2ZWQgJyArIChhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCA/ICdudWxsJyA6IHR5cGVvZiBhY3Rpb25DcmVhdG9ycykgKyAnLiAnICsgJ0RpZCB5b3Ugd3JpdGUgXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVwiIGluc3RlYWQgb2YgXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXCI/Jyk7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9haXJiaXR6LWNvcmUtanMvbm9kZV9tb2R1bGVzL3JlZHV4L2VzL2JpbmRBY3Rpb25DcmVhdG9ycy5qc1xuLy8gbW9kdWxlIGlkID0gMTcxMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1711\n");

/***/ }),

/***/ 1712:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = applyMiddleware;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(1599);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__[\"a\" /* default */].apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYWlyYml0ei1jb3JlLWpzL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9hcHBseU1pZGRsZXdhcmUuanM/NTg1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQSxtREFBbUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELDJCQUEyQixFQUFFLEVBQUUsRUFBRSxlQUFlOztBQUU5UDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixhQUFhLFNBQVM7QUFDdEI7QUFDQTtBQUNBLHdFQUF3RSxhQUFhO0FBQ3JGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBLHdCQUF3QjtBQUN4QjtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EiLCJmaWxlIjoiMTcxMi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmltcG9ydCBjb21wb3NlIGZyb20gJy4vY29tcG9zZSc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIHN0b3JlIGVuaGFuY2VyIHRoYXQgYXBwbGllcyBtaWRkbGV3YXJlIHRvIHRoZSBkaXNwYXRjaCBtZXRob2RcbiAqIG9mIHRoZSBSZWR1eCBzdG9yZS4gVGhpcyBpcyBoYW5keSBmb3IgYSB2YXJpZXR5IG9mIHRhc2tzLCBzdWNoIGFzIGV4cHJlc3NpbmdcbiAqIGFzeW5jaHJvbm91cyBhY3Rpb25zIGluIGEgY29uY2lzZSBtYW5uZXIsIG9yIGxvZ2dpbmcgZXZlcnkgYWN0aW9uIHBheWxvYWQuXG4gKlxuICogU2VlIGByZWR1eC10aHVua2AgcGFja2FnZSBhcyBhbiBleGFtcGxlIG9mIHRoZSBSZWR1eCBtaWRkbGV3YXJlLlxuICpcbiAqIEJlY2F1c2UgbWlkZGxld2FyZSBpcyBwb3RlbnRpYWxseSBhc3luY2hyb25vdXMsIHRoaXMgc2hvdWxkIGJlIHRoZSBmaXJzdFxuICogc3RvcmUgZW5oYW5jZXIgaW4gdGhlIGNvbXBvc2l0aW9uIGNoYWluLlxuICpcbiAqIE5vdGUgdGhhdCBlYWNoIG1pZGRsZXdhcmUgd2lsbCBiZSBnaXZlbiB0aGUgYGRpc3BhdGNoYCBhbmQgYGdldFN0YXRlYCBmdW5jdGlvbnNcbiAqIGFzIG5hbWVkIGFyZ3VtZW50cy5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBtaWRkbGV3YXJlcyBUaGUgbWlkZGxld2FyZSBjaGFpbiB0byBiZSBhcHBsaWVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHN0b3JlIGVuaGFuY2VyIGFwcGx5aW5nIHRoZSBtaWRkbGV3YXJlLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcHBseU1pZGRsZXdhcmUoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBtaWRkbGV3YXJlcyA9IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIG1pZGRsZXdhcmVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChjcmVhdGVTdG9yZSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpO1xuICAgICAgdmFyIF9kaXNwYXRjaCA9IHN0b3JlLmRpc3BhdGNoO1xuICAgICAgdmFyIGNoYWluID0gW107XG5cbiAgICAgIHZhciBtaWRkbGV3YXJlQVBJID0ge1xuICAgICAgICBnZXRTdGF0ZTogc3RvcmUuZ2V0U3RhdGUsXG4gICAgICAgIGRpc3BhdGNoOiBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICAgICAgICByZXR1cm4gX2Rpc3BhdGNoKGFjdGlvbik7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBjaGFpbiA9IG1pZGRsZXdhcmVzLm1hcChmdW5jdGlvbiAobWlkZGxld2FyZSkge1xuICAgICAgICByZXR1cm4gbWlkZGxld2FyZShtaWRkbGV3YXJlQVBJKTtcbiAgICAgIH0pO1xuICAgICAgX2Rpc3BhdGNoID0gY29tcG9zZS5hcHBseSh1bmRlZmluZWQsIGNoYWluKShzdG9yZS5kaXNwYXRjaCk7XG5cbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RvcmUsIHtcbiAgICAgICAgZGlzcGF0Y2g6IF9kaXNwYXRjaFxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9haXJiaXR6LWNvcmUtanMvbm9kZV9tb2R1bGVzL3JlZHV4L2VzL2FwcGx5TWlkZGxld2FyZS5qc1xuLy8gbW9kdWxlIGlkID0gMTcxMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1712\n");

/***/ }),

/***/ 1713:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return locateFile; });\n/* unused harmony export locateFolder */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return mapAllFiles; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return mapFiles; });\n/* unused harmony export mapFolders */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return makeLocalStorageFolder; });\n/* unused harmony export makeLoggedFolder */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return makeMemoryFolder; });\n/* unused harmony export makeNodeFolder */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return makeUnionFolder$$1; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_rfc4648__ = __webpack_require__(1596);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fs__ = __webpack_require__(1714);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_fs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_fs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path__ = __webpack_require__(1715);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_path___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_path__);\n\n\n\n\n/**\n * Interprets a path as a series of folder lookups,\n * handling special components like `.` and `..`.\n */\nfunction followPath (folder, parts) {\n  var i = 0; // Read index\n  var j = 0; // Write index\n\n  // Shift down good elements, dropping bad ones:\n  while (i < parts.length) {\n    var part = parts[i++];\n    if (part === '..') { j--; }\n    else if (part !== '.' && part !== '') { parts[j++] = part; }\n\n    if (j < 0) { throw new Error('Path would escape folder') }\n  }\n\n  // Navigate the folder:\n  for (i = 0; i < j; ++i) {\n    folder = folder.folder(parts[i]);\n  }\n  return folder\n}\n\n/**\n * Navigates down to the file indicated by the path.\n */\nfunction locateFile (folder, path) {\n  var parts = path.split('/');\n  var filename = parts.pop();\n  return followPath(folder, parts).file(filename)\n}\n\n/**\n * Navigates down to the sub-folder indicated by the path.\n */\nfunction locateFolder (folder, path) {\n  var parts = path.split('/');\n  return followPath(folder, parts)\n}\n\n/**\n * Applies an async function to all the files in a folder.\n */\nfunction mapFiles (folder, f) {\n  return folder\n    .listFiles()\n    .then(function (names) { return Promise.all(names.map(function (name) { return f(folder.file(name), name, folder); })); }\n    )\n}\n\n/**\n * Applies an async function to all the sub-folders in a folder.\n */\nfunction mapFolders (folder, f) {\n  return folder\n    .listFolders()\n    .then(function (names) { return Promise.all(names.map(function (name) { return f(folder.folder(name), name, folder); })); }\n    )\n}\n\n/**\n * Recursively applies an async function to all the files in a folder tree.\n * The file names are expanded into paths, and the result is a flat array.\n */\nfunction mapAllFiles (folder, f) {\n  function recurse (folder, f, prefix) {\n    return Promise.all([\n      mapFiles(folder, function (file, name) { return f(file, prefix + name, folder); }),\n      mapFolders(folder, function (folder, name) { return recurse(folder, f, prefix + name + '/'); }\n      )\n    ]).then(function (ref) {\n      var files = ref[0];\n      var folders = ref[1];\n\n      return files.concat.apply(files, folders);\n    })\n  }\n\n  return recurse(folder, f, '')\n}\n\n/**\n * Verifies that a name contains no slashes.\n */\nfunction checkName (name) {\n  if (typeof name !== 'string' || !name.length || /[/]/.test(name)) {\n    throw new Error((\"Invalid file name \\\"\" + name + \"\\\"\"))\n  }\n}\n\nvar Data = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\n\n/**\n * Lists the keys in a localStorage object.\n */\nfunction storageKeys (storage) {\n  var keys = [];\n  for (var i = 0; i < storage.length; ++i) {\n    keys.push(storage.key(i));\n  }\n  return keys\n}\n\n/**\n * A single file stored in localStorage.\n */\nvar LocalStorageFile = function LocalStorageFile (storage, path) {\n  this._storage = storage;\n  this._path = path;\n};\n\nLocalStorageFile.prototype.delete = function delete$1 () {\n  this._storage.removeItem(this._path);\n  return Promise.resolve()\n};\n\nLocalStorageFile.prototype.getData = function getData () {\n  return this.getText().then(function (text) { return __WEBPACK_IMPORTED_MODULE_0_rfc4648__[\"b\" /* base64 */].parse(text, { out: Data }); })\n};\n\nLocalStorageFile.prototype.getText = function getText () {\n  var item = this._storage.getItem(this._path);\n  return item != null\n    ? Promise.resolve(item)\n    : Promise.reject(new Error((\"Cannot load \\\"\" + (this._path) + \"\\\"\")))\n};\n\nLocalStorageFile.prototype.setText = function setText (text) {\n  if (typeof text !== 'string') {\n    return Promise.reject(new TypeError('Expected a string'))\n  }\n\n  this._storage.setItem(this._path, text);\n  return Promise.resolve()\n};\n\nLocalStorageFile.prototype.setData = function setData (data) {\n  return this.setText(__WEBPACK_IMPORTED_MODULE_0_rfc4648__[\"b\" /* base64 */].stringify(data))\n};\n\n/**\n * Emulates a filesystem inside a localStorage instance.\n */\nvar LocalStorageFolder = function LocalStorageFolder (storage, path) {\n  this._storage = storage;\n  this._path = path + '/';\n};\n\nLocalStorageFolder.prototype.delete = function delete$2 () {\n    var this$1 = this;\n\n  var test = new RegExp((\"^\" + (this._path)));\n  storageKeys(this._storage).forEach(function (key) {\n    if (test.test(key)) {\n      this$1._storage.removeItem(key);\n    }\n  });\n  return Promise.resolve()\n};\n\nLocalStorageFolder.prototype.file = function file (name) {\n  checkName(name);\n  return new LocalStorageFile(this._storage, this._path + name)\n};\n\nLocalStorageFolder.prototype.folder = function folder (name) {\n  checkName(name);\n  return new LocalStorageFolder(this._storage, this._path + name)\n};\n\nLocalStorageFolder.prototype.listFiles = function listFiles () {\n  var test = new RegExp((\"^\" + (this._path) + \"([^/]+)$\"));\n\n  var names = [];\n  storageKeys(this._storage).forEach(function (key) {\n    var results = test.exec(key);\n    if (results != null) { names.push(results[1]); }\n  });\n\n  return Promise.resolve(names)\n};\n\nLocalStorageFolder.prototype.listFolders = function listFolders () {\n  var test = new RegExp((\"^\" + (this._path) + \"([^/]+)/.+\"));\n\n  var names = {};\n  storageKeys(this._storage).forEach(function (key) {\n    var results = test.exec(key);\n    if (results != null) { names[results[1]] = true; }\n  });\n\n  return Promise.resolve(Object.keys(names))\n};\n\nfunction makeLocalStorageFolder (\n  storage,\n  opts\n) {\n  if ( storage === void 0 ) storage = window.localStorage;\n  if ( opts === void 0 ) opts = {};\n\n  return new LocalStorageFolder(storage, opts.prefix || '')\n}\n\nfunction logConsole (path, operation) {\n  console.log((operation + \" \\\"\" + path + \"\\\"\"));\n}\n\nfunction log (path, operation, opts) {\n  var f = opts.callback != null ? opts.callback : logConsole;\n\n  if (opts.verbose || /set|delete/.test(operation)) {\n    f(path, operation);\n  }\n}\n\nvar LoggedFile = function LoggedFile (file, path, opts) {\n  this._file = file;\n  this._path = path;\n  this._opts = opts;\n};\n\nLoggedFile.prototype.delete = function delete$1 () {\n  log(this._path, 'delete file', this._opts);\n  return this._file.delete()\n};\n\nLoggedFile.prototype.getData = function getData () {\n  log(this._path, 'get data', this._opts);\n  return this._file.getData()\n};\n\nLoggedFile.prototype.getText = function getText () {\n  log(this._path, 'get text', this._opts);\n  return this._file.getText()\n};\n\nLoggedFile.prototype.setData = function setData (data) {\n  log(this._path, 'set data', this._opts);\n  return this._file.setData(data)\n};\n\nLoggedFile.prototype.setText = function setText (text) {\n  log(this._path, 'set text', this._opts);\n  return this._file.setText(text)\n};\n\nvar LoggedFolder = function LoggedFolder (folder, path, opts) {\n  this._folder = folder;\n  this._path = path;\n  this._opts = opts;\n};\n\nLoggedFolder.prototype.delete = function delete$2 () {\n  log(this._path, 'delete folder', this._opts);\n  return this._folder.delete()\n};\n\nLoggedFolder.prototype.file = function file (name) {\n  return new LoggedFile(\n    this._folder.file(name),\n    this._path + name,\n    this._opts\n  )\n};\n\nLoggedFolder.prototype.folder = function folder (name) {\n  return new LoggedFolder(\n    this._folder.folder(name),\n    this._path + name + '/',\n    this._opts\n  )\n};\n\nLoggedFolder.prototype.listFiles = function listFiles () {\n  log(this._path, 'list files', this._opts);\n  return this._folder.listFiles()\n};\n\nLoggedFolder.prototype.listFolders = function listFolders () {\n  log(this._path, 'list folders', this._opts);\n  return this._folder.listFolders()\n};\n\nfunction makeLoggedFolder (folder, opts) {\n  if ( opts === void 0 ) opts = {};\n\n  return new LoggedFolder(folder, '', opts)\n}\n\n/**\n * A single file stored in memory.\n */\nvar MemoryFile = function MemoryFile (storage, path) {\n  this._storage = storage;\n  this._path = path;\n};\n\nMemoryFile.prototype.delete = function delete$1 () {\n  delete this._storage[this._path];\n  return Promise.resolve()\n};\n\nMemoryFile.prototype.getData = function getData () {\n  var item = this._storage[this._path];\n  return item != null\n    ? Promise.resolve(item)\n    : Promise.reject(new Error((\"Cannot load \\\"\" + (this._path) + \"\\\"\")))\n};\n\nMemoryFile.prototype.getText = function getText () {\n  var item = this._storage[this._path];\n  return item != null\n    ? Promise.resolve(item)\n    : Promise.reject(new Error((\"Cannot load \\\"\" + (this._path) + \"\\\"\")))\n};\n\nMemoryFile.prototype.setData = function setData (data) {\n  this._storage[this._path] = data;\n  return Promise.resolve()\n};\n\nMemoryFile.prototype.setText = function setText (text) {\n  if (typeof text !== 'string') {\n    return Promise.reject(new TypeError('Expected a string'))\n  }\n\n  this._storage[this._path] = text;\n  return Promise.resolve()\n};\n\n/**\n * Emulates a filesystem in memory.\n */\nvar MemoryFolder = function MemoryFolder (storage, path) {\n  this._storage = storage;\n  this._path = path + '/';\n};\n\nMemoryFolder.prototype.delete = function delete$2 () {\n    var this$1 = this;\n\n  var test = new RegExp((\"^\" + (this._path)));\n  Object.keys(this._storage).forEach(function (key) {\n    if (test.test(key)) {\n      delete this$1._storage[key];\n    }\n  });\n  return Promise.resolve()\n};\n\nMemoryFolder.prototype.file = function file (name) {\n  checkName(name);\n  return new MemoryFile(this._storage, this._path + name)\n};\n\nMemoryFolder.prototype.folder = function folder (name) {\n  checkName(name);\n  return new MemoryFolder(this._storage, this._path + name)\n};\n\nMemoryFolder.prototype.listFiles = function listFiles () {\n  var test = new RegExp((\"^\" + (this._path) + \"([^/]+)$\"));\n\n  var names = [];\n  Object.keys(this._storage).forEach(function (key) {\n    var results = test.exec(key);\n    if (results != null) { names.push(results[1]); }\n  });\n\n  return Promise.resolve(names)\n};\n\nMemoryFolder.prototype.listFolders = function listFolders () {\n  var test = new RegExp((\"^\" + (this._path) + \"([^/]+)/.+\"));\n\n  var names = {};\n  Object.keys(this._storage).forEach(function (key) {\n    var results = test.exec(key);\n    if (results != null) { names[results[1]] = true; }\n  });\n\n  return Promise.resolve(Object.keys(names))\n};\n\nfunction makeMemoryFolder (storage) {\n  if ( storage === void 0 ) storage = {};\n\n  return new MemoryFolder(storage, '')\n}\n\n// Promise versions of node.js file operations: -----------------------------\n\nfunction mkdir (path) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.mkdir(\n      path,\n      function (err) { return (err && err.code !== 'EEXIST' ? reject(err) : resolve()); }\n    ); }\n  )\n}\n\nfunction rmdir (path) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.rmdir(path, function (err, out) { return (err ? reject(err) : resolve(out)); }); }\n  )\n}\n\nfunction readdir (path) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.readdir(path, function (err, out) { return (err ? reject(err) : resolve(out)); }); }\n  )\n}\n\nfunction readFile (path, opts) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.readFile(path, opts, function (err, out) { return (err ? reject(err) : resolve(out)); }); }\n  )\n}\n\nfunction stat (path) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.stat(path, function (err, out) { return (err ? reject(err) : resolve(out)); }); }\n  )\n}\n\nfunction unlink (path) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.unlink(path, function (err, out) { return (err ? reject(err) : resolve(out)); }); }\n  )\n}\n\nfunction writeFile (path, data, opts) {\n  return new Promise(function (resolve, reject) { return __WEBPACK_IMPORTED_MODULE_1_fs___default.a.writeFile(\n      path,\n      data,\n      opts,\n      function (err, out) { return (err ? reject(err) : resolve(out)); }\n    ); }\n  )\n}\n\n// Helpers: -----------------------------------------------------------------\n\n/**\n * If node.js returns a missing-file error (`ENOENT`),\n * translate that into the fallback value and proceed.\n */\nfunction ignoreMissing (fallback) {\n  return function (err) {\n    if (err.code !== 'ENOENT') { throw err }\n    return fallback\n  }\n}\n\n/**\n * Reads a directory, returning a list of names and a list of stat objects.\n * Returns empty lists if the directory doesn't exist.\n */\nfunction readdirStat (path) {\n  return readdir(path)\n    .catch(ignoreMissing([]))\n    .then(function (names) { return Promise.all(\n        names.map(function (name) { return stat(__WEBPACK_IMPORTED_MODULE_2_path___default.a.join(path, name)); })\n      ).then(function (stats) { return ({ names: names, stats: stats }); }); }\n    )\n}\n\n/**\n * Recursively creates a directory.\n */\nfunction mkdirDeep (path) {\n  return mkdir(path).catch(function (err) {\n    if (err.code !== 'ENOENT') { throw err }\n    return mkdirDeep(__WEBPACK_IMPORTED_MODULE_2_path___default.a.dirname(path)).then(function () { return mkdir(path); })\n  })\n}\n\n/**\n * Writes a file, creating its directory if needed.\n */\nfunction writeFileDeep (path, data, opts) {\n  return writeFile(path, data, opts).catch(function (err) {\n    if (err.code !== 'ENOENT') { throw err }\n    return mkdirDeep(__WEBPACK_IMPORTED_MODULE_2_path___default.a.dirname(path)).then(function () { return writeFile(path, data, opts); }\n    )\n  })\n}\n\nvar NodeFile = function NodeFile (path) {\n  this._path = path;\n};\n\nNodeFile.prototype.delete = function delete$1 () {\n  return unlink(this._path).catch(ignoreMissing())\n};\n\nNodeFile.prototype.getData = function getData () {\n  return readFile(this._path, null)\n};\n\nNodeFile.prototype.getText = function getText () {\n  return readFile(this._path, 'utf8')\n};\n\nNodeFile.prototype.setData = function setData (data) {\n  return writeFileDeep(this._path, Uint8Array.from(data), null)\n};\n\nNodeFile.prototype.setText = function setText (text) {\n  return writeFileDeep(this._path, text, 'utf8')\n};\n\nvar NodeFolder = function NodeFolder (path) {\n  this._path = path;\n};\n\nNodeFolder.prototype.delete = function delete$2 () {\n    var this$1 = this;\n\n  return readdirStat(this._path)\n    .then(function (lists) {\n      var names = lists.names;\n        var stats = lists.stats;\n      var files = names.filter(function (name, i) { return stats[i].isFile(); });\n      var folders = names.filter(function (name, i) { return stats[i].isDirectory(); });\n\n      // Recursively delete children:\n      return Promise.all(files.map(function (name) { return this$1.file(name).delete(); }).concat( folders.map(function (name) { return this$1.folder(name).delete(); })\n      ))\n    })\n    .then(function () { return rmdir(this$1._path); })\n    .catch(ignoreMissing())\n};\n\nNodeFolder.prototype.file = function file (name) {\n  checkName(name);\n  return new NodeFile(__WEBPACK_IMPORTED_MODULE_2_path___default.a.join(this._path, name))\n};\n\nNodeFolder.prototype.folder = function folder (name) {\n  checkName(name);\n  return new NodeFolder(__WEBPACK_IMPORTED_MODULE_2_path___default.a.join(this._path, name))\n};\n\nNodeFolder.prototype.listFiles = function listFiles () {\n  return readdirStat(this._path).then(function (lists) {\n    var names = lists.names;\n      var stats = lists.stats;\n    return names.filter(function (name, i) { return stats[i].isFile(); })\n  })\n};\n\nNodeFolder.prototype.listFolders = function listFolders () {\n  return readdirStat(this._path).then(function (lists) {\n    var names = lists.names;\n      var stats = lists.stats;\n    return names.filter(function (name, i) { return stats[i].isDirectory(); })\n  })\n};\n\nfunction makeNodeFolder (path) {\n  return new NodeFolder(__WEBPACK_IMPORTED_MODULE_2_path___default.a.resolve(path))\n}\n\nfunction removeDuplicates (master, fallback) {\n  var blacklist = {};\n  var out = [];\n  master.forEach(function (item) {\n    if (/\\._x_$/.test(item)) {\n      blacklist[item] = true;\n    } else {\n      blacklist[item + '._x_'] = true;\n      out.push(item);\n    }\n  });\n\n  fallback.forEach(function (item) {\n    if (!blacklist[item + '._x_']) { out.push(item); }\n  });\n\n  return out\n}\n\n/**\n * A file within a unionFolder.\n */\nvar UnionFile = function UnionFile (master, fallback, whiteout) {\n  this._master = master;\n  this._fallback = fallback;\n  this._whiteout = whiteout;\n};\n\nUnionFile.prototype.delete = function delete$1 () {\n  return Promise.all([\n    this._whiteout.setData([]),\n    this._master.delete().catch(function (e) { return null; })\n  ])\n};\n\nUnionFile.prototype.getData = function getData () {\n    var this$1 = this;\n\n  return this._master.getData().catch(function (e) { return this$1._whiteout.getData().then(\n      function (data) {\n        throw new Error('File has been deleted')\n      },\n      function (e) { return this$1._fallback.getData(); }\n    ); }\n  )\n};\n\nUnionFile.prototype.getText = function getText () {\n    var this$1 = this;\n\n  return this._master.getText().catch(function (e) { return this$1._whiteout.getData().then(\n      function (data) {\n        throw new Error('File has been deleted')\n      },\n      function (e) { return this$1._fallback.getText(); }\n    ); }\n  )\n};\n\nUnionFile.prototype.setData = function setData (data) {\n  return this._master.setData(data)\n};\n\nUnionFile.prototype.setText = function setText (text) {\n  return this._master.setText(text)\n};\n\n/**\n * Reads and writes go to a master folder, but if a read fails,\n * we will also try the fallback folder.\n */\nvar UnionFolder = function UnionFolder (master, fallback) {\n  this._master = master;\n  this._fallback = fallback;\n};\n\nUnionFolder.prototype.delete = function delete$2 () {\n  return Promise.all([\n    mapFiles(this, function (file) { return file.delete(); }),\n    mapFolders(this, function (folder) { return folder.delete(); })\n  ]).then(function () {})\n};\n\nUnionFolder.prototype.file = function file (name) {\n  return new UnionFile(\n    this._master.file(name),\n    this._fallback.file(name),\n    this._master.file(name + '._x_')\n  )\n};\n\nUnionFolder.prototype.folder = function folder (name) {\n  return new UnionFolder(\n    this._master.folder(name),\n    this._fallback.folder(name)\n  )\n};\n\nUnionFolder.prototype.listFiles = function listFiles () {\n  return Promise.all([\n    this._master.listFiles(),\n    this._fallback.listFiles()\n  ]).then(function (values) { return removeDuplicates(values[0], values[1]); })\n};\n\nUnionFolder.prototype.listFolders = function listFolders () {\n  return Promise.all([\n    this._master.listFolders(),\n    this._fallback.listFolders()\n  ]).then(function (values) { return removeDuplicates(values[0], values[1]); })\n};\n\nfunction makeUnionFolder$$1 (master, fallback) {\n  return new UnionFolder(master, fallback)\n}\n\n\n//# sourceMappingURL=disklet.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1713\n");

/***/ }),

/***/ 1714:
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZnMgKGlnbm9yZWQpPzQwNDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTcxNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIChpZ25vcmVkKSAqL1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGZzIChpZ25vcmVkKVxuLy8gbW9kdWxlIGlkID0gMTcxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSA1Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1714\n");

/***/ }),

/***/ 1715:
/***/ (function(module, exports) {

eval("/* (ignored) *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcGF0aCAoaWdub3JlZCk/NjFjYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxNzE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogKGlnbm9yZWQpICovXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gcGF0aCAoaWdub3JlZClcbi8vIG1vZHVsZSBpZCA9IDE3MTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEgNSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1715\n");

/***/ }),

/***/ 1716:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {\n\n(function(root) {\n    var MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        var K = [\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ];\n\n        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        var w = new Array(64);\n\n        function blocks(p) {\n            var off = 0, len = p.length;\n            while (len >= 64) {\n                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi>>>24) & 0xff);\n        p.push((bitLenHi>>>16) & 0xff);\n        p.push((bitLenHi>>>8)  & 0xff);\n        p.push((bitLenHi>>>0)  & 0xff);\n        p.push((bitLenLo>>>24) & 0xff);\n        p.push((bitLenLo>>>16) & 0xff);\n        p.push((bitLenLo>>>8)  & 0xff);\n        p.push((bitLenLo>>>0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = password.length <= 64 ? password : SHA256(password);\n\n        var i;\n        var innerLen = 64 + salt.length + 4;\n        var inner = new Array(innerLen);\n        var outerKey = new Array(64);\n        var dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) inner[i] = 0x36;\n        for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (var i = innerLen-1; i >= innerLen-4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        var i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (var i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (var i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') {\n            return false;\n        }\n        for (var i = 0; i < o.length; i++) {\n            if (typeof(o[i]) !== 'number') { return false; }\n\n            var v = parseInt(o[i]);\n            if (v != o[i] || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        var intValue = parseInt(value);\n        if (value != intValue) { throw new Error('invalid ' + name); }\n        return intValue;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        if (!callback) { throw new Error('missing callback'); }\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n\n        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        var B = new Uint32Array(p * 32 * r)\n        for (var i = 0; i < B.length; i++) {\n            var j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        var XY = new Uint32Array(64 * r);\n        var V = new Uint32Array(32 * r * N);\n\n        var Yi = 32 * r;\n\n        // scratch space\n        var x = new Uint32Array(16);       // salsa20_8\n        var _X = new Uint32Array(16);      // blockmix_salsa8\n\n        var totalOps = p * N * 2;\n        var currentOp = 0;\n        var lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        var stop = false;\n\n        // State information\n        var state = 0;\n        var i0 = 0, i1;\n        var Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        var limit = parseInt(1000 / r);\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        var incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                // ROMix - 6\n                        var offset = (2 * r - 1) * 16;               // ROMix - 7\n                        var j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (var i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Done; don't break (which would reschedule)\n                    return callback(null, 1.0, derivedKey);\n                }\n\n                // Schedule the next steps\n                nextTick(incrementalSMix);\n            }\n\n            // Bootstrap the incremental smix\n            incrementalSMix();\n    }\n\n    // node.js\n    if (true) {\n       module.exports = scrypt;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(scrypt);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = scrypt;\n    }\n\n})(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(143).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1716\n");

/***/ }),

/***/ 1717:
/***/ (function(module, exports) {

eval("(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1717\n");

/***/ }),

/***/ 1816:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = NavPanel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_router_dom__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_classnames__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_classnames__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_routes_helpers_parse_query__ = __webpack_require__(564);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_query__ = __webpack_require__(565);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles__ = __webpack_require__(1817);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles__);\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nfunction makeSearch(location, param, value, isItemDefault) {\n  var updatedSearch = Object(__WEBPACK_IMPORTED_MODULE_4_modules_routes_helpers_parse_query__[\"a\" /* default */])(location.search);\n\n  if (isItemDefault) {\n    delete updatedSearch[param];\n  } else {\n    updatedSearch[param] = value;\n  }\n\n  return Object(__WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_query__[\"a\" /* default */])(updatedSearch);\n}\n\nfunction NavPanel(p) {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'div',\n    { className: __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a.NavPanel },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'aside',\n      { className: __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a.NavPanel__controls },\n      p.items.map(function (item) {\n        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_2_react_router_dom__[\"b\" /* Link */],\n          {\n            key: item.title,\n            className: __WEBPACK_IMPORTED_MODULE_3_classnames___default()(__WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a.NavPanel__control, _defineProperty({}, __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a['NavPanel__control--active'], p.selectedNav != null ? item.param === p.selectedNav : item.default)),\n            to: {\n              search: makeSearch(p.location, p.param, item.param, item.default)\n            }\n          },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'div',\n            { className: __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a.NavPanel__icon },\n            item.icon\n          ),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'span',\n            { className: __WEBPACK_IMPORTED_MODULE_6_modules_common_components_nav_panel_nav_panel_styles___default.a.NavPanel__title },\n            item.title\n          )\n        );\n      })\n    )\n  );\n}\n\nNavPanel.propTypes = {\n  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  items: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.array.isRequired,\n  param: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(makeSearch, 'makeSearch', '/Users/do/augur/dev/augur/src/modules/common/components/nav-panel/nav-panel.jsx');\n\n  __REACT_HOT_LOADER__.register(NavPanel, 'NavPanel', '/Users/do/augur/dev/augur/src/modules/common/components/nav-panel/nav-panel.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9jb21tb24vY29tcG9uZW50cy9uYXYtcGFuZWwvbmF2LXBhbmVsLmpzeD83ZDgzIl0sIm5hbWVzIjpbIm1ha2VTZWFyY2giLCJsb2NhdGlvbiIsInBhcmFtIiwidmFsdWUiLCJpc0l0ZW1EZWZhdWx0IiwidXBkYXRlZFNlYXJjaCIsInBhcnNlUXVlcnkiLCJzZWFyY2giLCJtYWtlUXVlcnkiLCJOYXZQYW5lbCIsInAiLCJTdHlsZXMiLCJOYXZQYW5lbF9fY29udHJvbHMiLCJpdGVtcyIsIm1hcCIsIml0ZW0iLCJ0aXRsZSIsImNsYXNzTmFtZXMiLCJOYXZQYW5lbF9fY29udHJvbCIsInNlbGVjdGVkTmF2IiwiZGVmYXVsdCIsIk5hdlBhbmVsX19pY29uIiwiaWNvbiIsIk5hdlBhbmVsX190aXRsZSIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJoaXN0b3J5IiwiYXJyYXkiLCJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQSxTQUFTQSxVQUFULENBQW9CQyxRQUFwQixFQUE4QkMsS0FBOUIsRUFBcUNDLEtBQXJDLEVBQTRDQyxhQUE1QyxFQUEyRDtBQUN6RCxNQUFNQyxnQkFBZ0IsMkZBQUFDLENBQVdMLFNBQVNNLE1BQXBCLENBQXRCOztBQUVBLE1BQUlILGFBQUosRUFBbUI7QUFDakIsV0FBT0MsY0FBY0gsS0FBZCxDQUFQO0FBQ0QsR0FGRCxNQUVPO0FBQ0xHLGtCQUFjSCxLQUFkLElBQXVCQyxLQUF2QjtBQUNEOztBQUVELFNBQU8sMEZBQUFLLENBQVVILGFBQVYsQ0FBUDtBQUNEOztBQUVjLFNBQVNJLFFBQVQsQ0FBa0JDLENBQWxCLEVBQXFCO0FBQ2xDLFNBQ0U7QUFBQTtBQUFBLE1BQUssV0FBVyw0RkFBQUMsQ0FBT0YsUUFBdkI7QUFDRTtBQUFBO0FBQUEsUUFBTyxXQUFXLDRGQUFBRSxDQUFPQyxrQkFBekI7QUFFSUYsUUFBRUcsS0FBRixDQUFRQyxHQUFSLENBQVk7QUFBQSxlQUNWO0FBQUMsd0VBQUQ7QUFBQTtBQUNFLGlCQUFLQyxLQUFLQyxLQURaO0FBRUUsdUJBQVcsa0RBQUFDLENBQ1QsNEZBQUFOLENBQU9PLGlCQURFLHNCQUdOLDRGQUFBUCxDQUFPLDJCQUFQLENBSE0sRUFHZ0NELEVBQUVTLFdBQUYsSUFBaUIsSUFBakIsR0FDckNKLEtBQUtiLEtBQUwsS0FBZVEsRUFBRVMsV0FEb0IsR0FFckNKLEtBQUtLLE9BTEEsRUFGYjtBQVVFLGdCQUFJO0FBQ0ZiLHNCQUFRUCxXQUFXVSxFQUFFVCxRQUFiLEVBQXVCUyxFQUFFUixLQUF6QixFQUFnQ2EsS0FBS2IsS0FBckMsRUFBNENhLEtBQUtLLE9BQWpEO0FBRE47QUFWTjtBQWNFO0FBQUE7QUFBQSxjQUFLLFdBQVcsNEZBQUFULENBQU9VLGNBQXZCO0FBQ0dOLGlCQUFLTztBQURSLFdBZEY7QUFpQkU7QUFBQTtBQUFBLGNBQU0sV0FBVyw0RkFBQVgsQ0FBT1ksZUFBeEI7QUFBMENSLGlCQUFLQztBQUEvQztBQWpCRixTQURVO0FBQUEsT0FBWjtBQUZKO0FBREYsR0FERjtBQTZCRDs7QUFFRFAsU0FBU2UsU0FBVCxHQUFxQjtBQUNuQnZCLFlBQVUsa0RBQUF3QixDQUFVQyxNQUFWLENBQWlCQyxVQURSO0FBRW5CQyxXQUFTLGtEQUFBSCxDQUFVQyxNQUFWLENBQWlCQyxVQUZQO0FBR25CZCxTQUFPLGtEQUFBWSxDQUFVSSxLQUFWLENBQWdCRixVQUhKO0FBSW5CekIsU0FBTyxrREFBQXVCLENBQVVLLE1BQVYsQ0FBaUJIO0FBSkwsQ0FBckI7Ozs7Ozs7O2dDQTVDUzNCLFU7O2dDQVllUyxRIiwiZmlsZSI6IjE4MTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSdcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnXG5cbmltcG9ydCBwYXJzZVF1ZXJ5IGZyb20gJ21vZHVsZXMvcm91dGVzL2hlbHBlcnMvcGFyc2UtcXVlcnknXG5pbXBvcnQgbWFrZVF1ZXJ5IGZyb20gJ21vZHVsZXMvcm91dGVzL2hlbHBlcnMvbWFrZS1xdWVyeSdcblxuaW1wb3J0IFN0eWxlcyBmcm9tICdtb2R1bGVzL2NvbW1vbi9jb21wb25lbnRzL25hdi1wYW5lbC9uYXYtcGFuZWwuc3R5bGVzJ1xuXG5mdW5jdGlvbiBtYWtlU2VhcmNoKGxvY2F0aW9uLCBwYXJhbSwgdmFsdWUsIGlzSXRlbURlZmF1bHQpIHtcbiAgY29uc3QgdXBkYXRlZFNlYXJjaCA9IHBhcnNlUXVlcnkobG9jYXRpb24uc2VhcmNoKVxuXG4gIGlmIChpc0l0ZW1EZWZhdWx0KSB7XG4gICAgZGVsZXRlIHVwZGF0ZWRTZWFyY2hbcGFyYW1dXG4gIH0gZWxzZSB7XG4gICAgdXBkYXRlZFNlYXJjaFtwYXJhbV0gPSB2YWx1ZVxuICB9XG5cbiAgcmV0dXJuIG1ha2VRdWVyeSh1cGRhdGVkU2VhcmNoKVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBOYXZQYW5lbChwKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5OYXZQYW5lbH0gPlxuICAgICAgPGFzaWRlIGNsYXNzTmFtZT17U3R5bGVzLk5hdlBhbmVsX19jb250cm9sc30+XG4gICAgICAgIHtcbiAgICAgICAgICBwLml0ZW1zLm1hcChpdGVtID0+IChcbiAgICAgICAgICAgIDxMaW5rXG4gICAgICAgICAgICAgIGtleT17aXRlbS50aXRsZX1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAgICAgICAgIFN0eWxlcy5OYXZQYW5lbF9fY29udHJvbCxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBbU3R5bGVzWydOYXZQYW5lbF9fY29udHJvbC0tYWN0aXZlJ11dOiBwLnNlbGVjdGVkTmF2ICE9IG51bGwgP1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnBhcmFtID09PSBwLnNlbGVjdGVkTmF2IDpcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5kZWZhdWx0XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICB0bz17e1xuICAgICAgICAgICAgICAgIHNlYXJjaDogbWFrZVNlYXJjaChwLmxvY2F0aW9uLCBwLnBhcmFtLCBpdGVtLnBhcmFtLCBpdGVtLmRlZmF1bHQpXG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtTdHlsZXMuTmF2UGFuZWxfX2ljb259PlxuICAgICAgICAgICAgICAgIHtpdGVtLmljb259XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e1N0eWxlcy5OYXZQYW5lbF9fdGl0bGV9PntpdGVtLnRpdGxlfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICApKVxuICAgICAgICB9XG4gICAgICA8L2FzaWRlPlxuICAgIDwvZGl2PlxuICApXG59XG5cbk5hdlBhbmVsLnByb3BUeXBlcyA9IHtcbiAgbG9jYXRpb246IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgaGlzdG9yeTogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBpdGVtczogUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWQsXG4gIHBhcmFtOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2NvbW1vbi9jb21wb25lbnRzL25hdi1wYW5lbC9uYXYtcGFuZWwuanN4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1816\n");

/***/ }),

/***/ 1817:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1818);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(74)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./nav-panel.styles.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./nav-panel.styles.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9jb21tb24vY29tcG9uZW50cy9uYXYtcGFuZWwvbmF2LXBhbmVsLnN0eWxlcy5sZXNzPzJkNjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIxODE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyL2luZGV4LmpzIS4vbmF2LXBhbmVsLnN0eWxlcy5sZXNzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBQcmVwYXJlIGNzc1RyYW5zZm9ybWF0aW9uXG52YXIgdHJhbnNmb3JtO1xuXG52YXIgb3B0aW9ucyA9IHt9XG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdGlmKCFjb250ZW50LmxvY2Fscykge1xuXHRcdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL25hdi1wYW5lbC5zdHlsZXMubGVzc1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9uYXYtcGFuZWwuc3R5bGVzLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvY29tbW9uL2NvbXBvbmVudHMvbmF2LXBhbmVsL25hdi1wYW5lbC5zdHlsZXMubGVzc1xuLy8gbW9kdWxlIGlkID0gMTgxN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1817\n");

/***/ }),

/***/ 1818:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(66)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".nav-panel-styles_NavPanel_1Yi {\\n  display: flex;\\n  min-height: 100%;\\n  min-width: 15em;\\n}\\n.nav-panel-styles_NavPanel__controls_1Hy {\\n  display: flex;\\n  flex: 1;\\n  flex-direction: column;\\n}\\n@media all and (max-width: 900px) {\\n  .nav-panel-styles_NavPanel__controls_1Hy {\\n    flex-flow: row wrap;\\n  }\\n}\\n.nav-panel-styles_NavPanel__control_3Kf {\\n  align-items: center;\\n  background: #412468;\\n  border-bottom: 1px solid #5a407e;\\n  color: #ffffff;\\n  cursor: pointer;\\n  display: flex;\\n  flex: 1;\\n  font-size: 0.875rem;\\n  font-weight: 300;\\n  padding: 0 0 0 2rem;\\n}\\n.nav-panel-styles_NavPanel__control_3Kf:hover {\\n  background: #5a407e;\\n}\\n.nav-panel-styles_NavPanel__control_3Kf:last-child {\\n  border-bottom: none;\\n}\\n@media all and (max-width: 900px) {\\n  .nav-panel-styles_NavPanel__control_3Kf {\\n    border-bottom: none;\\n    flex-basis: 33%;\\n    flex-flow: wrap column;\\n    height: 6em;\\n    padding: 1em;\\n  }\\n}\\n.nav-panel-styles_NavPanel__control--active_31a {\\n  background: #5a407e;\\n}\\n.nav-panel-styles_NavPanel__icon_krd {\\n  color: #ffffff;\\n  margin-right: 1.5em;\\n  vertical-align: middle;\\n  width: 2.25em;\\n}\\n@media all and (max-width: 900px) {\\n  .nav-panel-styles_NavPanel__icon_krd {\\n    align-items: center;\\n    display: flex;\\n    flex: 1;\\n    height: 100%;\\n    justify-content: center;\\n    margin-bottom: 0.5em;\\n    margin-right: 0;\\n  }\\n  .nav-panel-styles_NavPanel__icon_krd svg {\\n    height: 100%;\\n  }\\n}\\n.nav-panel-styles_NavPanel__title_10v {\\n  flex: 1;\\n}\\n@media all and (max-width: 900px) {\\n  .nav-panel-styles_NavPanel__title_10v {\\n    flex: none;\\n  }\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"NavPanel\": \"nav-panel-styles_NavPanel_1Yi\",\n\t\"NavPanel__controls\": \"nav-panel-styles_NavPanel__controls_1Hy\",\n\t\"NavPanel__control\": \"nav-panel-styles_NavPanel__control_3Kf\",\n\t\"NavPanel__control--active\": \"nav-panel-styles_NavPanel__control--active_31a\",\n\t\"NavPanel__icon\": \"nav-panel-styles_NavPanel__icon_krd\",\n\t\"NavPanel__title\": \"nav-panel-styles_NavPanel__title_10v\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9jb21tb24vY29tcG9uZW50cy9uYXYtcGFuZWwvbmF2LXBhbmVsLnN0eWxlcy5sZXNzPzBjNjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSx5REFBMEQsa0JBQWtCLHFCQUFxQixvQkFBb0IsR0FBRyw0Q0FBNEMsa0JBQWtCLFlBQVksMkJBQTJCLEdBQUcscUNBQXFDLDhDQUE4QywwQkFBMEIsS0FBSyxHQUFHLDJDQUEyQyx3QkFBd0Isd0JBQXdCLHFDQUFxQyxtQkFBbUIsb0JBQW9CLGtCQUFrQixZQUFZLHdCQUF3QixxQkFBcUIsd0JBQXdCLEdBQUcsaURBQWlELHdCQUF3QixHQUFHLHNEQUFzRCx3QkFBd0IsR0FBRyxxQ0FBcUMsNkNBQTZDLDBCQUEwQixzQkFBc0IsNkJBQTZCLGtCQUFrQixtQkFBbUIsS0FBSyxHQUFHLG1EQUFtRCx3QkFBd0IsR0FBRyx3Q0FBd0MsbUJBQW1CLHdCQUF3QiwyQkFBMkIsa0JBQWtCLEdBQUcscUNBQXFDLDBDQUEwQywwQkFBMEIsb0JBQW9CLGNBQWMsbUJBQW1CLDhCQUE4QiwyQkFBMkIsc0JBQXNCLEtBQUssOENBQThDLG1CQUFtQixLQUFLLEdBQUcseUNBQXlDLFlBQVksR0FBRyxxQ0FBcUMsMkNBQTJDLGlCQUFpQixLQUFLLEdBQUc7O0FBRXhuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTgxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodW5kZWZpbmVkKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5uYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsXzFZaSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgbWluLWhlaWdodDogMTAwJTtcXG4gIG1pbi13aWR0aDogMTVlbTtcXG59XFxuLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2NvbnRyb2xzXzFIeSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleDogMTtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XFxuICAubmF2LXBhbmVsLXN0eWxlc19OYXZQYW5lbF9fY29udHJvbHNfMUh5IHtcXG4gICAgZmxleC1mbG93OiByb3cgd3JhcDtcXG4gIH1cXG59XFxuLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2NvbnRyb2xfM0tmIHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiAjNDEyNDY4O1xcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICM1YTQwN2U7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4OiAxO1xcbiAgZm9udC1zaXplOiAwLjg3NXJlbTtcXG4gIGZvbnQtd2VpZ2h0OiAzMDA7XFxuICBwYWRkaW5nOiAwIDAgMCAycmVtO1xcbn1cXG4ubmF2LXBhbmVsLXN0eWxlc19OYXZQYW5lbF9fY29udHJvbF8zS2Y6aG92ZXIge1xcbiAgYmFja2dyb3VuZDogIzVhNDA3ZTtcXG59XFxuLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2NvbnRyb2xfM0tmOmxhc3QtY2hpbGQge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcXG59XFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gIC5uYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX19jb250cm9sXzNLZiB7XFxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XFxuICAgIGZsZXgtYmFzaXM6IDMzJTtcXG4gICAgZmxleC1mbG93OiB3cmFwIGNvbHVtbjtcXG4gICAgaGVpZ2h0OiA2ZW07XFxuICAgIHBhZGRpbmc6IDFlbTtcXG4gIH1cXG59XFxuLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2NvbnRyb2wtLWFjdGl2ZV8zMWEge1xcbiAgYmFja2dyb3VuZDogIzVhNDA3ZTtcXG59XFxuLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2ljb25fa3JkIHtcXG4gIGNvbG9yOiAjZmZmZmZmO1xcbiAgbWFyZ2luLXJpZ2h0OiAxLjVlbTtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICB3aWR0aDogMi4yNWVtO1xcbn1cXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xcbiAgLm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX2ljb25fa3JkIHtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleDogMTtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XFxuICAgIG1hcmdpbi1yaWdodDogMDtcXG4gIH1cXG4gIC5uYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX19pY29uX2tyZCBzdmcge1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICB9XFxufVxcbi5uYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX190aXRsZV8xMHYge1xcbiAgZmxleDogMTtcXG59XFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gIC5uYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX190aXRsZV8xMHYge1xcbiAgICBmbGV4OiBub25lO1xcbiAgfVxcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJOYXZQYW5lbFwiOiBcIm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfMVlpXCIsXG5cdFwiTmF2UGFuZWxfX2NvbnRyb2xzXCI6IFwibmF2LXBhbmVsLXN0eWxlc19OYXZQYW5lbF9fY29udHJvbHNfMUh5XCIsXG5cdFwiTmF2UGFuZWxfX2NvbnRyb2xcIjogXCJuYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX19jb250cm9sXzNLZlwiLFxuXHRcIk5hdlBhbmVsX19jb250cm9sLS1hY3RpdmVcIjogXCJuYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX19jb250cm9sLS1hY3RpdmVfMzFhXCIsXG5cdFwiTmF2UGFuZWxfX2ljb25cIjogXCJuYXYtcGFuZWwtc3R5bGVzX05hdlBhbmVsX19pY29uX2tyZFwiLFxuXHRcIk5hdlBhbmVsX190aXRsZVwiOiBcIm5hdi1wYW5lbC1zdHlsZXNfTmF2UGFuZWxfX3RpdGxlXzEwdlwiXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wibW9kdWxlc1wiOnRydWUsXCJsb2NhbElkZW50TmFtZVwiOlwiW25hbWVdX1tsb2NhbF1fW2hhc2g6YmFzZTY0OjNdXCJ9IS4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYiEuL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIhLi9zcmMvbW9kdWxlcy9jb21tb24vY29tcG9uZW50cy9uYXYtcGFuZWwvbmF2LXBhbmVsLnN0eWxlcy5sZXNzXG4vLyBtb2R1bGUgaWQgPSAxODE4XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1818\n");

/***/ }),

/***/ 1819:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_transition_group__ = __webpack_require__(1696);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_transition_group___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_transition_group__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles__ = __webpack_require__(1820);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar helps = [{\n  title: 'What is Augur?',\n  def: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n}, {\n  title: 'How does a wallet work?',\n  def: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n}, {\n  title: 'Which wallet is best for me?',\n  def: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'\n}];\n\nvar Help = function (_Component) {\n  _inherits(Help, _Component);\n\n  function Help() {\n    _classCallCheck(this, Help);\n\n    var _this = _possibleConstructorReturn(this, (Help.__proto__ || Object.getPrototypeOf(Help)).call(this));\n\n    _this.state = {\n      areQuestionsVisible: false,\n      visibleDefinitions: []\n    };\n\n    _this.toggleDefinition = _this.toggleDefinition.bind(_this);\n    return _this;\n  }\n\n  _createClass(Help, [{\n    key: 'toggleDefinition',\n    value: function toggleDefinition(index) {\n      this.setState({\n        visibleDefinitions: this.state.visibleDefinitions.indexOf(index) !== -1 ? this.state.visibleDefinitions.filter(function (item) {\n          return item !== index;\n        }) : [].concat(_toConsumableArray(this.state.visibleDefinitions), [index])\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var s = this.state;\n\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        { className: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'button',\n          {\n            className: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__Header,\n            onClick: function onClick() {\n              return _this2.setState({ areQuestionsVisible: !s.areQuestionsVisible });\n            }\n          },\n          'Confused? Get Help Here.'\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_1_react_transition_group__[\"CSSTransitionGroup\"],\n          {\n            transitionName: {\n              enter: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__ItemEnter,\n              enterActive: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__ItemEnterActive,\n              leave: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__ItemLeave,\n              leaveActive: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__ItemLeaveActive\n            },\n            transitionEnterTimeout: 300,\n            transitionLeaveTimeout: 300\n          },\n          s.areQuestionsVisible && helps.map(function (help, i) {\n            return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'div',\n              {\n                key: help.title,\n                className: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__Item\n              },\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'button',\n                {\n                  onClick: function onClick() {\n                    return _this2.toggleDefinition(i);\n                  }\n                },\n                help.title,\n                ' +'\n              ),\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                __WEBPACK_IMPORTED_MODULE_1_react_transition_group__[\"CSSTransitionGroup\"],\n                {\n                  transitionName: {\n                    enter: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__DefinitionEnter,\n                    enterActive: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__DefinitionEnterActive,\n                    leave: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__DefinitionLeave,\n                    leaveActive: __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_help_help_styles___default.a.Help__DefinitionLeaveActive\n                  },\n                  transitionEnterTimeout: 300,\n                  transitionLeaveTimeout: 300\n                },\n                s.visibleDefinitions.indexOf(i) !== -1 && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                  'p',\n                  null,\n                  help.def\n                )\n              )\n            );\n          })\n        )\n      );\n    }\n  }]);\n\n  return Help;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nvar _default = Help;\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(helps, 'helps', '/Users/do/augur/dev/augur/src/modules/auth/components/help/help.jsx');\n\n  __REACT_HOT_LOADER__.register(Help, 'Help', '/Users/do/augur/dev/augur/src/modules/auth/components/help/help.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/components/help/help.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1819\n");

/***/ }),

/***/ 1820:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1821);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(74)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./help.styles.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./help.styles.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvaGVscC9oZWxwLnN0eWxlcy5sZXNzPzQyYzMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIxODIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyL2luZGV4LmpzIS4vaGVscC5zdHlsZXMubGVzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9oZWxwLnN0eWxlcy5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2hlbHAuc3R5bGVzLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2hlbHAvaGVscC5zdHlsZXMubGVzc1xuLy8gbW9kdWxlIGlkID0gMTgyMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAgMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1820\n");

/***/ }),

/***/ 1821:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(66)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".help-styles_Help__Header_1XB {\\n  font-size: 1.125rem;\\n  line-height: 1.125rem;\\n}\\n.help-styles_Help_2Yc {\\n  color: #ffffff;\\n}\\n@media all and (max-width: 900px) {\\n  .help-styles_Help_2Yc {\\n    padding: 0 2em;\\n  }\\n}\\n.help-styles_Help__Header_1XB {\\n  margin: 1em 0;\\n}\\n.help-styles_Help__Item_e7Q {\\n  font-size: 1.125rem;\\n  position: relative;\\n}\\n.help-styles_Help__Item_e7Q button {\\n  color: #a7a2b2;\\n  display: block;\\n  margin-bottom: 1em;\\n}\\n.help-styles_Help__Item_e7Q p {\\n  line-height: 1.3em;\\n  margin: 0 0 1.5em;\\n}\\n.help-styles_Help__ItemEnter_2Z9,\\n.help-styles_Help__DefinitionEnter_33z {\\n  -webkit-transform: scaleY(0);\\n          transform: scaleY(0);\\n}\\n.help-styles_Help__ItemEnterActive_3CM,\\n.help-styles_Help__DefinitionEnterActive_yuX {\\n  -webkit-transform: scaleY(1);\\n          transform: scaleY(1);\\n  -webkit-transform-origin: top;\\n          transform-origin: top;\\n  transition: -webkit-transform 300ms ease-in-out;\\n  transition: transform 300ms ease-in-out;\\n  transition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\\n}\\n.help-styles_Help__ItemLeave_2PP,\\n.help-styles_Help__DefinitionLeave_1ls {\\n  -webkit-transform: scaleY(1);\\n          transform: scaleY(1);\\n}\\n.help-styles_Help__ItemLeaveActive_1FR,\\n.help-styles_Help__DefinitionLeaveActive_han {\\n  -webkit-transform: scaleY(0);\\n          transform: scaleY(0);\\n  -webkit-transform-origin: top;\\n          transform-origin: top;\\n  transition: -webkit-transform 300ms ease-in-out;\\n  transition: transform 300ms ease-in-out;\\n  transition: transform 300ms ease-in-out, -webkit-transform 300ms ease-in-out;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"Help__Header\": \"help-styles_Help__Header_1XB\",\n\t\"Help\": \"help-styles_Help_2Yc\",\n\t\"Help__Item\": \"help-styles_Help__Item_e7Q\",\n\t\"Help__ItemEnter\": \"help-styles_Help__ItemEnter_2Z9\",\n\t\"Help__DefinitionEnter\": \"help-styles_Help__DefinitionEnter_33z\",\n\t\"Help__ItemEnterActive\": \"help-styles_Help__ItemEnterActive_3CM\",\n\t\"Help__DefinitionEnterActive\": \"help-styles_Help__DefinitionEnterActive_yuX\",\n\t\"Help__ItemLeave\": \"help-styles_Help__ItemLeave_2PP\",\n\t\"Help__DefinitionLeave\": \"help-styles_Help__DefinitionLeave_1ls\",\n\t\"Help__ItemLeaveActive\": \"help-styles_Help__ItemLeaveActive_1FR\",\n\t\"Help__DefinitionLeaveActive\": \"help-styles_Help__DefinitionLeaveActive_han\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvaGVscC9oZWxwLnN0eWxlcy5sZXNzPzZjYWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSx3REFBeUQsd0JBQXdCLDBCQUEwQixHQUFHLHlCQUF5QixtQkFBbUIsR0FBRyxxQ0FBcUMsMkJBQTJCLHFCQUFxQixLQUFLLEdBQUcsaUNBQWlDLGtCQUFrQixHQUFHLCtCQUErQix3QkFBd0IsdUJBQXVCLEdBQUcsc0NBQXNDLG1CQUFtQixtQkFBbUIsdUJBQXVCLEdBQUcsaUNBQWlDLHVCQUF1QixzQkFBc0IsR0FBRyw2RUFBNkUsaUNBQWlDLGlDQUFpQyxHQUFHLHlGQUF5RixpQ0FBaUMsaUNBQWlDLGtDQUFrQyxrQ0FBa0Msb0RBQW9ELDRDQUE0QyxpRkFBaUYsR0FBRyw2RUFBNkUsaUNBQWlDLGlDQUFpQyxHQUFHLHlGQUF5RixpQ0FBaUMsaUNBQWlDLGtDQUFrQyxrQ0FBa0Msb0RBQW9ELDRDQUE0QyxpRkFBaUYsR0FBRzs7QUFFbG9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMTgyMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodW5kZWZpbmVkKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5oZWxwLXN0eWxlc19IZWxwX19IZWFkZXJfMVhCIHtcXG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XFxuICBsaW5lLWhlaWdodDogMS4xMjVyZW07XFxufVxcbi5oZWxwLXN0eWxlc19IZWxwXzJZYyB7XFxuICBjb2xvcjogI2ZmZmZmZjtcXG59XFxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcXG4gIC5oZWxwLXN0eWxlc19IZWxwXzJZYyB7XFxuICAgIHBhZGRpbmc6IDAgMmVtO1xcbiAgfVxcbn1cXG4uaGVscC1zdHlsZXNfSGVscF9fSGVhZGVyXzFYQiB7XFxuICBtYXJnaW46IDFlbSAwO1xcbn1cXG4uaGVscC1zdHlsZXNfSGVscF9fSXRlbV9lN1Ege1xcbiAgZm9udC1zaXplOiAxLjEyNXJlbTtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuLmhlbHAtc3R5bGVzX0hlbHBfX0l0ZW1fZTdRIGJ1dHRvbiB7XFxuICBjb2xvcjogI2E3YTJiMjtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xcbn1cXG4uaGVscC1zdHlsZXNfSGVscF9fSXRlbV9lN1EgcCB7XFxuICBsaW5lLWhlaWdodDogMS4zZW07XFxuICBtYXJnaW46IDAgMCAxLjVlbTtcXG59XFxuLmhlbHAtc3R5bGVzX0hlbHBfX0l0ZW1FbnRlcl8yWjksXFxuLmhlbHAtc3R5bGVzX0hlbHBfX0RlZmluaXRpb25FbnRlcl8zM3oge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWSgwKTtcXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVkoMCk7XFxufVxcbi5oZWxwLXN0eWxlc19IZWxwX19JdGVtRW50ZXJBY3RpdmVfM0NNLFxcbi5oZWxwLXN0eWxlc19IZWxwX19EZWZpbml0aW9uRW50ZXJBY3RpdmVfeXVYIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZVkoMSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XFxuICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcXG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG59XFxuLmhlbHAtc3R5bGVzX0hlbHBfX0l0ZW1MZWF2ZV8yUFAsXFxuLmhlbHAtc3R5bGVzX0hlbHBfX0RlZmluaXRpb25MZWF2ZV8xbHMge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlWSgxKTtcXG4gICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVkoMSk7XFxufVxcbi5oZWxwLXN0eWxlc19IZWxwX19JdGVtTGVhdmVBY3RpdmVfMUZSLFxcbi5oZWxwLXN0eWxlc19IZWxwX19EZWZpbml0aW9uTGVhdmVBY3RpdmVfaGFuIHtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiBzY2FsZVkoMCk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVZKDApO1xcbiAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiB0b3A7XFxuICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IHRvcDtcXG4gIHRyYW5zaXRpb246IC13ZWJraXQtdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0O1xcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDMwMG1zIGVhc2UtaW4tb3V0LCAtd2Via2l0LXRyYW5zZm9ybSAzMDBtcyBlYXNlLWluLW91dDtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiSGVscF9fSGVhZGVyXCI6IFwiaGVscC1zdHlsZXNfSGVscF9fSGVhZGVyXzFYQlwiLFxuXHRcIkhlbHBcIjogXCJoZWxwLXN0eWxlc19IZWxwXzJZY1wiLFxuXHRcIkhlbHBfX0l0ZW1cIjogXCJoZWxwLXN0eWxlc19IZWxwX19JdGVtX2U3UVwiLFxuXHRcIkhlbHBfX0l0ZW1FbnRlclwiOiBcImhlbHAtc3R5bGVzX0hlbHBfX0l0ZW1FbnRlcl8yWjlcIixcblx0XCJIZWxwX19EZWZpbml0aW9uRW50ZXJcIjogXCJoZWxwLXN0eWxlc19IZWxwX19EZWZpbml0aW9uRW50ZXJfMzN6XCIsXG5cdFwiSGVscF9fSXRlbUVudGVyQWN0aXZlXCI6IFwiaGVscC1zdHlsZXNfSGVscF9fSXRlbUVudGVyQWN0aXZlXzNDTVwiLFxuXHRcIkhlbHBfX0RlZmluaXRpb25FbnRlckFjdGl2ZVwiOiBcImhlbHAtc3R5bGVzX0hlbHBfX0RlZmluaXRpb25FbnRlckFjdGl2ZV95dVhcIixcblx0XCJIZWxwX19JdGVtTGVhdmVcIjogXCJoZWxwLXN0eWxlc19IZWxwX19JdGVtTGVhdmVfMlBQXCIsXG5cdFwiSGVscF9fRGVmaW5pdGlvbkxlYXZlXCI6IFwiaGVscC1zdHlsZXNfSGVscF9fRGVmaW5pdGlvbkxlYXZlXzFsc1wiLFxuXHRcIkhlbHBfX0l0ZW1MZWF2ZUFjdGl2ZVwiOiBcImhlbHAtc3R5bGVzX0hlbHBfX0l0ZW1MZWF2ZUFjdGl2ZV8xRlJcIixcblx0XCJIZWxwX19EZWZpbml0aW9uTGVhdmVBY3RpdmVcIjogXCJoZWxwLXN0eWxlc19IZWxwX19EZWZpbml0aW9uTGVhdmVBY3RpdmVfaGFuXCJcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJtb2R1bGVzXCI6dHJ1ZSxcImxvY2FsSWRlbnROYW1lXCI6XCJbbmFtZV1fW2xvY2FsXV9baGFzaDpiYXNlNjQ6M11cIn0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlciEuL3NyYy9tb2R1bGVzL2F1dGgvY29tcG9uZW50cy9oZWxwL2hlbHAuc3R5bGVzLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDE4MjFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1821\n");

/***/ }),

/***/ 1822:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {/* unused harmony export loginWithAirbitzEthereumWallet */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return loginWithAirbitz; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_secure_random__ = __webpack_require__(820);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_secure_random___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_secure_random__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_services_augurjs__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_constants_auth_types__ = __webpack_require__(1697);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_load_account_data__ = __webpack_require__(815);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_auth_actions_update_is_logged__ = __webpack_require__(817);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_path__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_modules_routes_constants_views__ = __webpack_require__(76);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\n\n\n\n\n\nvar loginWithAirbitzEthereumWallet = function loginWithAirbitzEthereumWallet(airbitzAccount, ethereumWallet, history) {\n  return function (dispatch) {\n    var masterPrivateKey = ethereumWallet.keys.ethereumKey;\n    __WEBPACK_IMPORTED_MODULE_1_services_augurjs__[\"b\" /* augur */].accounts.loginWithMasterKey(masterPrivateKey, function (account) {\n      if (!account || !account.address || account.error) {\n        return console.error(account);\n      }\n      dispatch(Object(__WEBPACK_IMPORTED_MODULE_4_modules_auth_actions_update_is_logged__[\"b\" /* updateIsLogged */])(true));\n      dispatch(Object(__WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_load_account_data__[\"a\" /* loadAccountData */])(_extends({}, account, { name: airbitzAccount.username, airbitzAccount: airbitzAccount }), true));\n      history.push(Object(__WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_path__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_6_modules_routes_constants_views__[\"j\" /* DEFAULT_VIEW */]));\n    });\n  };\n};\n\n// Create an ethereum wallet if one doesn't exist\nvar loginWithAirbitz = function loginWithAirbitz(airbitzAccount, history) {\n  return function (dispatch) {\n    var ethereumWallet = airbitzAccount.getFirstWallet(__WEBPACK_IMPORTED_MODULE_2_modules_auth_constants_auth_types__[\"a\" /* AIRBITZ_WALLET_TYPE */]);\n    if (ethereumWallet != null) {\n      return dispatch(loginWithAirbitzEthereumWallet(airbitzAccount, ethereumWallet, history));\n    }\n    airbitzAccount.createWallet(__WEBPACK_IMPORTED_MODULE_2_modules_auth_constants_auth_types__[\"a\" /* AIRBITZ_WALLET_TYPE */], { ethereumKey: new Buffer(__WEBPACK_IMPORTED_MODULE_0_secure_random___default()(32)).toString('hex') }, function (err, id) {\n      if (err) return console.error({ code: 0, message: 'could not create wallet' });\n      dispatch(loginWithAirbitzEthereumWallet(airbitzAccount, airbitzAccount.getWallet(id), history));\n    });\n  };\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(loginWithAirbitzEthereumWallet, 'loginWithAirbitzEthereumWallet', '/Users/do/augur/dev/augur/src/modules/auth/actions/login-with-airbitz.js');\n\n  __REACT_HOT_LOADER__.register(loginWithAirbitz, 'loginWithAirbitz', '/Users/do/augur/dev/augur/src/modules/auth/actions/login-with-airbitz.js');\n}();\n\n;\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(4).Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2FjdGlvbnMvbG9naW4td2l0aC1haXJiaXR6LmpzPzY2ZjQiXSwibmFtZXMiOlsibG9naW5XaXRoQWlyYml0ekV0aGVyZXVtV2FsbGV0IiwiYWlyYml0ekFjY291bnQiLCJldGhlcmV1bVdhbGxldCIsImhpc3RvcnkiLCJkaXNwYXRjaCIsIm1hc3RlclByaXZhdGVLZXkiLCJrZXlzIiwiZXRoZXJldW1LZXkiLCJhdWd1ciIsImFjY291bnRzIiwibG9naW5XaXRoTWFzdGVyS2V5IiwiYWNjb3VudCIsImFkZHJlc3MiLCJlcnJvciIsImNvbnNvbGUiLCJ1cGRhdGVJc0xvZ2dlZCIsImxvYWRBY2NvdW50RGF0YSIsIm5hbWUiLCJ1c2VybmFtZSIsInB1c2giLCJtYWtlUGF0aCIsImxvZ2luV2l0aEFpcmJpdHoiLCJnZXRGaXJzdFdhbGxldCIsImNyZWF0ZVdhbGxldCIsIkJ1ZmZlciIsInNlY3VyZVJhbmRvbSIsInRvU3RyaW5nIiwiZXJyIiwiaWQiLCJjb2RlIiwibWVzc2FnZSIsImdldFdhbGxldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFTyxJQUFNQSxpQ0FBaUMsU0FBakNBLDhCQUFpQyxDQUFDQyxjQUFELEVBQWlCQyxjQUFqQixFQUFpQ0MsT0FBakM7QUFBQSxTQUE2QyxVQUFDQyxRQUFELEVBQWM7QUFDdkcsUUFBTUMsbUJBQW1CSCxlQUFlSSxJQUFmLENBQW9CQyxXQUE3QztBQUNBQyxJQUFBLCtEQUFBQSxDQUFNQyxRQUFOLENBQWVDLGtCQUFmLENBQWtDTCxnQkFBbEMsRUFBb0QsVUFBQ00sT0FBRCxFQUFhO0FBQy9ELFVBQUksQ0FBQ0EsT0FBRCxJQUFZLENBQUNBLFFBQVFDLE9BQXJCLElBQWdDRCxRQUFRRSxLQUE1QyxFQUFtRDtBQUNqRCxlQUFPQyxRQUFRRCxLQUFSLENBQWNGLE9BQWQsQ0FBUDtBQUNEO0FBQ0RQLGVBQVMscUdBQUFXLENBQWUsSUFBZixDQUFUO0FBQ0FYLGVBQVMsdUdBQUFZLGNBQXFCTCxPQUFyQixJQUE4Qk0sTUFBTWhCLGVBQWVpQixRQUFuRCxFQUE2RGpCLDhCQUE3RCxLQUErRSxJQUEvRSxDQUFUO0FBQ0FFLGNBQVFnQixJQUFSLENBQWEseUZBQUFDLENBQVMsb0ZBQVQsQ0FBYjtBQUNELEtBUEQ7QUFRRCxHQVY2QztBQUFBLENBQXZDOztBQVlQO0FBQ08sSUFBTUMsbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBQ3BCLGNBQUQsRUFBaUJFLE9BQWpCO0FBQUEsU0FBNkIsVUFBQ0MsUUFBRCxFQUFjO0FBQ3pFLFFBQU1GLGlCQUFpQkQsZUFBZXFCLGNBQWYsQ0FBOEIsOEZBQTlCLENBQXZCO0FBQ0EsUUFBSXBCLGtCQUFrQixJQUF0QixFQUE0QjtBQUMxQixhQUFPRSxTQUFTSiwrQkFBK0JDLGNBQS9CLEVBQStDQyxjQUEvQyxFQUErREMsT0FBL0QsQ0FBVCxDQUFQO0FBQ0Q7QUFDREYsbUJBQWVzQixZQUFmLENBQTRCLDhGQUE1QixFQUFpRCxFQUFFaEIsYUFBYSxJQUFJaUIsTUFBSixDQUFXLHFEQUFBQyxDQUFhLEVBQWIsQ0FBWCxFQUE2QkMsUUFBN0IsQ0FBc0MsS0FBdEMsQ0FBZixFQUFqRCxFQUFnSCxVQUFDQyxHQUFELEVBQU1DLEVBQU4sRUFBYTtBQUMzSCxVQUFJRCxHQUFKLEVBQVMsT0FBT2IsUUFBUUQsS0FBUixDQUFjLEVBQUVnQixNQUFNLENBQVIsRUFBV0MsU0FBUyx5QkFBcEIsRUFBZCxDQUFQO0FBQ1QxQixlQUFTSiwrQkFBK0JDLGNBQS9CLEVBQStDQSxlQUFlOEIsU0FBZixDQUF5QkgsRUFBekIsQ0FBL0MsRUFBNkV6QixPQUE3RSxDQUFUO0FBQ0QsS0FIRDtBQUlELEdBVCtCO0FBQUEsQ0FBekI7Ozs7Ozs7O2dDQWJNSCw4Qjs7Z0NBYUFxQixnQiIsImZpbGUiOiIxODIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNlY3VyZVJhbmRvbSBmcm9tICdzZWN1cmUtcmFuZG9tJ1xuaW1wb3J0IHsgYXVndXIgfSBmcm9tICdzZXJ2aWNlcy9hdWd1cmpzJ1xuaW1wb3J0IHsgQUlSQklUWl9XQUxMRVRfVFlQRSB9IGZyb20gJ21vZHVsZXMvYXV0aC9jb25zdGFudHMvYXV0aC10eXBlcydcbmltcG9ydCB7IGxvYWRBY2NvdW50RGF0YSB9IGZyb20gJ21vZHVsZXMvYXV0aC9hY3Rpb25zL2xvYWQtYWNjb3VudC1kYXRhJ1xuaW1wb3J0IHsgdXBkYXRlSXNMb2dnZWQgfSBmcm9tICdtb2R1bGVzL2F1dGgvYWN0aW9ucy91cGRhdGUtaXMtbG9nZ2VkJ1xuXG5pbXBvcnQgbWFrZVBhdGggZnJvbSAnbW9kdWxlcy9yb3V0ZXMvaGVscGVycy9tYWtlLXBhdGgnXG5cbmltcG9ydCB7IERFRkFVTFRfVklFVyB9IGZyb20gJ21vZHVsZXMvcm91dGVzL2NvbnN0YW50cy92aWV3cydcblxuZXhwb3J0IGNvbnN0IGxvZ2luV2l0aEFpcmJpdHpFdGhlcmV1bVdhbGxldCA9IChhaXJiaXR6QWNjb3VudCwgZXRoZXJldW1XYWxsZXQsIGhpc3RvcnkpID0+IChkaXNwYXRjaCkgPT4ge1xuICBjb25zdCBtYXN0ZXJQcml2YXRlS2V5ID0gZXRoZXJldW1XYWxsZXQua2V5cy5ldGhlcmV1bUtleVxuICBhdWd1ci5hY2NvdW50cy5sb2dpbldpdGhNYXN0ZXJLZXkobWFzdGVyUHJpdmF0ZUtleSwgKGFjY291bnQpID0+IHtcbiAgICBpZiAoIWFjY291bnQgfHwgIWFjY291bnQuYWRkcmVzcyB8fCBhY2NvdW50LmVycm9yKSB7XG4gICAgICByZXR1cm4gY29uc29sZS5lcnJvcihhY2NvdW50KVxuICAgIH1cbiAgICBkaXNwYXRjaCh1cGRhdGVJc0xvZ2dlZCh0cnVlKSlcbiAgICBkaXNwYXRjaChsb2FkQWNjb3VudERhdGEoeyAuLi5hY2NvdW50LCBuYW1lOiBhaXJiaXR6QWNjb3VudC51c2VybmFtZSwgYWlyYml0ekFjY291bnQgfSwgdHJ1ZSkpXG4gICAgaGlzdG9yeS5wdXNoKG1ha2VQYXRoKERFRkFVTFRfVklFVykpXG4gIH0pXG59XG5cbi8vIENyZWF0ZSBhbiBldGhlcmV1bSB3YWxsZXQgaWYgb25lIGRvZXNuJ3QgZXhpc3RcbmV4cG9ydCBjb25zdCBsb2dpbldpdGhBaXJiaXR6ID0gKGFpcmJpdHpBY2NvdW50LCBoaXN0b3J5KSA9PiAoZGlzcGF0Y2gpID0+IHtcbiAgY29uc3QgZXRoZXJldW1XYWxsZXQgPSBhaXJiaXR6QWNjb3VudC5nZXRGaXJzdFdhbGxldChBSVJCSVRaX1dBTExFVF9UWVBFKVxuICBpZiAoZXRoZXJldW1XYWxsZXQgIT0gbnVsbCkge1xuICAgIHJldHVybiBkaXNwYXRjaChsb2dpbldpdGhBaXJiaXR6RXRoZXJldW1XYWxsZXQoYWlyYml0ekFjY291bnQsIGV0aGVyZXVtV2FsbGV0LCBoaXN0b3J5KSlcbiAgfVxuICBhaXJiaXR6QWNjb3VudC5jcmVhdGVXYWxsZXQoQUlSQklUWl9XQUxMRVRfVFlQRSwgeyBldGhlcmV1bUtleTogbmV3IEJ1ZmZlcihzZWN1cmVSYW5kb20oMzIpKS50b1N0cmluZygnaGV4JykgfSwgKGVyciwgaWQpID0+IHtcbiAgICBpZiAoZXJyKSByZXR1cm4gY29uc29sZS5lcnJvcih7IGNvZGU6IDAsIG1lc3NhZ2U6ICdjb3VsZCBub3QgY3JlYXRlIHdhbGxldCcgfSlcbiAgICBkaXNwYXRjaChsb2dpbldpdGhBaXJiaXR6RXRoZXJldW1XYWxsZXQoYWlyYml0ekFjY291bnQsIGFpcmJpdHpBY2NvdW50LmdldFdhbGxldChpZCksIGhpc3RvcnkpKVxuICB9KVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9hY3Rpb25zL2xvZ2luLXdpdGgtYWlyYml0ei5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1822\n");

/***/ }),

/***/ 1823:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_modules_auth_components_uport_uport__ = __webpack_require__(1824);\n\n\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])()(__WEBPACK_IMPORTED_MODULE_1_modules_auth_components_uport_uport__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/uport.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvdXBvcnQuanM/ODMxOCJdLCJuYW1lcyI6WyJjb25uZWN0Il0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQ0E7O2VBRWUsb0VBQUFBLEdBQVUsb0ZBQVYsQzs7QUFBZiIsImZpbGUiOiIxODIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xuaW1wb3J0IFVwb3J0IGZyb20gJ21vZHVsZXMvYXV0aC9jb21wb25lbnRzL3Vwb3J0L3Vwb3J0J1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KCkoVXBvcnQpXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvdXBvcnQuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1823\n");

/***/ }),

/***/ 1824:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Uport;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n\n\nfunction Uport() {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'span',\n    null,\n    'yooooooooooooooo port'\n  );\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Uport, 'Uport', '/Users/do/augur/dev/augur/src/modules/auth/components/uport/uport.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvdXBvcnQvdXBvcnQuanN4PzA2NmIiXSwibmFtZXMiOlsiVXBvcnQiXSwibWFwcGluZ3MiOiI7OztBQUFBOztBQUVlLFNBQVNBLEtBQVQsR0FBaUI7QUFDOUIsU0FDRTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBREY7QUFHRDs7Ozs7Ozs7Z0NBSnVCQSxLIiwiZmlsZSI6IjE4MjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFVwb3J0KCkge1xuICByZXR1cm4gKFxuICAgIDxzcGFuPnlvb29vb29vb29vb29vb28gcG9ydDwvc3Bhbj5cbiAgKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb21wb25lbnRzL3Vwb3J0L3Vwb3J0LmpzeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1824\n");

/***/ }),

/***/ 1825:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = trimString;\nfunction trimString(string) {\n  if (string == null) return null;\n  return string.substring(0, 4) + \"...\" + string.substring(string.length - 4);\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(trimString, \"trimString\", \"/Users/do/augur/dev/augur/src/utils/trim-string.js\");\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdXRpbHMvdHJpbS1zdHJpbmcuanM/ZWFjMyJdLCJuYW1lcyI6WyJ0cmltU3RyaW5nIiwic3RyaW5nIiwic3Vic3RyaW5nIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiO0FBQWUsU0FBU0EsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDekMsTUFBSUEsVUFBVSxJQUFkLEVBQW9CLE9BQU8sSUFBUDtBQUNwQixTQUFVQSxPQUFPQyxTQUFQLENBQWlCLENBQWpCLEVBQW9CLENBQXBCLENBQVYsV0FBc0NELE9BQU9DLFNBQVAsQ0FBaUJELE9BQU9FLE1BQVAsR0FBZ0IsQ0FBakMsQ0FBdEM7QUFDRDs7Ozs7Ozs7Z0NBSHVCSCxVIiwiZmlsZSI6IjE4MjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmltU3RyaW5nKHN0cmluZykge1xuICBpZiAoc3RyaW5nID09IG51bGwpIHJldHVybiBudWxsXG4gIHJldHVybiBgJHtzdHJpbmcuc3Vic3RyaW5nKDAsIDQpfS4uLiR7c3RyaW5nLnN1YnN0cmluZyhzdHJpbmcubGVuZ3RoIC0gNCl9YFxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL3V0aWxzL3RyaW0tc3RyaW5nLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1825\n");

/***/ }),

/***/ 1826:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return login; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_services_augurjs__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_modules_auth_actions_load_account_data__ = __webpack_require__(815);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_actions_update_is_logged__ = __webpack_require__(817);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_utils_log_error__ = __webpack_require__(67);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\n\n\n\n\nvar login = function login(keystore, password) {\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : __WEBPACK_IMPORTED_MODULE_3_utils_log_error__[\"a\" /* default */];\n  return function (dispatch, getState) {\n    __WEBPACK_IMPORTED_MODULE_0_services_augurjs__[\"b\" /* augur */].accounts.login(keystore, password, function (account) {\n      if (!account) {\n        return callback({ code: 0, message: 'failed to login' });\n      } else if (account.error) {\n        return callback({ code: account.error, message: account.message });\n      } else if (!account.address) {\n        return callback(null, account);\n      }\n\n      dispatch(Object(__WEBPACK_IMPORTED_MODULE_2_modules_auth_actions_update_is_logged__[\"b\" /* updateIsLogged */])(true));\n      dispatch(Object(__WEBPACK_IMPORTED_MODULE_1_modules_auth_actions_load_account_data__[\"a\" /* loadAccountData */])(_extends({}, keystore), true));\n\n      callback(null);\n    });\n  };\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(login, 'login', '/Users/do/augur/dev/augur/src/modules/auth/actions/login.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2FjdGlvbnMvbG9naW4uanM/ODgzZCJdLCJuYW1lcyI6WyJsb2dpbiIsImtleXN0b3JlIiwicGFzc3dvcmQiLCJjYWxsYmFjayIsImRpc3BhdGNoIiwiZ2V0U3RhdGUiLCJhdWd1ciIsImFjY291bnRzIiwiYWNjb3VudCIsImNvZGUiLCJtZXNzYWdlIiwiZXJyb3IiLCJhZGRyZXNzIiwidXBkYXRlSXNMb2dnZWQiLCJsb2FkQWNjb3VudERhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTyxJQUFNQSxRQUFRLFNBQVJBLEtBQVEsQ0FBQ0MsUUFBRCxFQUFXQyxRQUFYO0FBQUEsTUFBcUJDLFFBQXJCLHVFQUFnQyxnRUFBaEM7QUFBQSxTQUE2QyxVQUFDQyxRQUFELEVBQVdDLFFBQVgsRUFBd0I7QUFDeEZDLElBQUEsK0RBQUFBLENBQU1DLFFBQU4sQ0FBZVAsS0FBZixDQUFxQkMsUUFBckIsRUFBK0JDLFFBQS9CLEVBQXlDLFVBQUNNLE9BQUQsRUFBYTtBQUNwRCxVQUFJLENBQUNBLE9BQUwsRUFBYztBQUNaLGVBQU9MLFNBQVMsRUFBRU0sTUFBTSxDQUFSLEVBQVdDLFNBQVMsaUJBQXBCLEVBQVQsQ0FBUDtBQUNELE9BRkQsTUFFTyxJQUFJRixRQUFRRyxLQUFaLEVBQW1CO0FBQ3hCLGVBQU9SLFNBQVMsRUFBRU0sTUFBTUQsUUFBUUcsS0FBaEIsRUFBdUJELFNBQVNGLFFBQVFFLE9BQXhDLEVBQVQsQ0FBUDtBQUNELE9BRk0sTUFFQSxJQUFJLENBQUNGLFFBQVFJLE9BQWIsRUFBc0I7QUFDM0IsZUFBT1QsU0FBUyxJQUFULEVBQWVLLE9BQWYsQ0FBUDtBQUNEOztBQUVESixlQUFTLHFHQUFBUyxDQUFlLElBQWYsQ0FBVDtBQUNBVCxlQUFTLHVHQUFBVSxjQUFxQmIsUUFBckIsR0FBaUMsSUFBakMsQ0FBVDs7QUFFQUUsZUFBUyxJQUFUO0FBQ0QsS0FiRDtBQWNELEdBZm9CO0FBQUEsQ0FBZDs7Ozs7Ozs7Z0NBQU1ILEsiLCJmaWxlIjoiMTgyNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGF1Z3VyIH0gZnJvbSAnc2VydmljZXMvYXVndXJqcydcbmltcG9ydCB7IGxvYWRBY2NvdW50RGF0YSB9IGZyb20gJ21vZHVsZXMvYXV0aC9hY3Rpb25zL2xvYWQtYWNjb3VudC1kYXRhJ1xuaW1wb3J0IHsgdXBkYXRlSXNMb2dnZWQgfSBmcm9tICdtb2R1bGVzL2F1dGgvYWN0aW9ucy91cGRhdGUtaXMtbG9nZ2VkJ1xuaW1wb3J0IGxvZ0Vycm9yIGZyb20gJ3V0aWxzL2xvZy1lcnJvcidcblxuZXhwb3J0IGNvbnN0IGxvZ2luID0gKGtleXN0b3JlLCBwYXNzd29yZCwgY2FsbGJhY2sgPSBsb2dFcnJvcikgPT4gKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xuICBhdWd1ci5hY2NvdW50cy5sb2dpbihrZXlzdG9yZSwgcGFzc3dvcmQsIChhY2NvdW50KSA9PiB7XG4gICAgaWYgKCFhY2NvdW50KSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soeyBjb2RlOiAwLCBtZXNzYWdlOiAnZmFpbGVkIHRvIGxvZ2luJyB9KVxuICAgIH0gZWxzZSBpZiAoYWNjb3VudC5lcnJvcikge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKHsgY29kZTogYWNjb3VudC5lcnJvciwgbWVzc2FnZTogYWNjb3VudC5tZXNzYWdlIH0pXG4gICAgfSBlbHNlIGlmICghYWNjb3VudC5hZGRyZXNzKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgYWNjb3VudClcbiAgICB9XG5cbiAgICBkaXNwYXRjaCh1cGRhdGVJc0xvZ2dlZCh0cnVlKSlcbiAgICBkaXNwYXRjaChsb2FkQWNjb3VudERhdGEoeyAuLi5rZXlzdG9yZSB9LCB0cnVlKSlcblxuICAgIGNhbGxiYWNrKG51bGwpXG4gIH0pXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2FjdGlvbnMvbG9naW4uanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1826\n");

/***/ }),

/***/ 1827:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TITLE_SUFFIX; });\nvar TITLE_SUFFIX = '| AUGUR';\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(TITLE_SUFFIX, 'TITLE_SUFFIX', '/Users/do/augur/dev/augur/src/modules/app/constants/title-suffix.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hcHAvY29uc3RhbnRzL3RpdGxlLXN1ZmZpeC5qcz8zMWU0Il0sIm5hbWVzIjpbIlRJVExFX1NVRkZJWCJdLCJtYXBwaW5ncyI6IjtBQUFPLElBQU1BLGVBQWUsU0FBckI7Ozs7Ozs7O2dDQUFNQSxZIiwiZmlsZSI6IjE4MjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVElUTEVfU1VGRklYID0gJ3wgQVVHVVInXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hcHAvY29uc3RhbnRzL3RpdGxlLXN1ZmZpeC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1827\n");

/***/ }),

/***/ 2171:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = AuthConnect;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet__ = __webpack_require__(811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_modules_common_components_nav_panel_nav_panel__ = __webpack_require__(1816);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_help_help__ = __webpack_require__(1819);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_modules_auth_containers_airbitz_connect__ = __webpack_require__(2172);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_modules_auth_containers_ledger__ = __webpack_require__(2176);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_modules_auth_containers_uport__ = __webpack_require__(1823);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_modules_auth_containers_keystore_connect__ = __webpack_require__(2178);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_modules_auth_containers_trezor__ = __webpack_require__(2183);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_modules_auth_components_metamask_metamask__ = __webpack_require__(2185);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_modules_routes_helpers_parse_query__ = __webpack_require__(564);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_modules_routes_constants_param_names__ = __webpack_require__(813);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__ = __webpack_require__(2186);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14_modules_app_constants_title_suffix__ = __webpack_require__(1827);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles__ = __webpack_require__(1694);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction AuthConnect(p) {\n  var selectedNav = Object(__WEBPACK_IMPORTED_MODULE_11_modules_routes_helpers_parse_query__[\"a\" /* default */])(p.location.search)[__WEBPACK_IMPORTED_MODULE_12_modules_routes_constants_param_names__[\"a\" /* CONNECT_NAV */]] || null;\n\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'div',\n    { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a.Auth },\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_2_react_helmet___default.a, {\n      titleTemplate: 'Connect -- %s ' + __WEBPACK_IMPORTED_MODULE_14_modules_app_constants_title_suffix__[\"a\" /* TITLE_SUFFIX */]\n    }),\n    __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n      'div',\n      { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a['Auth--constrained'] },\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a.Auth__header },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'h1',\n          null,\n          'Connect An Account'\n        )\n      ),\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a.Auth__content },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_modules_common_components_nav_panel_nav_panel__[\"a\" /* default */], {\n          location: p.location,\n          history: p.history,\n          items: __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"a\" /* ITEMS */],\n          param: __WEBPACK_IMPORTED_MODULE_12_modules_routes_constants_param_names__[\"a\" /* CONNECT_NAV */],\n          selectedNav: selectedNav\n        }),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'div',\n          { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a.Auth__connections },\n          selectedNav == null && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_5_modules_auth_containers_airbitz_connect__[\"a\" /* default */], null),\n          selectedNav === __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"b\" /* PARAMS */].METAMASK && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_10_modules_auth_components_metamask_metamask__[\"a\" /* default */], null),\n          selectedNav === __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"b\" /* PARAMS */].LEDGER && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_6_modules_auth_containers_ledger__[\"a\" /* default */], null),\n          selectedNav === __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"b\" /* PARAMS */].UPORT && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_7_modules_auth_containers_uport__[\"a\" /* default */], null),\n          selectedNav === __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"b\" /* PARAMS */].KEYSTORE && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8_modules_auth_containers_keystore_connect__[\"a\" /* default */], null),\n          selectedNav === __WEBPACK_IMPORTED_MODULE_13_modules_auth_constants_connect_nav__[\"b\" /* PARAMS */].TREZOR && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_9_modules_auth_containers_trezor__[\"a\" /* default */], null)\n        )\n      ),\n      __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'div',\n        { className: __WEBPACK_IMPORTED_MODULE_15_modules_auth_components_auth_auth_styles___default.a.Auth__faq },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_modules_auth_components_help_help__[\"a\" /* default */], null)\n      )\n    )\n  );\n}\n\nAuthConnect.propTypes = {\n  location: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  isMobile: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool.isRequired\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(AuthConnect, 'AuthConnect', '/Users/do/augur/dev/augur/src/modules/auth/components/connect/connect.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvY29ubmVjdC9jb25uZWN0LmpzeD8xZTczIl0sIm5hbWVzIjpbIkF1dGhDb25uZWN0IiwicCIsInNlbGVjdGVkTmF2IiwicGFyc2VRdWVyeSIsImxvY2F0aW9uIiwic2VhcmNoIiwiU3R5bGVzIiwiQXV0aCIsIlRJVExFX1NVRkZJWCIsIkF1dGhfX2hlYWRlciIsIkF1dGhfX2NvbnRlbnQiLCJoaXN0b3J5IiwiQXV0aF9fY29ubmVjdGlvbnMiLCJQQVJBTVMiLCJNRVRBTUFTSyIsIkxFREdFUiIsIlVQT1JUIiwiS0VZU1RPUkUiLCJUUkVaT1IiLCJBdXRoX19mYXEiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJvYmplY3QiLCJpc1JlcXVpcmVkIiwiaXNNb2JpbGUiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRWUsU0FBU0EsV0FBVCxDQUFxQkMsQ0FBckIsRUFBd0I7QUFDckMsTUFBTUMsY0FBYyw0RkFBQUMsQ0FBV0YsRUFBRUcsUUFBRixDQUFXQyxNQUF0QixFQUE4QiwwRkFBOUIsS0FBOEMsSUFBbEU7O0FBRUEsU0FDRTtBQUFBO0FBQUEsTUFBSyxXQUFXLGlGQUFBQyxDQUFPQyxJQUF2QjtBQUNFLGdFQUFDLG9EQUFEO0FBQ0Usd0NBQWdDLHlGQUFBQztBQURsQyxNQURGO0FBSUU7QUFBQTtBQUFBLFFBQUssV0FBVyxpRkFBQUYsQ0FBTyxtQkFBUCxDQUFoQjtBQUNFO0FBQUE7QUFBQSxVQUFLLFdBQVcsaUZBQUFBLENBQU9HLFlBQXZCO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGLE9BREY7QUFJRTtBQUFBO0FBQUEsVUFBSyxXQUFXLGlGQUFBSCxDQUFPSSxhQUF2QjtBQUNFLG9FQUFDLDhGQUFEO0FBQ0Usb0JBQVVULEVBQUVHLFFBRGQ7QUFFRSxtQkFBU0gsRUFBRVUsT0FGYjtBQUdFLGlCQUFPLGtGQUhUO0FBSUUsaUJBQU8sMEZBSlQ7QUFLRSx1QkFBYVQ7QUFMZixVQURGO0FBUUU7QUFBQTtBQUFBLFlBQUssV0FBVyxpRkFBQUksQ0FBT00saUJBQXZCO0FBQ0dWLHlCQUFlLElBQWYsSUFDQyw0REFBQyx3RkFBRCxPQUZKO0FBSUdBLDBCQUFnQixtRkFBQVcsQ0FBT0MsUUFBdkIsSUFDQyw0REFBQywyRkFBRCxPQUxKO0FBT0daLDBCQUFnQixtRkFBQVcsQ0FBT0UsTUFBdkIsSUFDQyw0REFBQywrRUFBRCxPQVJKO0FBVUdiLDBCQUFnQixtRkFBQVcsQ0FBT0csS0FBdkIsSUFDQyw0REFBQyw4RUFBRCxPQVhKO0FBYUdkLDBCQUFnQixtRkFBQVcsQ0FBT0ksUUFBdkIsSUFDQyw0REFBQyx5RkFBRCxPQWRKO0FBZ0JHZiwwQkFBZ0IsbUZBQUFXLENBQU9LLE1BQXZCLElBQ0MsNERBQUMsK0VBQUQ7QUFqQko7QUFSRixPQUpGO0FBaUNFO0FBQUE7QUFBQSxVQUFLLFdBQVcsaUZBQUFaLENBQU9hLFNBQXZCO0FBQ0Usb0VBQUMsa0ZBQUQ7QUFERjtBQWpDRjtBQUpGLEdBREY7QUE0Q0Q7O0FBRURuQixZQUFZb0IsU0FBWixHQUF3QjtBQUN0QmhCLFlBQVUsa0RBQUFpQixDQUFVQyxNQUFWLENBQWlCQyxVQURMO0FBRXRCWixXQUFTLGtEQUFBVSxDQUFVQyxNQUFWLENBQWlCQyxVQUZKO0FBR3RCQyxZQUFVLGtEQUFBSCxDQUFVSSxJQUFWLENBQWVGO0FBSEgsQ0FBeEI7Ozs7Ozs7O2dDQWpEd0J2QixXIiwiZmlsZSI6IjIxNzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgSGVsbWV0IGZyb20gJ3JlYWN0LWhlbG1ldCdcblxuaW1wb3J0IE5hdlBhbmVsIGZyb20gJ21vZHVsZXMvY29tbW9uL2NvbXBvbmVudHMvbmF2LXBhbmVsL25hdi1wYW5lbCdcbmltcG9ydCBIZWxwIGZyb20gJ21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2hlbHAvaGVscCdcbmltcG9ydCBBaXJiaXR6IGZyb20gJ21vZHVsZXMvYXV0aC9jb250YWluZXJzL2FpcmJpdHotY29ubmVjdCdcbmltcG9ydCBMZWRnZXIgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbGVkZ2VyJ1xuaW1wb3J0IFVwb3J0IGZyb20gJ21vZHVsZXMvYXV0aC9jb250YWluZXJzL3Vwb3J0J1xuaW1wb3J0IEtleXN0b3JlQ29ubmVjdCBmcm9tICdtb2R1bGVzL2F1dGgvY29udGFpbmVycy9rZXlzdG9yZS1jb25uZWN0J1xuaW1wb3J0IFRyZXpvciBmcm9tICdtb2R1bGVzL2F1dGgvY29udGFpbmVycy90cmV6b3InXG5pbXBvcnQgTWV0YW1hc2sgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbWV0YW1hc2svbWV0YW1hc2snXG5cbmltcG9ydCBwYXJzZVF1ZXJ5IGZyb20gJ21vZHVsZXMvcm91dGVzL2hlbHBlcnMvcGFyc2UtcXVlcnknXG5cbmltcG9ydCB7IENPTk5FQ1RfTkFWIH0gZnJvbSAnbW9kdWxlcy9yb3V0ZXMvY29uc3RhbnRzL3BhcmFtLW5hbWVzJ1xuaW1wb3J0IHsgSVRFTVMsIFBBUkFNUyB9IGZyb20gJ21vZHVsZXMvYXV0aC9jb25zdGFudHMvY29ubmVjdC1uYXYnXG5pbXBvcnQgeyBUSVRMRV9TVUZGSVggfSBmcm9tICdtb2R1bGVzL2FwcC9jb25zdGFudHMvdGl0bGUtc3VmZml4J1xuXG5pbXBvcnQgU3R5bGVzIGZyb20gJ21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2F1dGgvYXV0aC5zdHlsZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEF1dGhDb25uZWN0KHApIHtcbiAgY29uc3Qgc2VsZWN0ZWROYXYgPSBwYXJzZVF1ZXJ5KHAubG9jYXRpb24uc2VhcmNoKVtDT05ORUNUX05BVl0gfHwgbnVsbFxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5BdXRofT5cbiAgICAgIDxIZWxtZXRcbiAgICAgICAgdGl0bGVUZW1wbGF0ZT17YENvbm5lY3QgLS0gJXMgJHtUSVRMRV9TVUZGSVh9YH1cbiAgICAgIC8+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT17U3R5bGVzWydBdXRoLS1jb25zdHJhaW5lZCddfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5BdXRoX19oZWFkZXJ9PlxuICAgICAgICAgIDxoMT5Db25uZWN0IEFuIEFjY291bnQ8L2gxPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5BdXRoX19jb250ZW50fT5cbiAgICAgICAgICA8TmF2UGFuZWxcbiAgICAgICAgICAgIGxvY2F0aW9uPXtwLmxvY2F0aW9ufVxuICAgICAgICAgICAgaGlzdG9yeT17cC5oaXN0b3J5fVxuICAgICAgICAgICAgaXRlbXM9e0lURU1TfVxuICAgICAgICAgICAgcGFyYW09e0NPTk5FQ1RfTkFWfVxuICAgICAgICAgICAgc2VsZWN0ZWROYXY9e3NlbGVjdGVkTmF2fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5BdXRoX19jb25uZWN0aW9uc30+XG4gICAgICAgICAgICB7c2VsZWN0ZWROYXYgPT0gbnVsbCAmJlxuICAgICAgICAgICAgICA8QWlyYml0eiAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge3NlbGVjdGVkTmF2ID09PSBQQVJBTVMuTUVUQU1BU0sgJiZcbiAgICAgICAgICAgICAgPE1ldGFtYXNrIC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7c2VsZWN0ZWROYXYgPT09IFBBUkFNUy5MRURHRVIgJiZcbiAgICAgICAgICAgICAgPExlZGdlciAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAge3NlbGVjdGVkTmF2ID09PSBQQVJBTVMuVVBPUlQgJiZcbiAgICAgICAgICAgICAgPFVwb3J0IC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7c2VsZWN0ZWROYXYgPT09IFBBUkFNUy5LRVlTVE9SRSAmJlxuICAgICAgICAgICAgICA8S2V5c3RvcmVDb25uZWN0IC8+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB7c2VsZWN0ZWROYXYgPT09IFBBUkFNUy5UUkVaT1IgJiZcbiAgICAgICAgICAgICAgPFRyZXpvciAvPlxuICAgICAgICAgICAgfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e1N0eWxlcy5BdXRoX19mYXF9PlxuICAgICAgICAgIDxIZWxwIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIClcbn1cblxuQXV0aENvbm5lY3QucHJvcFR5cGVzID0ge1xuICBsb2NhdGlvbjogUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBoaXN0b3J5OiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGlzTW9iaWxlOiBQcm9wVHlwZXMuYm9vbC5pc1JlcXVpcmVkXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvY29ubmVjdC9jb25uZWN0LmpzeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2171\n");

/***/ }),

/***/ 2172:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_airbitz_connect_airbitz_connect__ = __webpack_require__(2173);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_login_with_airbitz__ = __webpack_require__(1822);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_auth_helpers_abc__ = __webpack_require__(1698);\n\n\n\n\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    airbitzLoginLink: function airbitzLoginLink(history) {\n      return Object(__WEBPACK_IMPORTED_MODULE_4_modules_auth_helpers_abc__[\"a\" /* default */])().openLoginWindow(function (result, airbitzAccount) {\n        if (airbitzAccount) {\n          dispatch(Object(__WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_login_with_airbitz__[\"a\" /* loginWithAirbitz */])(airbitzAccount, history));\n        } else {\n          console.error('error registering in: ' + result);\n        }\n      });\n    },\n    airbitzOnLoad: function airbitzOnLoad(history) {\n      var abcUi = Object(__WEBPACK_IMPORTED_MODULE_4_modules_auth_helpers_abc__[\"a\" /* default */])();\n      var abcContext = abcUi.abcContext;\n      var usernames = abcContext.listUsernames();\n      if (usernames.length > 0) {\n        abcUi.openLoginWindow(function (result, airbitzAccount) {\n          if (airbitzAccount) {\n            dispatch(Object(__WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_login_with_airbitz__[\"a\" /* loginWithAirbitz */])(airbitzAccount, history));\n          } else {\n            console.error('error registering in: ' + result);\n          }\n        });\n      }\n    }\n  };\n};\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"f\" /* withRouter */])(Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])(null, mapDispatchToProps)(__WEBPACK_IMPORTED_MODULE_2_modules_auth_components_airbitz_connect_airbitz_connect__[\"a\" /* default */]));\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', '/Users/do/augur/dev/augur/src/modules/auth/containers/airbitz-connect.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/airbitz-connect.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvYWlyYml0ei1jb25uZWN0LmpzPzE2MDMiXSwibmFtZXMiOlsibWFwRGlzcGF0Y2hUb1Byb3BzIiwiYWlyYml0ekxvZ2luTGluayIsInNlbGVjdEFCQ1VJQ29udGV4dCIsIm9wZW5Mb2dpbldpbmRvdyIsInJlc3VsdCIsImFpcmJpdHpBY2NvdW50IiwiZGlzcGF0Y2giLCJsb2dpbldpdGhBaXJiaXR6IiwiaGlzdG9yeSIsImNvbnNvbGUiLCJlcnJvciIsImFpcmJpdHpPbkxvYWQiLCJhYmNVaSIsImFiY0NvbnRleHQiLCJ1c2VybmFtZXMiLCJsaXN0VXNlcm5hbWVzIiwibGVuZ3RoIiwid2l0aFJvdXRlciIsImNvbm5lY3QiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxxQkFBcUIsU0FBckJBLGtCQUFxQjtBQUFBLFNBQWE7QUFDdENDLHNCQUFrQjtBQUFBLGFBQVcsaUZBQUFDLEdBQXFCQyxlQUFyQixDQUFxQyxVQUFDQyxNQUFELEVBQVNDLGNBQVQsRUFBNEI7QUFDNUYsWUFBSUEsY0FBSixFQUFvQjtBQUNsQkMsbUJBQVMseUdBQUFDLENBQWlCRixjQUFqQixFQUFpQ0csT0FBakMsQ0FBVDtBQUNELFNBRkQsTUFFTztBQUNMQyxrQkFBUUMsS0FBUixDQUFjLDJCQUEyQk4sTUFBekM7QUFDRDtBQUNGLE9BTjRCLENBQVg7QUFBQSxLQURvQjtBQVF0Q08sbUJBQWUsdUJBQUNILE9BQUQsRUFBYTtBQUMxQixVQUFNSSxRQUFRLGlGQUFBVixFQUFkO0FBQ0EsVUFBTVcsYUFBYUQsTUFBTUMsVUFBekI7QUFDQSxVQUFNQyxZQUFZRCxXQUFXRSxhQUFYLEVBQWxCO0FBQ0EsVUFBSUQsVUFBVUUsTUFBVixHQUFtQixDQUF2QixFQUEwQjtBQUN4QkosY0FBTVQsZUFBTixDQUFzQixVQUFDQyxNQUFELEVBQVNDLGNBQVQsRUFBNEI7QUFDaEQsY0FBSUEsY0FBSixFQUFvQjtBQUNsQkMscUJBQVMseUdBQUFDLENBQWlCRixjQUFqQixFQUFpQ0csT0FBakMsQ0FBVDtBQUNELFdBRkQsTUFFTztBQUNMQyxvQkFBUUMsS0FBUixDQUFjLDJCQUEyQk4sTUFBekM7QUFDRDtBQUNGLFNBTkQ7QUFPRDtBQUNGO0FBckJxQyxHQUFiO0FBQUEsQ0FBM0I7O2VBd0JlLDRFQUFBYSxDQUFXLG9FQUFBQyxDQUFRLElBQVIsRUFBY2xCLGtCQUFkLEVBQWtDLHdHQUFsQyxDQUFYLEM7O0FBQWY7Ozs7Ozs7O2dDQXhCTUEsa0IiLCJmaWxlIjoiMjE3Mi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcbmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IEFpcmJpdHogZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYWlyYml0ei1jb25uZWN0L2FpcmJpdHotY29ubmVjdCdcbmltcG9ydCB7IGxvZ2luV2l0aEFpcmJpdHogfSBmcm9tICdtb2R1bGVzL2F1dGgvYWN0aW9ucy9sb2dpbi13aXRoLWFpcmJpdHonXG5pbXBvcnQgc2VsZWN0QUJDVUlDb250ZXh0IGZyb20gJ21vZHVsZXMvYXV0aC9oZWxwZXJzL2FiYydcblxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4gKHtcbiAgYWlyYml0ekxvZ2luTGluazogaGlzdG9yeSA9PiBzZWxlY3RBQkNVSUNvbnRleHQoKS5vcGVuTG9naW5XaW5kb3coKHJlc3VsdCwgYWlyYml0ekFjY291bnQpID0+IHtcbiAgICBpZiAoYWlyYml0ekFjY291bnQpIHtcbiAgICAgIGRpc3BhdGNoKGxvZ2luV2l0aEFpcmJpdHooYWlyYml0ekFjY291bnQsIGhpc3RvcnkpKVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdlcnJvciByZWdpc3RlcmluZyBpbjogJyArIHJlc3VsdClcbiAgICB9XG4gIH0pLFxuICBhaXJiaXR6T25Mb2FkOiAoaGlzdG9yeSkgPT4ge1xuICAgIGNvbnN0IGFiY1VpID0gc2VsZWN0QUJDVUlDb250ZXh0KClcbiAgICBjb25zdCBhYmNDb250ZXh0ID0gYWJjVWkuYWJjQ29udGV4dFxuICAgIGNvbnN0IHVzZXJuYW1lcyA9IGFiY0NvbnRleHQubGlzdFVzZXJuYW1lcygpXG4gICAgaWYgKHVzZXJuYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICBhYmNVaS5vcGVuTG9naW5XaW5kb3coKHJlc3VsdCwgYWlyYml0ekFjY291bnQpID0+IHtcbiAgICAgICAgaWYgKGFpcmJpdHpBY2NvdW50KSB7XG4gICAgICAgICAgZGlzcGF0Y2gobG9naW5XaXRoQWlyYml0eihhaXJiaXR6QWNjb3VudCwgaGlzdG9yeSkpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignZXJyb3IgcmVnaXN0ZXJpbmcgaW46ICcgKyByZXN1bHQpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG59KVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKGNvbm5lY3QobnVsbCwgbWFwRGlzcGF0Y2hUb1Byb3BzKShBaXJiaXR6KSlcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2F1dGgvY29udGFpbmVycy9haXJiaXR6LWNvbm5lY3QuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2172\n");

/***/ }),

/***/ 2173:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_classnames__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_helmet__ = __webpack_require__(811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles__ = __webpack_require__(2174);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\nvar Airbitz = function (_Component) {\n  _inherits(Airbitz, _Component);\n\n  function Airbitz() {\n    _classCallCheck(this, Airbitz);\n\n    return _possibleConstructorReturn(this, (Airbitz.__proto__ || Object.getPrototypeOf(Airbitz)).apply(this, arguments));\n  }\n\n  _createClass(Airbitz, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.props.airbitzOnLoad(this.props.history);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var p = this.props;\n\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'section',\n        { className: __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles___default.a.Airbitz },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_3_react_helmet___default.a,\n          null,\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'title',\n            null,\n            'Airbitz'\n          )\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'button',\n          {\n            className: __WEBPACK_IMPORTED_MODULE_2_classnames___default()(__WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles___default.a.button, __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles___default.a['button--purple'], __WEBPACK_IMPORTED_MODULE_4_modules_auth_components_airbitz_connect_airbitz_connect_styles___default.a.Airbitz__button),\n            onClick: function onClick() {\n              return p.airbitzLoginLink(p.history);\n            }\n          },\n          'Connect Airbitz Account'\n        )\n      );\n    }\n  }]);\n\n  return Airbitz;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nAirbitz.propTypes = {\n  history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  airbitzLoginLink: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,\n  airbitzOnLoad: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired\n};\nvar _default = Airbitz;\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Airbitz, 'Airbitz', '/Users/do/augur/dev/augur/src/modules/auth/components/airbitz-connect/airbitz-connect.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/components/airbitz-connect/airbitz-connect.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYWlyYml0ei1jb25uZWN0L2FpcmJpdHotY29ubmVjdC5qc3g/YmU2ZCJdLCJuYW1lcyI6WyJBaXJiaXR6IiwicHJvcHMiLCJhaXJiaXR6T25Mb2FkIiwiaGlzdG9yeSIsInAiLCJTdHlsZXMiLCJjbGFzc05hbWVzIiwiYnV0dG9uIiwiQWlyYml0el9fYnV0dG9uIiwiYWlyYml0ekxvZ2luTGluayIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm9iamVjdCIsImlzUmVxdWlyZWQiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7SUFFcUJBLE87Ozs7Ozs7Ozs7O3lDQU9FO0FBQ25CLFdBQUtDLEtBQUwsQ0FBV0MsYUFBWCxDQUF5QixLQUFLRCxLQUFMLENBQVdFLE9BQXBDO0FBQ0Q7Ozs2QkFFUTtBQUNQLFVBQU1DLElBQUksS0FBS0gsS0FBZjs7QUFFQSxhQUNFO0FBQUE7QUFBQSxVQUFTLFdBQVcsc0dBQUFJLENBQU9MLE9BQTNCO0FBQ0U7QUFBQyw4REFBRDtBQUFBO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGLFNBREY7QUFJRTtBQUFBO0FBQUE7QUFDRSx1QkFDRSxrREFBQU0sQ0FDRSxzR0FBQUQsQ0FBT0UsTUFEVCxFQUVFLHNHQUFBRixrQkFGRixFQUdFLHNHQUFBQSxDQUFPRyxlQUhULENBRko7QUFRRSxxQkFBUztBQUFBLHFCQUFNSixFQUFFSyxnQkFBRixDQUFtQkwsRUFBRUQsT0FBckIsQ0FBTjtBQUFBO0FBUlg7QUFBQTtBQUFBO0FBSkYsT0FERjtBQW1CRDs7OztFQWpDa0MsZ0Q7O0FBQWhCSCxPLENBQ1pVLFMsR0FBWTtBQUNqQlAsV0FBUyxrREFBQVEsQ0FBVUMsTUFBVixDQUFpQkMsVUFEVDtBQUVqQkosb0JBQWtCLGtEQUFBRSxDQUFVRyxJQUFWLENBQWVELFVBRmhCO0FBR2pCWCxpQkFBZSxrREFBQVMsQ0FBVUcsSUFBVixDQUFlRDtBQUhiLEM7ZUFEQWIsTzs7Ozs7Ozs7O2dDQUFBQSxPIiwiZmlsZSI6IjIxNzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJ1xuaW1wb3J0IEhlbG1ldCBmcm9tICdyZWFjdC1oZWxtZXQnXG5cbmltcG9ydCBTdHlsZXMgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYWlyYml0ei1jb25uZWN0L2FpcmJpdHotY29ubmVjdC5zdHlsZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFpcmJpdHogZXh0ZW5kcyBDb21wb25lbnQge1xuICBzdGF0aWMgcHJvcFR5cGVzID0ge1xuICAgIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZCxcbiAgICBhaXJiaXR6TG9naW5MaW5rOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICAgIGFpcmJpdHpPbkxvYWQ6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbiAgfVxuXG4gIGNvbXBvbmVudFdpbGxNb3VudCgpIHtcbiAgICB0aGlzLnByb3BzLmFpcmJpdHpPbkxvYWQodGhpcy5wcm9wcy5oaXN0b3J5KVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHAgPSB0aGlzLnByb3BzXG5cbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPXtTdHlsZXMuQWlyYml0en0+XG4gICAgICAgIDxIZWxtZXQ+XG4gICAgICAgICAgPHRpdGxlPkFpcmJpdHo8L3RpdGxlPlxuICAgICAgICA8L0hlbG1ldD5cbiAgICAgICAgPGJ1dHRvblxuICAgICAgICAgIGNsYXNzTmFtZT17XG4gICAgICAgICAgICBjbGFzc05hbWVzKFxuICAgICAgICAgICAgICBTdHlsZXMuYnV0dG9uLFxuICAgICAgICAgICAgICBTdHlsZXNbYGJ1dHRvbi0tcHVycGxlYF0sXG4gICAgICAgICAgICAgIFN0eWxlcy5BaXJiaXR6X19idXR0b25cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4gcC5haXJiaXR6TG9naW5MaW5rKHAuaGlzdG9yeSl9XG4gICAgICAgID5cbiAgICAgICAgICBDb25uZWN0IEFpcmJpdHogQWNjb3VudFxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICApXG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2F1dGgvY29tcG9uZW50cy9haXJiaXR6LWNvbm5lY3QvYWlyYml0ei1jb25uZWN0LmpzeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2173\n");

/***/ }),

/***/ 2174:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2175);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(74)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./airbitz-connect.styles.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./airbitz-connect.styles.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYWlyYml0ei1jb25uZWN0L2FpcmJpdHotY29ubmVjdC5zdHlsZXMubGVzcz9iNjA0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJmaWxlIjoiMjE3NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2FpcmJpdHotY29ubmVjdC5zdHlsZXMubGVzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9haXJiaXR6LWNvbm5lY3Quc3R5bGVzLmxlc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyL2luZGV4LmpzIS4vYWlyYml0ei1jb25uZWN0LnN0eWxlcy5sZXNzXCIpO1xuXHRcdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdFx0fSk7XG5cdH1cblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2F1dGgvY29tcG9uZW50cy9haXJiaXR6LWNvbm5lY3QvYWlyYml0ei1jb25uZWN0LnN0eWxlcy5sZXNzXG4vLyBtb2R1bGUgaWQgPSAyMTc0XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2174\n");

/***/ }),

/***/ 2175:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(66)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".airbitz-connect-styles_Airbitz_3MV {\\n  display: flex;\\n  justify-content: center;\\n  min-height: 100%;\\n  width: 100%;\\n}\\n.airbitz-connect-styles_Airbitz__button_1CP {\\n  align-self: center;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"Airbitz\": \"airbitz-connect-styles_Airbitz_3MV\",\n\t\"Airbitz__button\": \"airbitz-connect-styles_Airbitz__button_1CP\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvYWlyYml0ei1jb25uZWN0L2FpcmJpdHotY29ubmVjdC5zdHlsZXMubGVzcz84NDNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7OztBQUdBO0FBQ0EsOERBQStELGtCQUFrQiw0QkFBNEIscUJBQXFCLGdCQUFnQixHQUFHLCtDQUErQyx1QkFBdUIsR0FBRzs7QUFFOU47QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIyMTc1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh1bmRlZmluZWQpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmFpcmJpdHotY29ubmVjdC1zdHlsZXNfQWlyYml0el8zTVYge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWluLWhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiAxMDAlO1xcbn1cXG4uYWlyYml0ei1jb25uZWN0LXN0eWxlc19BaXJiaXR6X19idXR0b25fMUNQIHtcXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiQWlyYml0elwiOiBcImFpcmJpdHotY29ubmVjdC1zdHlsZXNfQWlyYml0el8zTVZcIixcblx0XCJBaXJiaXR6X19idXR0b25cIjogXCJhaXJiaXR6LWNvbm5lY3Qtc3R5bGVzX0FpcmJpdHpfX2J1dHRvbl8xQ1BcIlxufTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcIm1vZHVsZXNcIjp0cnVlLFwibG9jYWxJZGVudE5hbWVcIjpcIltuYW1lXV9bbG9jYWxdX1toYXNoOmJhc2U2NDozXVwifSEuL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIhLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyIS4vc3JjL21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2FpcmJpdHotY29ubmVjdC9haXJiaXR6LWNvbm5lY3Quc3R5bGVzLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDIxNzVcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2175\n");

/***/ }),

/***/ 2176:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_modules_auth_components_ledger_ledger__ = __webpack_require__(2177);\n\n\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])()(__WEBPACK_IMPORTED_MODULE_1_modules_auth_components_ledger_ledger__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/ledger.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvbGVkZ2VyLmpzP2EwMWMiXSwibmFtZXMiOlsiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBOztlQUVlLG9FQUFBQSxHQUFVLHNGQUFWLEM7O0FBQWYiLCJmaWxlIjoiMjE3Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcbmltcG9ydCBMZWRnZXIgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbGVkZ2VyL2xlZGdlcidcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdCgpKExlZGdlcilcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2F1dGgvY29udGFpbmVycy9sZWRnZXIuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2176\n");

/***/ }),

/***/ 2177:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Trezor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n\n\nfunction Trezor() {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'span',\n    null,\n    'Leadure'\n  );\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Trezor, 'Trezor', '/Users/do/augur/dev/augur/src/modules/auth/components/ledger/ledger.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbGVkZ2VyL2xlZGdlci5qc3g/MDM2ZiJdLCJuYW1lcyI6WyJUcmV6b3IiXSwibWFwcGluZ3MiOiI7OztBQUFBOztBQUVlLFNBQVNBLE1BQVQsR0FBa0I7QUFDL0IsU0FDRTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBREY7QUFHRDs7Ozs7Ozs7Z0NBSnVCQSxNIiwiZmlsZSI6IjIxNzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRyZXpvcigpIHtcbiAgcmV0dXJuIChcbiAgICA8c3Bhbj5MZWFkdXJlPC9zcGFuPlxuICApXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbGVkZ2VyL2xlZGdlci5qc3giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2177\n");

/***/ }),

/***/ 2178:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_keystore_connect_keystore_connect__ = __webpack_require__(2179);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_import_account__ = __webpack_require__(2182);\n\n\n\n\n\n\nvar mapPropsToState = function mapPropsToState(dispatch) {\n  return {\n    importAccount: function importAccount(keystore, password, callback) {\n      return dispatch(Object(__WEBPACK_IMPORTED_MODULE_3_modules_auth_actions_import_account__[\"a\" /* importAccount */])(keystore, password, callback));\n    }\n  };\n};\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"f\" /* withRouter */])(Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])(null, mapPropsToState)(__WEBPACK_IMPORTED_MODULE_2_modules_auth_components_keystore_connect_keystore_connect__[\"a\" /* default */]));\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(mapPropsToState, 'mapPropsToState', '/Users/do/augur/dev/augur/src/modules/auth/containers/keystore-connect.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/keystore-connect.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMva2V5c3RvcmUtY29ubmVjdC5qcz8xZDhkIl0sIm5hbWVzIjpbIm1hcFByb3BzVG9TdGF0ZSIsImltcG9ydEFjY291bnQiLCJrZXlzdG9yZSIsInBhc3N3b3JkIiwiY2FsbGJhY2siLCJkaXNwYXRjaCIsIndpdGhSb3V0ZXIiLCJjb25uZWN0Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLElBQU1BLGtCQUFrQixTQUFsQkEsZUFBa0I7QUFBQSxTQUFhO0FBQ25DQyxtQkFBZSx1QkFBQ0MsUUFBRCxFQUFXQyxRQUFYLEVBQXFCQyxRQUFyQjtBQUFBLGFBQWtDQyxTQUFTLGtHQUFBSixDQUFjQyxRQUFkLEVBQXdCQyxRQUF4QixFQUFrQ0MsUUFBbEMsQ0FBVCxDQUFsQztBQUFBO0FBRG9CLEdBQWI7QUFBQSxDQUF4Qjs7ZUFJZSw0RUFBQUUsQ0FBVyxvRUFBQUMsQ0FBUSxJQUFSLEVBQWNQLGVBQWQsRUFBK0IsMEdBQS9CLENBQVgsQzs7QUFBZjs7Ozs7Ozs7Z0NBSk1BLGUiLCJmaWxlIjoiMjE3OC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcbmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IEtleXN0b3JlQ29ubmVjdCBmcm9tICdtb2R1bGVzL2F1dGgvY29tcG9uZW50cy9rZXlzdG9yZS1jb25uZWN0L2tleXN0b3JlLWNvbm5lY3QnXG5cbmltcG9ydCB7IGltcG9ydEFjY291bnQgfSBmcm9tICdtb2R1bGVzL2F1dGgvYWN0aW9ucy9pbXBvcnQtYWNjb3VudCdcblxuY29uc3QgbWFwUHJvcHNUb1N0YXRlID0gZGlzcGF0Y2ggPT4gKHtcbiAgaW1wb3J0QWNjb3VudDogKGtleXN0b3JlLCBwYXNzd29yZCwgY2FsbGJhY2spID0+IGRpc3BhdGNoKGltcG9ydEFjY291bnQoa2V5c3RvcmUsIHBhc3N3b3JkLCBjYWxsYmFjaykpXG59KVxuXG5leHBvcnQgZGVmYXVsdCB3aXRoUm91dGVyKGNvbm5lY3QobnVsbCwgbWFwUHJvcHNUb1N0YXRlKShLZXlzdG9yZUNvbm5lY3QpKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb250YWluZXJzL2tleXN0b3JlLWNvbm5lY3QuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2178\n");

/***/ }),

/***/ 2179:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet__ = __webpack_require__(811);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react_helmet___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react_helmet__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_classnames__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_classnames___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_classnames__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_modules_common_components_icons_icons__ = __webpack_require__(1564);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_path__ = __webpack_require__(94);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_utils_trim_string__ = __webpack_require__(1825);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_modules_routes_constants_views__ = __webpack_require__(76);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles__ = __webpack_require__(2180);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar KeystoreConnect = function (_Component) {\n  _inherits(KeystoreConnect, _Component);\n\n  function KeystoreConnect() {\n    _classCallCheck(this, KeystoreConnect);\n\n    var _this = _possibleConstructorReturn(this, (KeystoreConnect.__proto__ || Object.getPrototypeOf(KeystoreConnect)).call(this));\n\n    _this.state = {\n      error: null,\n      password: '',\n      keystore: null\n    };\n\n    _this.handleRecoverError = _this.handleRecoverError.bind(_this);\n    return _this;\n  }\n\n  _createClass(KeystoreConnect, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      // NOTE --  keythereum (as of implementation) simply throws when a private key\n      //          is unable to be recovered, so this error is handled thusly\n      window.addEventListener('error', this.handleRecoverError);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('error', this.handleRecoverError);\n    }\n  }, {\n    key: 'handleRecoverError',\n    value: function handleRecoverError(err) {\n      this.setState({\n        error: 'Unable to recover account from file'\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var p = this.props;\n      var s = this.state;\n\n      return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n        'section',\n        { className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore },\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          __WEBPACK_IMPORTED_MODULE_2_react_helmet___default.a,\n          null,\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'title',\n            null,\n            'Keystore'\n          )\n        ),\n        __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n          'div',\n          { className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__content },\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'form',\n            {\n              className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__form,\n              onSubmit: function onSubmit(e) {\n                e.preventDefault();\n\n                if (s.keystore && s.password) {\n                  p.importAccount(s.password, s.keystore, function (err) {\n                    if (err) {\n                      return _this2.setState({\n                        error: 'Account Import Failed'\n                      });\n                    }\n\n                    p.history.push(Object(__WEBPACK_IMPORTED_MODULE_5_modules_routes_helpers_make_path__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_7_modules_routes_constants_views__[\"j\" /* DEFAULT_VIEW */]));\n                  });\n                }\n              }\n            },\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'div',\n              {\n                className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__input\n              },\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n                id: 'keystore_connect_file',\n                className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__file,\n                type: 'file',\n                onChange: function onChange(e) {\n                  if (e.target.files.length) {\n                    if (e.target.files[0].type !== '') {\n                      _this2.setState({\n                        error: 'Incorrect file type',\n                        password: '',\n                        keystore: null\n                      });\n                    }\n                    var fileReader = new FileReader();\n\n                    fileReader.readAsText(e.target.files[0]);\n\n                    fileReader.onload = function (e) {\n                      try {\n                        var keystore = JSON.parse(e.target.result);\n                        _this2.setState({\n                          error: null,\n                          password: '',\n                          keystore: keystore\n                        });\n                      } catch (err) {\n                        _this2.setState({\n                          error: 'Malformed account file',\n                          password: '',\n                          keystore: null\n                        });\n                      }\n                    };\n                  } else {\n                    _this2.setState({\n                      error: null,\n                      password: '',\n                      keystore: null\n                    });\n                  }\n                }\n              }),\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'label',\n                {\n                  htmlFor: 'keystore_connect_file'\n                },\n                __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                  'span',\n                  null,\n                  __WEBPACK_IMPORTED_MODULE_4_modules_common_components_icons_icons__[\"f\" /* Export */]\n                ),\n                s.keystore === null ? 'Upload File' : Object(__WEBPACK_IMPORTED_MODULE_6_utils_trim_string__[\"a\" /* default */])(s.keystore.address)\n              )\n            ),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'div',\n              {\n                className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__input\n              },\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'label',\n                {\n                  htmlFor: 'keyword_create_passphrase'\n                },\n                'Passphrase'\n              ),\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('input', {\n                id: 'keyword_create_passphrase',\n                type: 'password',\n                value: s.password,\n                placeholder: 'Passphrase',\n                disabled: s.keystore === null,\n                onChange: function onChange(e) {\n                  return _this2.setState({ password: e.target.value });\n                }\n              })\n            ),\n            __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'div',\n              { className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__actions },\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'button',\n                {\n                  className: __WEBPACK_IMPORTED_MODULE_3_classnames___default()(__WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a['button--purple'], _defineProperty({}, __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a['button--disabled'], s.password === '' || s.keystore === null)),\n                  disabled: s.password === '' || s.keystore === null\n                },\n                'connect'\n              )\n            )\n          ),\n          __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n            'div',\n            { className: __WEBPACK_IMPORTED_MODULE_8_modules_auth_components_keystore_connect_keystore_connect_styles___default.a.Keystore__instruction },\n            s.error !== null && __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n              'div',\n              null,\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'h3',\n                null,\n                'Error:'\n              ),\n              __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n                'span',\n                null,\n                s.error\n              )\n            )\n          )\n        )\n      );\n    }\n  }]);\n\n  return KeystoreConnect;\n}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);\n\nKeystoreConnect.propTypes = {\n  history: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,\n  importAccount: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired\n};\nvar _default = KeystoreConnect;\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(KeystoreConnect, 'KeystoreConnect', '/Users/do/augur/dev/augur/src/modules/auth/components/keystore-connect/keystore-connect.jsx');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/components/keystore-connect/keystore-connect.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2179\n");

/***/ }),

/***/ 2180:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(2181);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = __webpack_require__(74)(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./keystore-connect.styles.less\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js??ref--6-1!../../../../../node_modules/postcss-loader/lib/index.js!../../../../../node_modules/less-loader/dist/cjs.js!../../../../../node_modules/import-glob-loader/index.js!./keystore-connect.styles.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMva2V5c3RvcmUtY29ubmVjdC9rZXlzdG9yZS1jb25uZWN0LnN0eWxlcy5sZXNzP2U5NzYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsImZpbGUiOiIyMTgwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtMSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliL2luZGV4LmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaW1wb3J0LWdsb2ItbG9hZGVyL2luZGV4LmpzIS4va2V5c3RvcmUtY29ubmVjdC5zdHlsZXMubGVzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gUHJlcGFyZSBjc3NUcmFuc2Zvcm1hdGlvblxudmFyIHRyYW5zZm9ybTtcblxudmFyIG9wdGlvbnMgPSB7fVxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRpZighY29udGVudC5sb2NhbHMpIHtcblx0XHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi0xIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9saWIvaW5kZXguanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pbXBvcnQtZ2xvYi1sb2FkZXIvaW5kZXguanMhLi9rZXlzdG9yZS1jb25uZWN0LnN0eWxlcy5sZXNzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8/cmVmLS02LTEhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2xpYi9pbmRleC5qcyEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlci9pbmRleC5qcyEuL2tleXN0b3JlLWNvbm5lY3Quc3R5bGVzLmxlc3NcIik7XG5cdFx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0XHR9KTtcblx0fVxuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb21wb25lbnRzL2tleXN0b3JlLWNvbm5lY3Qva2V5c3RvcmUtY29ubmVjdC5zdHlsZXMubGVzc1xuLy8gbW9kdWxlIGlkID0gMjE4MFxuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2180\n");

/***/ }),

/***/ 2181:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(66)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".keystore-connect-styles_Keystore__form_6A_ button {\\n  font-weight: 500;\\n  letter-spacing: 0.3px;\\n  text-transform: uppercase;\\n}\\n.keystore-connect-styles_Keystore__form_6A_ label {\\n  color: #372e4b;\\n}\\n.keystore-connect-styles_Keystore_uLl {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  padding: 2rem;\\n  padding-left: 6rem;\\n}\\n.keystore-connect-styles_Keystore__content_2pU {\\n  display: flex;\\n  height: 100%;\\n  justify-content: center;\\n  width: 100%;\\n}\\n.keystore-connect-styles_Keystore__form_6A_ {\\n  display: flex;\\n  flex: 3;\\n  flex-direction: column;\\n  justify-content: center;\\n  padding-right: 2rem;\\n}\\n.keystore-connect-styles_Keystore__form_6A_ > * {\\n  margin-bottom: 1.8em;\\n}\\n.keystore-connect-styles_Keystore__form_6A_ h3 {\\n  font-size: 1.125rem;\\n}\\n.keystore-connect-styles_Keystore__actions_PaR {\\n  display: flex;\\n  justify-content: space-around;\\n}\\n.keystore-connect-styles_Keystore__actions_PaR button,\\n.keystore-connect-styles_Keystore__actions_PaR a {\\n  max-height: 3em;\\n}\\n.keystore-connect-styles_Keystore__instruction_14A {\\n  flex: 2;\\n}\\n.keystore-connect-styles_Keystore__instruction_14A h3 {\\n  margin-bottom: 1em;\\n}\\n.keystore-connect-styles_Keystore__suggestions_2kv ul {\\n  list-style: disc;\\n}\\n.keystore-connect-styles_Keystore__suggestions_2kv ul li {\\n  font-size: 0.875rem;\\n  margin: 1em 0 0 1em;\\n}\\n.keystore-connect-styles_Keystore__file_lV4 {\\n  display: none;\\n}\\n.keystore-connect-styles_Keystore__file_lV4 + label {\\n  align-items: center;\\n  display: flex;\\n  font-size: 1.125rem;\\n  margin-bottom: 0;\\n}\\n.keystore-connect-styles_Keystore__file_lV4 + label span {\\n  align-items: center;\\n  display: flex;\\n  height: 1.2em;\\n  margin: 0.2em 0.5em 0 0;\\n  padding: 0;\\n  width: 1.2em;\\n}\\n.keystore-connect-styles_Keystore__file_lV4 + label span svg {\\n  height: 100%;\\n  width: 100%;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"Keystore__form\": \"keystore-connect-styles_Keystore__form_6A_\",\n\t\"Keystore\": \"keystore-connect-styles_Keystore_uLl\",\n\t\"Keystore__content\": \"keystore-connect-styles_Keystore__content_2pU\",\n\t\"Keystore__actions\": \"keystore-connect-styles_Keystore__actions_PaR\",\n\t\"Keystore__instruction\": \"keystore-connect-styles_Keystore__instruction_14A\",\n\t\"Keystore__suggestions\": \"keystore-connect-styles_Keystore__suggestions_2kv\",\n\t\"Keystore__file\": \"keystore-connect-styles_Keystore__file_lV4\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMva2V5c3RvcmUtY29ubmVjdC9rZXlzdG9yZS1jb25uZWN0LnN0eWxlcy5sZXNzP2ExOGEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7O0FBR0E7QUFDQSw2RUFBOEUscUJBQXFCLDBCQUEwQiw4QkFBOEIsR0FBRyxxREFBcUQsbUJBQW1CLEdBQUcseUNBQXlDLGtCQUFrQiwyQkFBMkIsaUJBQWlCLGtCQUFrQix1QkFBdUIsR0FBRyxrREFBa0Qsa0JBQWtCLGlCQUFpQiw0QkFBNEIsZ0JBQWdCLEdBQUcsK0NBQStDLGtCQUFrQixZQUFZLDJCQUEyQiw0QkFBNEIsd0JBQXdCLEdBQUcsbURBQW1ELHlCQUF5QixHQUFHLGtEQUFrRCx3QkFBd0IsR0FBRyxrREFBa0Qsa0JBQWtCLGtDQUFrQyxHQUFHLDRHQUE0RyxvQkFBb0IsR0FBRyxzREFBc0QsWUFBWSxHQUFHLHlEQUF5RCx1QkFBdUIsR0FBRyx5REFBeUQscUJBQXFCLEdBQUcsNERBQTRELHdCQUF3Qix3QkFBd0IsR0FBRywrQ0FBK0Msa0JBQWtCLEdBQUcsdURBQXVELHdCQUF3QixrQkFBa0Isd0JBQXdCLHFCQUFxQixHQUFHLDREQUE0RCx3QkFBd0Isa0JBQWtCLGtCQUFrQiw0QkFBNEIsZUFBZSxpQkFBaUIsR0FBRyxnRUFBZ0UsaUJBQWlCLGdCQUFnQixHQUFHOztBQUUvMkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiMjE4MS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikodW5kZWZpbmVkKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fZm9ybV82QV8gYnV0dG9uIHtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICBsZXR0ZXItc3BhY2luZzogMC4zcHg7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2Zvcm1fNkFfIGxhYmVsIHtcXG4gIGNvbG9yOiAjMzcyZTRiO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfdUxsIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgcGFkZGluZzogMnJlbTtcXG4gIHBhZGRpbmctbGVmdDogNnJlbTtcXG59XFxuLmtleXN0b3JlLWNvbm5lY3Qtc3R5bGVzX0tleXN0b3JlX19jb250ZW50XzJwVSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuLmtleXN0b3JlLWNvbm5lY3Qtc3R5bGVzX0tleXN0b3JlX19mb3JtXzZBXyB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleDogMztcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHBhZGRpbmctcmlnaHQ6IDJyZW07XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fZm9ybV82QV8gPiAqIHtcXG4gIG1hcmdpbi1ib3R0b206IDEuOGVtO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2Zvcm1fNkFfIGgzIHtcXG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fYWN0aW9uc19QYVIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2FjdGlvbnNfUGFSIGJ1dHRvbixcXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2FjdGlvbnNfUGFSIGEge1xcbiAgbWF4LWhlaWdodDogM2VtO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2luc3RydWN0aW9uXzE0QSB7XFxuICBmbGV4OiAyO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2luc3RydWN0aW9uXzE0QSBoMyB7XFxuICBtYXJnaW4tYm90dG9tOiAxZW07XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fc3VnZ2VzdGlvbnNfMmt2IHVsIHtcXG4gIGxpc3Qtc3R5bGU6IGRpc2M7XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fc3VnZ2VzdGlvbnNfMmt2IHVsIGxpIHtcXG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XFxuICBtYXJnaW46IDFlbSAwIDAgMWVtO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2ZpbGVfbFY0IHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fZmlsZV9sVjQgKyBsYWJlbCB7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZvbnQtc2l6ZTogMS4xMjVyZW07XFxuICBtYXJnaW4tYm90dG9tOiAwO1xcbn1cXG4ua2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2ZpbGVfbFY0ICsgbGFiZWwgc3BhbiB7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGhlaWdodDogMS4yZW07XFxuICBtYXJnaW46IDAuMmVtIDAuNWVtIDAgMDtcXG4gIHBhZGRpbmc6IDA7XFxuICB3aWR0aDogMS4yZW07XFxufVxcbi5rZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fZmlsZV9sVjQgKyBsYWJlbCBzcGFuIHN2ZyB7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiS2V5c3RvcmVfX2Zvcm1cIjogXCJrZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fZm9ybV82QV9cIixcblx0XCJLZXlzdG9yZVwiOiBcImtleXN0b3JlLWNvbm5lY3Qtc3R5bGVzX0tleXN0b3JlX3VMbFwiLFxuXHRcIktleXN0b3JlX19jb250ZW50XCI6IFwia2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2NvbnRlbnRfMnBVXCIsXG5cdFwiS2V5c3RvcmVfX2FjdGlvbnNcIjogXCJrZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9fYWN0aW9uc19QYVJcIixcblx0XCJLZXlzdG9yZV9faW5zdHJ1Y3Rpb25cIjogXCJrZXlzdG9yZS1jb25uZWN0LXN0eWxlc19LZXlzdG9yZV9faW5zdHJ1Y3Rpb25fMTRBXCIsXG5cdFwiS2V5c3RvcmVfX3N1Z2dlc3Rpb25zXCI6IFwia2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX3N1Z2dlc3Rpb25zXzJrdlwiLFxuXHRcIktleXN0b3JlX19maWxlXCI6IFwia2V5c3RvcmUtY29ubmVjdC1zdHlsZXNfS2V5c3RvcmVfX2ZpbGVfbFY0XCJcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJtb2R1bGVzXCI6dHJ1ZSxcImxvY2FsSWRlbnROYW1lXCI6XCJbbmFtZV1fW2xvY2FsXV9baGFzaDpiYXNlNjQ6M11cIn0hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvbGliIS4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9kZV9tb2R1bGVzL2ltcG9ydC1nbG9iLWxvYWRlciEuL3NyYy9tb2R1bGVzL2F1dGgvY29tcG9uZW50cy9rZXlzdG9yZS1jb25uZWN0L2tleXN0b3JlLWNvbm5lY3Quc3R5bGVzLmxlc3Ncbi8vIG1vZHVsZSBpZCA9IDIxODFcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2181\n");

/***/ }),

/***/ 2182:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return importAccount; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_services_augurjs__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_modules_auth_actions_login__ = __webpack_require__(1826);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utils_log_error__ = __webpack_require__(67);\n\n\n\n\nvar importAccount = function importAccount(password, keystore) {\n  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : __WEBPACK_IMPORTED_MODULE_2_utils_log_error__[\"a\" /* default */];\n  return function (dispatch, getState) {\n    return __WEBPACK_IMPORTED_MODULE_0_services_augurjs__[\"b\" /* augur */].accounts.importAccount(password, keystore, function (account) {\n      if (!account || !account.keystore) {\n        callback(true);\n        return console.error('importAccount failed:', account);\n      }\n\n      dispatch(Object(__WEBPACK_IMPORTED_MODULE_1_modules_auth_actions_login__[\"a\" /* login */])(keystore, password, function (err) {\n        return callback(err);\n      }));\n    });\n  };\n};\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(importAccount, 'importAccount', '/Users/do/augur/dev/augur/src/modules/auth/actions/import-account.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2FjdGlvbnMvaW1wb3J0LWFjY291bnQuanM/NDUzOCJdLCJuYW1lcyI6WyJpbXBvcnRBY2NvdW50IiwicGFzc3dvcmQiLCJrZXlzdG9yZSIsImNhbGxiYWNrIiwiZGlzcGF0Y2giLCJnZXRTdGF0ZSIsImF1Z3VyIiwiYWNjb3VudHMiLCJhY2NvdW50IiwiY29uc29sZSIsImVycm9yIiwibG9naW4iLCJlcnIiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRU8sSUFBTUEsZ0JBQWdCLFNBQWhCQSxhQUFnQixDQUFDQyxRQUFELEVBQVdDLFFBQVg7QUFBQSxNQUFxQkMsUUFBckIsdUVBQWdDLGdFQUFoQztBQUFBLFNBQTZDLFVBQUNDLFFBQUQsRUFBV0MsUUFBWDtBQUFBLFdBQ3hFLCtEQUFBQyxDQUFNQyxRQUFOLENBQWVQLGFBQWYsQ0FBNkJDLFFBQTdCLEVBQXVDQyxRQUF2QyxFQUFpRCxVQUFDTSxPQUFELEVBQWE7QUFDNUQsVUFBSSxDQUFDQSxPQUFELElBQVksQ0FBQ0EsUUFBUU4sUUFBekIsRUFBbUM7QUFDakNDLGlCQUFTLElBQVQ7QUFDQSxlQUFPTSxRQUFRQyxLQUFSLENBQWMsdUJBQWQsRUFBdUNGLE9BQXZDLENBQVA7QUFDRDs7QUFFREosZUFBUyxpRkFBQU8sQ0FBTVQsUUFBTixFQUFnQkQsUUFBaEIsRUFBMEI7QUFBQSxlQUFPRSxTQUFTUyxHQUFULENBQVA7QUFBQSxPQUExQixDQUFUO0FBQ0QsS0FQRCxDQUR3RTtBQUFBLEdBQTdDO0FBQUEsQ0FBdEI7Ozs7Ozs7O2dDQUFNWixhIiwiZmlsZSI6IjIxODIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhdWd1ciB9IGZyb20gJ3NlcnZpY2VzL2F1Z3VyanMnXG5pbXBvcnQgeyBsb2dpbiB9IGZyb20gJ21vZHVsZXMvYXV0aC9hY3Rpb25zL2xvZ2luJ1xuaW1wb3J0IGxvZ0Vycm9yIGZyb20gJ3V0aWxzL2xvZy1lcnJvcidcblxuZXhwb3J0IGNvbnN0IGltcG9ydEFjY291bnQgPSAocGFzc3dvcmQsIGtleXN0b3JlLCBjYWxsYmFjayA9IGxvZ0Vycm9yKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiAoXG4gIGF1Z3VyLmFjY291bnRzLmltcG9ydEFjY291bnQocGFzc3dvcmQsIGtleXN0b3JlLCAoYWNjb3VudCkgPT4ge1xuICAgIGlmICghYWNjb3VudCB8fCAhYWNjb3VudC5rZXlzdG9yZSkge1xuICAgICAgY2FsbGJhY2sodHJ1ZSlcbiAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKCdpbXBvcnRBY2NvdW50IGZhaWxlZDonLCBhY2NvdW50KVxuICAgIH1cblxuICAgIGRpc3BhdGNoKGxvZ2luKGtleXN0b3JlLCBwYXNzd29yZCwgZXJyID0+IGNhbGxiYWNrKGVycikpKVxuICB9KVxuKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9hY3Rpb25zL2ltcG9ydC1hY2NvdW50LmpzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2182\n");

/***/ }),

/***/ 2183:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_modules_auth_components_trezor_trezor__ = __webpack_require__(2184);\n\n\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])()(__WEBPACK_IMPORTED_MODULE_1_modules_auth_components_trezor_trezor__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/trezor.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvdHJlem9yLmpzPzZiZTkiXSwibmFtZXMiOlsiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBOztlQUVlLG9FQUFBQSxHQUFVLHNGQUFWLEM7O0FBQWYiLCJmaWxlIjoiMjE4My5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcbmltcG9ydCBUcmV6b3IgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvdHJlem9yL3RyZXpvcidcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdCgpKFRyZXpvcilcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2F1dGgvY29udGFpbmVycy90cmV6b3IuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2183\n");

/***/ }),

/***/ 2184:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Ledger;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n\n\nfunction Ledger() {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'span',\n    null,\n    'Traysor'\n  );\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Ledger, 'Ledger', '/Users/do/augur/dev/augur/src/modules/auth/components/trezor/trezor.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvdHJlem9yL3RyZXpvci5qc3g/OTk3ZCJdLCJuYW1lcyI6WyJMZWRnZXIiXSwibWFwcGluZ3MiOiI7OztBQUFBOztBQUVlLFNBQVNBLE1BQVQsR0FBa0I7QUFDL0IsU0FDRTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBREY7QUFHRDs7Ozs7Ozs7Z0NBSnVCQSxNIiwiZmlsZSI6IjIxODQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExlZGdlcigpIHtcbiAgcmV0dXJuIChcbiAgICA8c3Bhbj5UcmF5c29yPC9zcGFuPlxuICApXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvdHJlem9yL3RyZXpvci5qc3giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2184\n");

/***/ }),

/***/ 2185:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Trezor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n\n\nfunction Trezor() {\n  return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\n    'span',\n    null,\n    'Micromask'\n  );\n}\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(Trezor, 'Trezor', '/Users/do/augur/dev/augur/src/modules/auth/components/metamask/metamask.jsx');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbWV0YW1hc2svbWV0YW1hc2suanN4P2VhMzQiXSwibmFtZXMiOlsiVHJlem9yIl0sIm1hcHBpbmdzIjoiOzs7QUFBQTs7QUFFZSxTQUFTQSxNQUFULEdBQWtCO0FBQy9CLFNBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQURGO0FBR0Q7Ozs7Ozs7O2dDQUp1QkEsTSIsImZpbGUiOiIyMTg1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUcmV6b3IoKSB7XG4gIHJldHVybiAoXG4gICAgPHNwYW4+TWljcm9tYXNrPC9zcGFuPlxuICApXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvbWV0YW1hc2svbWV0YW1hc2suanN4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///2185\n");

/***/ }),

/***/ 2186:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return PARAMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ITEMS; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__ = __webpack_require__(1564);\n\n\nvar PARAMS = {\n  AIRBITZ: 'airbitz',\n  UPORT: 'uport',\n  KEYSTORE: 'keystore',\n  TREZOR: 'trezor',\n  LEDGER: 'ledger',\n  METAMASK: 'metamask'\n};\n\nvar ITEMS = [{\n  param: PARAMS.AIRBITZ,\n  title: 'Airbitz',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"a\" /* Airbitz */],\n  default: true\n}, {\n  param: PARAMS.METAMASK,\n  title: 'Metamask',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"m\" /* Metamask */]\n}, {\n  param: PARAMS.UPORT,\n  title: 'uPort',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"o\" /* uPort */]\n}, {\n  param: PARAMS.KEYSTORE,\n  title: 'Keystore',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"h\" /* Key */]\n}, {\n  param: PARAMS.TREZOR,\n  title: 'Trezor',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"n\" /* Trezor */]\n}, {\n  param: PARAMS.LEDGER,\n  title: 'Ledger',\n  icon: __WEBPACK_IMPORTED_MODULE_0_modules_common_components_icons_icons__[\"i\" /* Ledger */]\n}];\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(PARAMS, 'PARAMS', '/Users/do/augur/dev/augur/src/modules/auth/constants/connect-nav.js');\n\n  __REACT_HOT_LOADER__.register(ITEMS, 'ITEMS', '/Users/do/augur/dev/augur/src/modules/auth/constants/connect-nav.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnN0YW50cy9jb25uZWN0LW5hdi5qcz9lNWY4Il0sIm5hbWVzIjpbIlBBUkFNUyIsIkFJUkJJVFoiLCJVUE9SVCIsIktFWVNUT1JFIiwiVFJFWk9SIiwiTEVER0VSIiwiTUVUQU1BU0siLCJJVEVNUyIsInBhcmFtIiwidGl0bGUiLCJpY29uIiwiZGVmYXVsdCIsIk1ldGFtYXNrIiwidVBvcnQiLCJLZXkiLCJUcmV6b3IiLCJMZWRnZXIiXSwibWFwcGluZ3MiOiI7OztBQUFBOztBQUVPLElBQU1BLFNBQVM7QUFDcEJDLFdBQVMsU0FEVztBQUVwQkMsU0FBTyxPQUZhO0FBR3BCQyxZQUFVLFVBSFU7QUFJcEJDLFVBQVEsUUFKWTtBQUtwQkMsVUFBUSxRQUxZO0FBTXBCQyxZQUFVO0FBTlUsQ0FBZjs7QUFTQSxJQUFNQyxRQUFRLENBQ25CO0FBQ0VDLFNBQU9SLE9BQU9DLE9BRGhCO0FBRUVRLFNBQU8sU0FGVDtBQUdFQyxRQUFNLHNGQUhSO0FBSUVDLFdBQVM7QUFKWCxDQURtQixFQU9uQjtBQUNFSCxTQUFPUixPQUFPTSxRQURoQjtBQUVFRyxTQUFPLFVBRlQ7QUFHRUMsUUFBTSx1RkFBQUU7QUFIUixDQVBtQixFQVluQjtBQUNFSixTQUFPUixPQUFPRSxLQURoQjtBQUVFTyxTQUFPLE9BRlQ7QUFHRUMsUUFBTSxvRkFBQUc7QUFIUixDQVptQixFQWlCbkI7QUFDRUwsU0FBT1IsT0FBT0csUUFEaEI7QUFFRU0sU0FBTyxVQUZUO0FBR0VDLFFBQU0sa0ZBQUFJO0FBSFIsQ0FqQm1CLEVBc0JuQjtBQUNFTixTQUFPUixPQUFPSSxNQURoQjtBQUVFSyxTQUFPLFFBRlQ7QUFHRUMsUUFBTSxxRkFBQUs7QUFIUixDQXRCbUIsRUEyQm5CO0FBQ0VQLFNBQU9SLE9BQU9LLE1BRGhCO0FBRUVJLFNBQU8sUUFGVDtBQUdFQyxRQUFNLHFGQUFBTTtBQUhSLENBM0JtQixDQUFkOzs7Ozs7OztnQ0FUTWhCLE07O2dDQVNBTyxLIiwiZmlsZSI6IjIxODYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMZWRnZXIsIEFpcmJpdHosIHVQb3J0LCBUcmV6b3IsIEtleSwgTWV0YW1hc2sgfSBmcm9tICdtb2R1bGVzL2NvbW1vbi9jb21wb25lbnRzL2ljb25zL2ljb25zJ1xuXG5leHBvcnQgY29uc3QgUEFSQU1TID0ge1xuICBBSVJCSVRaOiAnYWlyYml0eicsXG4gIFVQT1JUOiAndXBvcnQnLFxuICBLRVlTVE9SRTogJ2tleXN0b3JlJyxcbiAgVFJFWk9SOiAndHJlem9yJyxcbiAgTEVER0VSOiAnbGVkZ2VyJyxcbiAgTUVUQU1BU0s6ICdtZXRhbWFzaydcbn1cblxuZXhwb3J0IGNvbnN0IElURU1TID0gW1xuICB7XG4gICAgcGFyYW06IFBBUkFNUy5BSVJCSVRaLFxuICAgIHRpdGxlOiAnQWlyYml0eicsXG4gICAgaWNvbjogQWlyYml0eixcbiAgICBkZWZhdWx0OiB0cnVlXG4gIH0sXG4gIHtcbiAgICBwYXJhbTogUEFSQU1TLk1FVEFNQVNLLFxuICAgIHRpdGxlOiAnTWV0YW1hc2snLFxuICAgIGljb246IE1ldGFtYXNrXG4gIH0sXG4gIHtcbiAgICBwYXJhbTogUEFSQU1TLlVQT1JULFxuICAgIHRpdGxlOiAndVBvcnQnLFxuICAgIGljb246IHVQb3J0XG4gIH0sXG4gIHtcbiAgICBwYXJhbTogUEFSQU1TLktFWVNUT1JFLFxuICAgIHRpdGxlOiAnS2V5c3RvcmUnLFxuICAgIGljb246IEtleVxuICB9LFxuICB7XG4gICAgcGFyYW06IFBBUkFNUy5UUkVaT1IsXG4gICAgdGl0bGU6ICdUcmV6b3InLFxuICAgIGljb246IFRyZXpvclxuICB9LFxuICB7XG4gICAgcGFyYW06IFBBUkFNUy5MRURHRVIsXG4gICAgdGl0bGU6ICdMZWRnZXInLFxuICAgIGljb246IExlZGdlclxuICB9XG5dXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnN0YW50cy9jb25uZWN0LW5hdi5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///2186\n");

/***/ }),

/***/ 846:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(360);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_router_dom__ = __webpack_require__(93);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_modules_auth_components_connect_connect__ = __webpack_require__(2171);\n\n\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isMobile: state.isMobile\n  };\n};\n\nvar _default = Object(__WEBPACK_IMPORTED_MODULE_1_react_router_dom__[\"f\" /* withRouter */])(Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__[\"b\" /* connect */])(mapStateToProps)(__WEBPACK_IMPORTED_MODULE_2_modules_auth_components_connect_connect__[\"a\" /* default */]));\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_default);\n;\n\nvar _temp = function () {\n  if (typeof __REACT_HOT_LOADER__ === 'undefined') {\n    return;\n  }\n\n  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', '/Users/do/augur/dev/augur/src/modules/auth/containers/connect.js');\n\n  __REACT_HOT_LOADER__.register(_default, 'default', '/Users/do/augur/dev/augur/src/modules/auth/containers/connect.js');\n}();\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbW9kdWxlcy9hdXRoL2NvbnRhaW5lcnMvY29ubmVjdC5qcz8wNDI1Il0sIm5hbWVzIjpbIm1hcFN0YXRlVG9Qcm9wcyIsImlzTW9iaWxlIiwic3RhdGUiLCJ3aXRoUm91dGVyIiwiY29ubmVjdCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQSxJQUFNQSxrQkFBa0IsU0FBbEJBLGVBQWtCO0FBQUEsU0FBVTtBQUNoQ0MsY0FBVUMsTUFBTUQ7QUFEZ0IsR0FBVjtBQUFBLENBQXhCOztlQUllLDRFQUFBRSxDQUFXLG9FQUFBQyxDQUFRSixlQUFSLEVBQXlCLHdGQUF6QixDQUFYLEM7O0FBQWY7Ozs7Ozs7O2dDQUpNQSxlIiwiZmlsZSI6Ijg0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCdcbmltcG9ydCB7IHdpdGhSb3V0ZXIgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJ1xuaW1wb3J0IENvbm5lY3QgZnJvbSAnbW9kdWxlcy9hdXRoL2NvbXBvbmVudHMvY29ubmVjdC9jb25uZWN0J1xuXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiAoe1xuICBpc01vYmlsZTogc3RhdGUuaXNNb2JpbGVcbn0pXG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhSb3V0ZXIoY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMpKENvbm5lY3QpKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvYXV0aC9jb250YWluZXJzL2Nvbm5lY3QuanMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///846\n");

/***/ })

});